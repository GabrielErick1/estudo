
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Cliente
 * 
 */
export type Cliente = $Result.DefaultSelection<Prisma.$ClientePayload>
/**
 * Model Funcionario
 * 
 */
export type Funcionario = $Result.DefaultSelection<Prisma.$FuncionarioPayload>
/**
 * Model Carro
 * 
 */
export type Carro = $Result.DefaultSelection<Prisma.$CarroPayload>
/**
 * Model Servico
 * 
 */
export type Servico = $Result.DefaultSelection<Prisma.$ServicoPayload>
/**
 * Model Peca
 * 
 */
export type Peca = $Result.DefaultSelection<Prisma.$PecaPayload>
/**
 * Model OrdemDeServico
 * 
 */
export type OrdemDeServico = $Result.DefaultSelection<Prisma.$OrdemDeServicoPayload>
/**
 * Model OrdemEstoque
 * 
 */
export type OrdemEstoque = $Result.DefaultSelection<Prisma.$OrdemEstoquePayload>
/**
 * Model Revisao
 * 
 */
export type Revisao = $Result.DefaultSelection<Prisma.$RevisaoPayload>
/**
 * Model Pagamento
 * 
 */
export type Pagamento = $Result.DefaultSelection<Prisma.$PagamentoPayload>
/**
 * Model OrdemServicoPagamento
 * 
 */
export type OrdemServicoPagamento = $Result.DefaultSelection<Prisma.$OrdemServicoPagamentoPayload>
/**
 * Model Notificacao
 * 
 */
export type Notificacao = $Result.DefaultSelection<Prisma.$NotificacaoPayload>
/**
 * Model Promocao
 * 
 */
export type Promocao = $Result.DefaultSelection<Prisma.$PromocaoPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const TipoCliente: {
  COMUM: 'COMUM'
};

export type TipoCliente = (typeof TipoCliente)[keyof typeof TipoCliente]


export const TipoFuncionario: {
  super_admin: 'super_admin',
  moderador: 'moderador',
  admin: 'admin',
  rh: 'rh',
  estoque: 'estoque',
  funcionario: 'funcionario'
};

export type TipoFuncionario = (typeof TipoFuncionario)[keyof typeof TipoFuncionario]


export const StatusOrdem: {
  EM_ANDAMENTO: 'EM_ANDAMENTO',
  CONCLUIDA: 'CONCLUIDA',
  CANCELADA: 'CANCELADA'
};

export type StatusOrdem = (typeof StatusOrdem)[keyof typeof StatusOrdem]


export const FormaPagamento: {
  DINHEIRO: 'DINHEIRO',
  CARTAO: 'CARTAO',
  PIX: 'PIX'
};

export type FormaPagamento = (typeof FormaPagamento)[keyof typeof FormaPagamento]


export const TipoNotificacao: {
  REVISAO: 'REVISAO',
  ORDEM_SERVICO: 'ORDEM_SERVICO',
  PROMOCAO: 'PROMOCAO'
};

export type TipoNotificacao = (typeof TipoNotificacao)[keyof typeof TipoNotificacao]

}

export type TipoCliente = $Enums.TipoCliente

export const TipoCliente: typeof $Enums.TipoCliente

export type TipoFuncionario = $Enums.TipoFuncionario

export const TipoFuncionario: typeof $Enums.TipoFuncionario

export type StatusOrdem = $Enums.StatusOrdem

export const StatusOrdem: typeof $Enums.StatusOrdem

export type FormaPagamento = $Enums.FormaPagamento

export const FormaPagamento: typeof $Enums.FormaPagamento

export type TipoNotificacao = $Enums.TipoNotificacao

export const TipoNotificacao: typeof $Enums.TipoNotificacao

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Clientes
 * const clientes = await prisma.cliente.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Clientes
   * const clientes = await prisma.cliente.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.cliente`: Exposes CRUD operations for the **Cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.ClienteDelegate<ExtArgs>;

  /**
   * `prisma.funcionario`: Exposes CRUD operations for the **Funcionario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Funcionarios
    * const funcionarios = await prisma.funcionario.findMany()
    * ```
    */
  get funcionario(): Prisma.FuncionarioDelegate<ExtArgs>;

  /**
   * `prisma.carro`: Exposes CRUD operations for the **Carro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Carros
    * const carros = await prisma.carro.findMany()
    * ```
    */
  get carro(): Prisma.CarroDelegate<ExtArgs>;

  /**
   * `prisma.servico`: Exposes CRUD operations for the **Servico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Servicos
    * const servicos = await prisma.servico.findMany()
    * ```
    */
  get servico(): Prisma.ServicoDelegate<ExtArgs>;

  /**
   * `prisma.peca`: Exposes CRUD operations for the **Peca** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pecas
    * const pecas = await prisma.peca.findMany()
    * ```
    */
  get peca(): Prisma.PecaDelegate<ExtArgs>;

  /**
   * `prisma.ordemDeServico`: Exposes CRUD operations for the **OrdemDeServico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrdemDeServicos
    * const ordemDeServicos = await prisma.ordemDeServico.findMany()
    * ```
    */
  get ordemDeServico(): Prisma.OrdemDeServicoDelegate<ExtArgs>;

  /**
   * `prisma.ordemEstoque`: Exposes CRUD operations for the **OrdemEstoque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrdemEstoques
    * const ordemEstoques = await prisma.ordemEstoque.findMany()
    * ```
    */
  get ordemEstoque(): Prisma.OrdemEstoqueDelegate<ExtArgs>;

  /**
   * `prisma.revisao`: Exposes CRUD operations for the **Revisao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Revisaos
    * const revisaos = await prisma.revisao.findMany()
    * ```
    */
  get revisao(): Prisma.RevisaoDelegate<ExtArgs>;

  /**
   * `prisma.pagamento`: Exposes CRUD operations for the **Pagamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagamentos
    * const pagamentos = await prisma.pagamento.findMany()
    * ```
    */
  get pagamento(): Prisma.PagamentoDelegate<ExtArgs>;

  /**
   * `prisma.ordemServicoPagamento`: Exposes CRUD operations for the **OrdemServicoPagamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrdemServicoPagamentos
    * const ordemServicoPagamentos = await prisma.ordemServicoPagamento.findMany()
    * ```
    */
  get ordemServicoPagamento(): Prisma.OrdemServicoPagamentoDelegate<ExtArgs>;

  /**
   * `prisma.notificacao`: Exposes CRUD operations for the **Notificacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notificacaos
    * const notificacaos = await prisma.notificacao.findMany()
    * ```
    */
  get notificacao(): Prisma.NotificacaoDelegate<ExtArgs>;

  /**
   * `prisma.promocao`: Exposes CRUD operations for the **Promocao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promocaos
    * const promocaos = await prisma.promocao.findMany()
    * ```
    */
  get promocao(): Prisma.PromocaoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.18.0
   * Query Engine version: 4c784e32044a8a016d99474bd02a3b6123742169
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Cliente: 'Cliente',
    Funcionario: 'Funcionario',
    Carro: 'Carro',
    Servico: 'Servico',
    Peca: 'Peca',
    OrdemDeServico: 'OrdemDeServico',
    OrdemEstoque: 'OrdemEstoque',
    Revisao: 'Revisao',
    Pagamento: 'Pagamento',
    OrdemServicoPagamento: 'OrdemServicoPagamento',
    Notificacao: 'Notificacao',
    Promocao: 'Promocao'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "cliente" | "funcionario" | "carro" | "servico" | "peca" | "ordemDeServico" | "ordemEstoque" | "revisao" | "pagamento" | "ordemServicoPagamento" | "notificacao" | "promocao"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Cliente: {
        payload: Prisma.$ClientePayload<ExtArgs>
        fields: Prisma.ClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findFirst: {
            args: Prisma.ClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findMany: {
            args: Prisma.ClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          create: {
            args: Prisma.ClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          createMany: {
            args: Prisma.ClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          delete: {
            args: Prisma.ClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          update: {
            args: Prisma.ClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          deleteMany: {
            args: Prisma.ClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.ClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      Funcionario: {
        payload: Prisma.$FuncionarioPayload<ExtArgs>
        fields: Prisma.FuncionarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FuncionarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FuncionarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          findFirst: {
            args: Prisma.FuncionarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FuncionarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          findMany: {
            args: Prisma.FuncionarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>[]
          }
          create: {
            args: Prisma.FuncionarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          createMany: {
            args: Prisma.FuncionarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FuncionarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>[]
          }
          delete: {
            args: Prisma.FuncionarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          update: {
            args: Prisma.FuncionarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          deleteMany: {
            args: Prisma.FuncionarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FuncionarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FuncionarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          aggregate: {
            args: Prisma.FuncionarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFuncionario>
          }
          groupBy: {
            args: Prisma.FuncionarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<FuncionarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.FuncionarioCountArgs<ExtArgs>
            result: $Utils.Optional<FuncionarioCountAggregateOutputType> | number
          }
        }
      }
      Carro: {
        payload: Prisma.$CarroPayload<ExtArgs>
        fields: Prisma.CarroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CarroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CarroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload>
          }
          findFirst: {
            args: Prisma.CarroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CarroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload>
          }
          findMany: {
            args: Prisma.CarroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload>[]
          }
          create: {
            args: Prisma.CarroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload>
          }
          createMany: {
            args: Prisma.CarroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CarroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload>[]
          }
          delete: {
            args: Prisma.CarroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload>
          }
          update: {
            args: Prisma.CarroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload>
          }
          deleteMany: {
            args: Prisma.CarroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CarroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CarroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroPayload>
          }
          aggregate: {
            args: Prisma.CarroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCarro>
          }
          groupBy: {
            args: Prisma.CarroGroupByArgs<ExtArgs>
            result: $Utils.Optional<CarroGroupByOutputType>[]
          }
          count: {
            args: Prisma.CarroCountArgs<ExtArgs>
            result: $Utils.Optional<CarroCountAggregateOutputType> | number
          }
        }
      }
      Servico: {
        payload: Prisma.$ServicoPayload<ExtArgs>
        fields: Prisma.ServicoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServicoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServicoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload>
          }
          findFirst: {
            args: Prisma.ServicoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServicoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload>
          }
          findMany: {
            args: Prisma.ServicoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload>[]
          }
          create: {
            args: Prisma.ServicoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload>
          }
          createMany: {
            args: Prisma.ServicoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServicoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload>[]
          }
          delete: {
            args: Prisma.ServicoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload>
          }
          update: {
            args: Prisma.ServicoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload>
          }
          deleteMany: {
            args: Prisma.ServicoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServicoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ServicoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicoPayload>
          }
          aggregate: {
            args: Prisma.ServicoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServico>
          }
          groupBy: {
            args: Prisma.ServicoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServicoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServicoCountArgs<ExtArgs>
            result: $Utils.Optional<ServicoCountAggregateOutputType> | number
          }
        }
      }
      Peca: {
        payload: Prisma.$PecaPayload<ExtArgs>
        fields: Prisma.PecaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PecaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PecaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload>
          }
          findFirst: {
            args: Prisma.PecaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PecaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload>
          }
          findMany: {
            args: Prisma.PecaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload>[]
          }
          create: {
            args: Prisma.PecaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload>
          }
          createMany: {
            args: Prisma.PecaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PecaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload>[]
          }
          delete: {
            args: Prisma.PecaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload>
          }
          update: {
            args: Prisma.PecaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload>
          }
          deleteMany: {
            args: Prisma.PecaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PecaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PecaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecaPayload>
          }
          aggregate: {
            args: Prisma.PecaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePeca>
          }
          groupBy: {
            args: Prisma.PecaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PecaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PecaCountArgs<ExtArgs>
            result: $Utils.Optional<PecaCountAggregateOutputType> | number
          }
        }
      }
      OrdemDeServico: {
        payload: Prisma.$OrdemDeServicoPayload<ExtArgs>
        fields: Prisma.OrdemDeServicoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrdemDeServicoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrdemDeServicoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload>
          }
          findFirst: {
            args: Prisma.OrdemDeServicoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrdemDeServicoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload>
          }
          findMany: {
            args: Prisma.OrdemDeServicoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload>[]
          }
          create: {
            args: Prisma.OrdemDeServicoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload>
          }
          createMany: {
            args: Prisma.OrdemDeServicoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrdemDeServicoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload>[]
          }
          delete: {
            args: Prisma.OrdemDeServicoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload>
          }
          update: {
            args: Prisma.OrdemDeServicoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload>
          }
          deleteMany: {
            args: Prisma.OrdemDeServicoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrdemDeServicoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrdemDeServicoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemDeServicoPayload>
          }
          aggregate: {
            args: Prisma.OrdemDeServicoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrdemDeServico>
          }
          groupBy: {
            args: Prisma.OrdemDeServicoGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdemDeServicoGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrdemDeServicoCountArgs<ExtArgs>
            result: $Utils.Optional<OrdemDeServicoCountAggregateOutputType> | number
          }
        }
      }
      OrdemEstoque: {
        payload: Prisma.$OrdemEstoquePayload<ExtArgs>
        fields: Prisma.OrdemEstoqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrdemEstoqueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrdemEstoqueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload>
          }
          findFirst: {
            args: Prisma.OrdemEstoqueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrdemEstoqueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload>
          }
          findMany: {
            args: Prisma.OrdemEstoqueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload>[]
          }
          create: {
            args: Prisma.OrdemEstoqueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload>
          }
          createMany: {
            args: Prisma.OrdemEstoqueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrdemEstoqueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload>[]
          }
          delete: {
            args: Prisma.OrdemEstoqueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload>
          }
          update: {
            args: Prisma.OrdemEstoqueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload>
          }
          deleteMany: {
            args: Prisma.OrdemEstoqueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrdemEstoqueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrdemEstoqueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemEstoquePayload>
          }
          aggregate: {
            args: Prisma.OrdemEstoqueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrdemEstoque>
          }
          groupBy: {
            args: Prisma.OrdemEstoqueGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdemEstoqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrdemEstoqueCountArgs<ExtArgs>
            result: $Utils.Optional<OrdemEstoqueCountAggregateOutputType> | number
          }
        }
      }
      Revisao: {
        payload: Prisma.$RevisaoPayload<ExtArgs>
        fields: Prisma.RevisaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RevisaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RevisaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload>
          }
          findFirst: {
            args: Prisma.RevisaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RevisaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload>
          }
          findMany: {
            args: Prisma.RevisaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload>[]
          }
          create: {
            args: Prisma.RevisaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload>
          }
          createMany: {
            args: Prisma.RevisaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RevisaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload>[]
          }
          delete: {
            args: Prisma.RevisaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload>
          }
          update: {
            args: Prisma.RevisaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload>
          }
          deleteMany: {
            args: Prisma.RevisaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RevisaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RevisaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisaoPayload>
          }
          aggregate: {
            args: Prisma.RevisaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRevisao>
          }
          groupBy: {
            args: Prisma.RevisaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<RevisaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.RevisaoCountArgs<ExtArgs>
            result: $Utils.Optional<RevisaoCountAggregateOutputType> | number
          }
        }
      }
      Pagamento: {
        payload: Prisma.$PagamentoPayload<ExtArgs>
        fields: Prisma.PagamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PagamentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PagamentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          findFirst: {
            args: Prisma.PagamentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PagamentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          findMany: {
            args: Prisma.PagamentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>[]
          }
          create: {
            args: Prisma.PagamentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          createMany: {
            args: Prisma.PagamentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PagamentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>[]
          }
          delete: {
            args: Prisma.PagamentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          update: {
            args: Prisma.PagamentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          deleteMany: {
            args: Prisma.PagamentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PagamentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PagamentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          aggregate: {
            args: Prisma.PagamentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePagamento>
          }
          groupBy: {
            args: Prisma.PagamentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PagamentoCountArgs<ExtArgs>
            result: $Utils.Optional<PagamentoCountAggregateOutputType> | number
          }
        }
      }
      OrdemServicoPagamento: {
        payload: Prisma.$OrdemServicoPagamentoPayload<ExtArgs>
        fields: Prisma.OrdemServicoPagamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrdemServicoPagamentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrdemServicoPagamentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload>
          }
          findFirst: {
            args: Prisma.OrdemServicoPagamentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrdemServicoPagamentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload>
          }
          findMany: {
            args: Prisma.OrdemServicoPagamentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload>[]
          }
          create: {
            args: Prisma.OrdemServicoPagamentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload>
          }
          createMany: {
            args: Prisma.OrdemServicoPagamentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrdemServicoPagamentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload>[]
          }
          delete: {
            args: Prisma.OrdemServicoPagamentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload>
          }
          update: {
            args: Prisma.OrdemServicoPagamentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload>
          }
          deleteMany: {
            args: Prisma.OrdemServicoPagamentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrdemServicoPagamentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrdemServicoPagamentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdemServicoPagamentoPayload>
          }
          aggregate: {
            args: Prisma.OrdemServicoPagamentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrdemServicoPagamento>
          }
          groupBy: {
            args: Prisma.OrdemServicoPagamentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdemServicoPagamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrdemServicoPagamentoCountArgs<ExtArgs>
            result: $Utils.Optional<OrdemServicoPagamentoCountAggregateOutputType> | number
          }
        }
      }
      Notificacao: {
        payload: Prisma.$NotificacaoPayload<ExtArgs>
        fields: Prisma.NotificacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          findFirst: {
            args: Prisma.NotificacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          findMany: {
            args: Prisma.NotificacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>[]
          }
          create: {
            args: Prisma.NotificacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          createMany: {
            args: Prisma.NotificacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>[]
          }
          delete: {
            args: Prisma.NotificacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          update: {
            args: Prisma.NotificacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          deleteMany: {
            args: Prisma.NotificacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          aggregate: {
            args: Prisma.NotificacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificacao>
          }
          groupBy: {
            args: Prisma.NotificacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificacaoCountArgs<ExtArgs>
            result: $Utils.Optional<NotificacaoCountAggregateOutputType> | number
          }
        }
      }
      Promocao: {
        payload: Prisma.$PromocaoPayload<ExtArgs>
        fields: Prisma.PromocaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromocaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromocaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload>
          }
          findFirst: {
            args: Prisma.PromocaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromocaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload>
          }
          findMany: {
            args: Prisma.PromocaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload>[]
          }
          create: {
            args: Prisma.PromocaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload>
          }
          createMany: {
            args: Prisma.PromocaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromocaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload>[]
          }
          delete: {
            args: Prisma.PromocaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload>
          }
          update: {
            args: Prisma.PromocaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload>
          }
          deleteMany: {
            args: Prisma.PromocaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromocaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PromocaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromocaoPayload>
          }
          aggregate: {
            args: Prisma.PromocaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromocao>
          }
          groupBy: {
            args: Prisma.PromocaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromocaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromocaoCountArgs<ExtArgs>
            result: $Utils.Optional<PromocaoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    carros: number
    ordensDeServico: number
    revisoes: number
    funcionariosExecutores: number
    notificacoes: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    carros?: boolean | ClienteCountOutputTypeCountCarrosArgs
    ordensDeServico?: boolean | ClienteCountOutputTypeCountOrdensDeServicoArgs
    revisoes?: boolean | ClienteCountOutputTypeCountRevisoesArgs
    funcionariosExecutores?: boolean | ClienteCountOutputTypeCountFuncionariosExecutoresArgs
    notificacoes?: boolean | ClienteCountOutputTypeCountNotificacoesArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountCarrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarroWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountOrdensDeServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemDeServicoWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountRevisoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RevisaoWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountFuncionariosExecutoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountNotificacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacaoWhereInput
  }


  /**
   * Count Type FuncionarioCountOutputType
   */

  export type FuncionarioCountOutputType = {
    clientesCriados: number
    ordensCriadas: number
    ordensAprovadas: number
    pecasCriadas: number
    servicosExecutados: number
    ordensDeEstoque: number
    funcionariosCriados: number
  }

  export type FuncionarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientesCriados?: boolean | FuncionarioCountOutputTypeCountClientesCriadosArgs
    ordensCriadas?: boolean | FuncionarioCountOutputTypeCountOrdensCriadasArgs
    ordensAprovadas?: boolean | FuncionarioCountOutputTypeCountOrdensAprovadasArgs
    pecasCriadas?: boolean | FuncionarioCountOutputTypeCountPecasCriadasArgs
    servicosExecutados?: boolean | FuncionarioCountOutputTypeCountServicosExecutadosArgs
    ordensDeEstoque?: boolean | FuncionarioCountOutputTypeCountOrdensDeEstoqueArgs
    funcionariosCriados?: boolean | FuncionarioCountOutputTypeCountFuncionariosCriadosArgs
  }

  // Custom InputTypes
  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioCountOutputType
     */
    select?: FuncionarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountClientesCriadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountOrdensCriadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemDeServicoWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountOrdensAprovadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemDeServicoWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountPecasCriadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecaWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountServicosExecutadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountOrdensDeEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemEstoqueWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountFuncionariosCriadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioWhereInput
  }


  /**
   * Count Type CarroCountOutputType
   */

  export type CarroCountOutputType = {
    revisoes: number
  }

  export type CarroCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    revisoes?: boolean | CarroCountOutputTypeCountRevisoesArgs
  }

  // Custom InputTypes
  /**
   * CarroCountOutputType without action
   */
  export type CarroCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroCountOutputType
     */
    select?: CarroCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CarroCountOutputType without action
   */
  export type CarroCountOutputTypeCountRevisoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RevisaoWhereInput
  }


  /**
   * Count Type ServicoCountOutputType
   */

  export type ServicoCountOutputType = {
    ordensDeServico: number
    Promocao: number
  }

  export type ServicoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordensDeServico?: boolean | ServicoCountOutputTypeCountOrdensDeServicoArgs
    Promocao?: boolean | ServicoCountOutputTypeCountPromocaoArgs
  }

  // Custom InputTypes
  /**
   * ServicoCountOutputType without action
   */
  export type ServicoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServicoCountOutputType
     */
    select?: ServicoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ServicoCountOutputType without action
   */
  export type ServicoCountOutputTypeCountOrdensDeServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemDeServicoWhereInput
  }

  /**
   * ServicoCountOutputType without action
   */
  export type ServicoCountOutputTypeCountPromocaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromocaoWhereInput
  }


  /**
   * Count Type PecaCountOutputType
   */

  export type PecaCountOutputType = {
    ordensDeServico: number
  }

  export type PecaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordensDeServico?: boolean | PecaCountOutputTypeCountOrdensDeServicoArgs
  }

  // Custom InputTypes
  /**
   * PecaCountOutputType without action
   */
  export type PecaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecaCountOutputType
     */
    select?: PecaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PecaCountOutputType without action
   */
  export type PecaCountOutputTypeCountOrdensDeServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemDeServicoWhereInput
  }


  /**
   * Count Type OrdemDeServicoCountOutputType
   */

  export type OrdemDeServicoCountOutputType = {
    pecasUsadas: number
    pagamentos: number
    Notificacao: number
  }

  export type OrdemDeServicoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pecasUsadas?: boolean | OrdemDeServicoCountOutputTypeCountPecasUsadasArgs
    pagamentos?: boolean | OrdemDeServicoCountOutputTypeCountPagamentosArgs
    Notificacao?: boolean | OrdemDeServicoCountOutputTypeCountNotificacaoArgs
  }

  // Custom InputTypes
  /**
   * OrdemDeServicoCountOutputType without action
   */
  export type OrdemDeServicoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServicoCountOutputType
     */
    select?: OrdemDeServicoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdemDeServicoCountOutputType without action
   */
  export type OrdemDeServicoCountOutputTypeCountPecasUsadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecaWhereInput
  }

  /**
   * OrdemDeServicoCountOutputType without action
   */
  export type OrdemDeServicoCountOutputTypeCountPagamentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemServicoPagamentoWhereInput
  }

  /**
   * OrdemDeServicoCountOutputType without action
   */
  export type OrdemDeServicoCountOutputTypeCountNotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacaoWhereInput
  }


  /**
   * Count Type RevisaoCountOutputType
   */

  export type RevisaoCountOutputType = {
    Notificacao: number
  }

  export type RevisaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Notificacao?: boolean | RevisaoCountOutputTypeCountNotificacaoArgs
  }

  // Custom InputTypes
  /**
   * RevisaoCountOutputType without action
   */
  export type RevisaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RevisaoCountOutputType
     */
    select?: RevisaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RevisaoCountOutputType without action
   */
  export type RevisaoCountOutputTypeCountNotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacaoWhereInput
  }


  /**
   * Count Type PagamentoCountOutputType
   */

  export type PagamentoCountOutputType = {
    ordens: number
  }

  export type PagamentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordens?: boolean | PagamentoCountOutputTypeCountOrdensArgs
  }

  // Custom InputTypes
  /**
   * PagamentoCountOutputType without action
   */
  export type PagamentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagamentoCountOutputType
     */
    select?: PagamentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PagamentoCountOutputType without action
   */
  export type PagamentoCountOutputTypeCountOrdensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemServicoPagamentoWhereInput
  }


  /**
   * Count Type PromocaoCountOutputType
   */

  export type PromocaoCountOutputType = {
    notificacoes: number
  }

  export type PromocaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notificacoes?: boolean | PromocaoCountOutputTypeCountNotificacoesArgs
  }

  // Custom InputTypes
  /**
   * PromocaoCountOutputType without action
   */
  export type PromocaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromocaoCountOutputType
     */
    select?: PromocaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PromocaoCountOutputType without action
   */
  export type PromocaoCountOutputTypeCountNotificacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacaoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteMinAggregateOutputType = {
    id: string | null
    nome: string | null
    telefone: string | null
    email: string | null
    cpf: string | null
    cnpj: string | null
    dataDeNascimento: Date | null
    password: string | null
    tipo: $Enums.TipoCliente | null
    clienteCadastrador: string | null
    criadoPorId: string | null
  }

  export type ClienteMaxAggregateOutputType = {
    id: string | null
    nome: string | null
    telefone: string | null
    email: string | null
    cpf: string | null
    cnpj: string | null
    dataDeNascimento: Date | null
    password: string | null
    tipo: $Enums.TipoCliente | null
    clienteCadastrador: string | null
    criadoPorId: string | null
  }

  export type ClienteCountAggregateOutputType = {
    id: number
    nome: number
    telefone: number
    email: number
    cpf: number
    cnpj: number
    dataDeNascimento: number
    password: number
    tipo: number
    clienteCadastrador: number
    criadoPorId: number
    _all: number
  }


  export type ClienteMinAggregateInputType = {
    id?: true
    nome?: true
    telefone?: true
    email?: true
    cpf?: true
    cnpj?: true
    dataDeNascimento?: true
    password?: true
    tipo?: true
    clienteCadastrador?: true
    criadoPorId?: true
  }

  export type ClienteMaxAggregateInputType = {
    id?: true
    nome?: true
    telefone?: true
    email?: true
    cpf?: true
    cnpj?: true
    dataDeNascimento?: true
    password?: true
    tipo?: true
    clienteCadastrador?: true
    criadoPorId?: true
  }

  export type ClienteCountAggregateInputType = {
    id?: true
    nome?: true
    telefone?: true
    email?: true
    cpf?: true
    cnpj?: true
    dataDeNascimento?: true
    password?: true
    tipo?: true
    clienteCadastrador?: true
    criadoPorId?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cliente to aggregate.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type ClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithAggregationInput | ClienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: ClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    id: string
    nome: string
    telefone: string | null
    email: string
    cpf: string | null
    cnpj: string | null
    dataDeNascimento: Date | null
    password: string
    tipo: $Enums.TipoCliente
    clienteCadastrador: string | null
    criadoPorId: string | null
    _count: ClienteCountAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends ClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    telefone?: boolean
    email?: boolean
    cpf?: boolean
    cnpj?: boolean
    dataDeNascimento?: boolean
    password?: boolean
    tipo?: boolean
    clienteCadastrador?: boolean
    criadoPorId?: boolean
    carros?: boolean | Cliente$carrosArgs<ExtArgs>
    ordensDeServico?: boolean | Cliente$ordensDeServicoArgs<ExtArgs>
    revisoes?: boolean | Cliente$revisoesArgs<ExtArgs>
    criadoPor?: boolean | Cliente$criadoPorArgs<ExtArgs>
    funcionariosExecutores?: boolean | Cliente$funcionariosExecutoresArgs<ExtArgs>
    notificacoes?: boolean | Cliente$notificacoesArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    telefone?: boolean
    email?: boolean
    cpf?: boolean
    cnpj?: boolean
    dataDeNascimento?: boolean
    password?: boolean
    tipo?: boolean
    clienteCadastrador?: boolean
    criadoPorId?: boolean
    criadoPor?: boolean | Cliente$criadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectScalar = {
    id?: boolean
    nome?: boolean
    telefone?: boolean
    email?: boolean
    cpf?: boolean
    cnpj?: boolean
    dataDeNascimento?: boolean
    password?: boolean
    tipo?: boolean
    clienteCadastrador?: boolean
    criadoPorId?: boolean
  }

  export type ClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    carros?: boolean | Cliente$carrosArgs<ExtArgs>
    ordensDeServico?: boolean | Cliente$ordensDeServicoArgs<ExtArgs>
    revisoes?: boolean | Cliente$revisoesArgs<ExtArgs>
    criadoPor?: boolean | Cliente$criadoPorArgs<ExtArgs>
    funcionariosExecutores?: boolean | Cliente$funcionariosExecutoresArgs<ExtArgs>
    notificacoes?: boolean | Cliente$notificacoesArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    criadoPor?: boolean | Cliente$criadoPorArgs<ExtArgs>
  }

  export type $ClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cliente"
    objects: {
      carros: Prisma.$CarroPayload<ExtArgs>[]
      ordensDeServico: Prisma.$OrdemDeServicoPayload<ExtArgs>[]
      revisoes: Prisma.$RevisaoPayload<ExtArgs>[]
      criadoPor: Prisma.$FuncionarioPayload<ExtArgs> | null
      funcionariosExecutores: Prisma.$FuncionarioPayload<ExtArgs>[]
      notificacoes: Prisma.$NotificacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nome: string
      telefone: string | null
      email: string
      cpf: string | null
      cnpj: string | null
      dataDeNascimento: Date | null
      password: string
      tipo: $Enums.TipoCliente
      clienteCadastrador: string | null
      criadoPorId: string | null
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type ClienteGetPayload<S extends boolean | null | undefined | ClienteDefaultArgs> = $Result.GetResult<Prisma.$ClientePayload, S>

  type ClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClienteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface ClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cliente'], meta: { name: 'Cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {ClienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteFindUniqueArgs>(args: SelectSubset<T, ClienteFindUniqueArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ClienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteFindFirstArgs>(args?: SelectSubset<T, ClienteFindFirstArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clienteWithIdOnly = await prisma.cliente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClienteFindManyArgs>(args?: SelectSubset<T, ClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cliente.
     * @param {ClienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends ClienteCreateArgs>(args: SelectSubset<T, ClienteCreateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Clientes.
     * @param {ClienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteCreateManyArgs>(args?: SelectSubset<T, ClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {ClienteCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `id`
     * const clienteWithIdOnly = await prisma.cliente.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClienteCreateManyAndReturnArgs>(args?: SelectSubset<T, ClienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Cliente.
     * @param {ClienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends ClienteDeleteArgs>(args: SelectSubset<T, ClienteDeleteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cliente.
     * @param {ClienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteUpdateArgs>(args: SelectSubset<T, ClienteUpdateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Clientes.
     * @param {ClienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteDeleteManyArgs>(args?: SelectSubset<T, ClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteUpdateManyArgs>(args: SelectSubset<T, ClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cliente.
     * @param {ClienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends ClienteUpsertArgs>(args: SelectSubset<T, ClienteUpsertArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClienteCountArgs>(
      args?: Subset<T, ClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteGroupByArgs['orderBy'] }
        : { orderBy?: ClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cliente model
   */
  readonly fields: ClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    carros<T extends Cliente$carrosArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$carrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "findMany"> | Null>
    ordensDeServico<T extends Cliente$ordensDeServicoArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$ordensDeServicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findMany"> | Null>
    revisoes<T extends Cliente$revisoesArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$revisoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "findMany"> | Null>
    criadoPor<T extends Cliente$criadoPorArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$criadoPorArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    funcionariosExecutores<T extends Cliente$funcionariosExecutoresArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$funcionariosExecutoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findMany"> | Null>
    notificacoes<T extends Cliente$notificacoesArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$notificacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cliente model
   */ 
  interface ClienteFieldRefs {
    readonly id: FieldRef<"Cliente", 'String'>
    readonly nome: FieldRef<"Cliente", 'String'>
    readonly telefone: FieldRef<"Cliente", 'String'>
    readonly email: FieldRef<"Cliente", 'String'>
    readonly cpf: FieldRef<"Cliente", 'String'>
    readonly cnpj: FieldRef<"Cliente", 'String'>
    readonly dataDeNascimento: FieldRef<"Cliente", 'DateTime'>
    readonly password: FieldRef<"Cliente", 'String'>
    readonly tipo: FieldRef<"Cliente", 'TipoCliente'>
    readonly clienteCadastrador: FieldRef<"Cliente", 'String'>
    readonly criadoPorId: FieldRef<"Cliente", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Cliente findUnique
   */
  export type ClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findUniqueOrThrow
   */
  export type ClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findFirst
   */
  export type ClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findFirstOrThrow
   */
  export type ClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findMany
   */
  export type ClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente create
   */
  export type ClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Cliente.
     */
    data: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
  }

  /**
   * Cliente createMany
   */
  export type ClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente createManyAndReturn
   */
  export type ClienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cliente update
   */
  export type ClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Cliente.
     */
    data: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
    /**
     * Choose, which Cliente to update.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente updateMany
   */
  export type ClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
  }

  /**
   * Cliente upsert
   */
  export type ClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Cliente to update in case it exists.
     */
    where: ClienteWhereUniqueInput
    /**
     * In case the Cliente found by the `where` argument doesn't exist, create a new Cliente with this data.
     */
    create: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
    /**
     * In case the Cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
  }

  /**
   * Cliente delete
   */
  export type ClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter which Cliente to delete.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente deleteMany
   */
  export type ClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClienteWhereInput
  }

  /**
   * Cliente.carros
   */
  export type Cliente$carrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    where?: CarroWhereInput
    orderBy?: CarroOrderByWithRelationInput | CarroOrderByWithRelationInput[]
    cursor?: CarroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CarroScalarFieldEnum | CarroScalarFieldEnum[]
  }

  /**
   * Cliente.ordensDeServico
   */
  export type Cliente$ordensDeServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    where?: OrdemDeServicoWhereInput
    orderBy?: OrdemDeServicoOrderByWithRelationInput | OrdemDeServicoOrderByWithRelationInput[]
    cursor?: OrdemDeServicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdemDeServicoScalarFieldEnum | OrdemDeServicoScalarFieldEnum[]
  }

  /**
   * Cliente.revisoes
   */
  export type Cliente$revisoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    where?: RevisaoWhereInput
    orderBy?: RevisaoOrderByWithRelationInput | RevisaoOrderByWithRelationInput[]
    cursor?: RevisaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RevisaoScalarFieldEnum | RevisaoScalarFieldEnum[]
  }

  /**
   * Cliente.criadoPor
   */
  export type Cliente$criadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * Cliente.funcionariosExecutores
   */
  export type Cliente$funcionariosExecutoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    cursor?: FuncionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Cliente.notificacoes
   */
  export type Cliente$notificacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    where?: NotificacaoWhereInput
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    cursor?: NotificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Cliente without action
   */
  export type ClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
  }


  /**
   * Model Funcionario
   */

  export type AggregateFuncionario = {
    _count: FuncionarioCountAggregateOutputType | null
    _min: FuncionarioMinAggregateOutputType | null
    _max: FuncionarioMaxAggregateOutputType | null
  }

  export type FuncionarioMinAggregateOutputType = {
    id: string | null
    nome: string | null
    username: string | null
    cpf: string | null
    dataDeNascimento: Date | null
    email: string | null
    senha: string | null
    telefone: string | null
    tipo: $Enums.TipoFuncionario | null
    criadoPorId: string | null
  }

  export type FuncionarioMaxAggregateOutputType = {
    id: string | null
    nome: string | null
    username: string | null
    cpf: string | null
    dataDeNascimento: Date | null
    email: string | null
    senha: string | null
    telefone: string | null
    tipo: $Enums.TipoFuncionario | null
    criadoPorId: string | null
  }

  export type FuncionarioCountAggregateOutputType = {
    id: number
    nome: number
    username: number
    cpf: number
    dataDeNascimento: number
    email: number
    senha: number
    telefone: number
    tipo: number
    criadoPorId: number
    _all: number
  }


  export type FuncionarioMinAggregateInputType = {
    id?: true
    nome?: true
    username?: true
    cpf?: true
    dataDeNascimento?: true
    email?: true
    senha?: true
    telefone?: true
    tipo?: true
    criadoPorId?: true
  }

  export type FuncionarioMaxAggregateInputType = {
    id?: true
    nome?: true
    username?: true
    cpf?: true
    dataDeNascimento?: true
    email?: true
    senha?: true
    telefone?: true
    tipo?: true
    criadoPorId?: true
  }

  export type FuncionarioCountAggregateInputType = {
    id?: true
    nome?: true
    username?: true
    cpf?: true
    dataDeNascimento?: true
    email?: true
    senha?: true
    telefone?: true
    tipo?: true
    criadoPorId?: true
    _all?: true
  }

  export type FuncionarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Funcionario to aggregate.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Funcionarios
    **/
    _count?: true | FuncionarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FuncionarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FuncionarioMaxAggregateInputType
  }

  export type GetFuncionarioAggregateType<T extends FuncionarioAggregateArgs> = {
        [P in keyof T & keyof AggregateFuncionario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFuncionario[P]>
      : GetScalarType<T[P], AggregateFuncionario[P]>
  }




  export type FuncionarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioWhereInput
    orderBy?: FuncionarioOrderByWithAggregationInput | FuncionarioOrderByWithAggregationInput[]
    by: FuncionarioScalarFieldEnum[] | FuncionarioScalarFieldEnum
    having?: FuncionarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FuncionarioCountAggregateInputType | true
    _min?: FuncionarioMinAggregateInputType
    _max?: FuncionarioMaxAggregateInputType
  }

  export type FuncionarioGroupByOutputType = {
    id: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date
    email: string
    senha: string
    telefone: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId: string | null
    _count: FuncionarioCountAggregateOutputType | null
    _min: FuncionarioMinAggregateOutputType | null
    _max: FuncionarioMaxAggregateOutputType | null
  }

  type GetFuncionarioGroupByPayload<T extends FuncionarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FuncionarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FuncionarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FuncionarioGroupByOutputType[P]>
            : GetScalarType<T[P], FuncionarioGroupByOutputType[P]>
        }
      >
    >


  export type FuncionarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    username?: boolean
    cpf?: boolean
    dataDeNascimento?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    tipo?: boolean
    criadoPorId?: boolean
    clientesCriados?: boolean | Funcionario$clientesCriadosArgs<ExtArgs>
    ordensCriadas?: boolean | Funcionario$ordensCriadasArgs<ExtArgs>
    ordensAprovadas?: boolean | Funcionario$ordensAprovadasArgs<ExtArgs>
    pecasCriadas?: boolean | Funcionario$pecasCriadasArgs<ExtArgs>
    servicosExecutados?: boolean | Funcionario$servicosExecutadosArgs<ExtArgs>
    ordensDeEstoque?: boolean | Funcionario$ordensDeEstoqueArgs<ExtArgs>
    criadoPor?: boolean | Funcionario$criadoPorArgs<ExtArgs>
    funcionariosCriados?: boolean | Funcionario$funcionariosCriadosArgs<ExtArgs>
    _count?: boolean | FuncionarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["funcionario"]>

  export type FuncionarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    username?: boolean
    cpf?: boolean
    dataDeNascimento?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    tipo?: boolean
    criadoPorId?: boolean
    criadoPor?: boolean | Funcionario$criadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["funcionario"]>

  export type FuncionarioSelectScalar = {
    id?: boolean
    nome?: boolean
    username?: boolean
    cpf?: boolean
    dataDeNascimento?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    tipo?: boolean
    criadoPorId?: boolean
  }

  export type FuncionarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientesCriados?: boolean | Funcionario$clientesCriadosArgs<ExtArgs>
    ordensCriadas?: boolean | Funcionario$ordensCriadasArgs<ExtArgs>
    ordensAprovadas?: boolean | Funcionario$ordensAprovadasArgs<ExtArgs>
    pecasCriadas?: boolean | Funcionario$pecasCriadasArgs<ExtArgs>
    servicosExecutados?: boolean | Funcionario$servicosExecutadosArgs<ExtArgs>
    ordensDeEstoque?: boolean | Funcionario$ordensDeEstoqueArgs<ExtArgs>
    criadoPor?: boolean | Funcionario$criadoPorArgs<ExtArgs>
    funcionariosCriados?: boolean | Funcionario$funcionariosCriadosArgs<ExtArgs>
    _count?: boolean | FuncionarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FuncionarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    criadoPor?: boolean | Funcionario$criadoPorArgs<ExtArgs>
  }

  export type $FuncionarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Funcionario"
    objects: {
      clientesCriados: Prisma.$ClientePayload<ExtArgs>[]
      ordensCriadas: Prisma.$OrdemDeServicoPayload<ExtArgs>[]
      ordensAprovadas: Prisma.$OrdemDeServicoPayload<ExtArgs>[]
      pecasCriadas: Prisma.$PecaPayload<ExtArgs>[]
      servicosExecutados: Prisma.$ClientePayload<ExtArgs>[]
      ordensDeEstoque: Prisma.$OrdemEstoquePayload<ExtArgs>[]
      criadoPor: Prisma.$FuncionarioPayload<ExtArgs> | null
      funcionariosCriados: Prisma.$FuncionarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nome: string
      username: string
      cpf: string
      dataDeNascimento: Date
      email: string
      senha: string
      telefone: string | null
      tipo: $Enums.TipoFuncionario
      criadoPorId: string | null
    }, ExtArgs["result"]["funcionario"]>
    composites: {}
  }

  type FuncionarioGetPayload<S extends boolean | null | undefined | FuncionarioDefaultArgs> = $Result.GetResult<Prisma.$FuncionarioPayload, S>

  type FuncionarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FuncionarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FuncionarioCountAggregateInputType | true
    }

  export interface FuncionarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Funcionario'], meta: { name: 'Funcionario' } }
    /**
     * Find zero or one Funcionario that matches the filter.
     * @param {FuncionarioFindUniqueArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FuncionarioFindUniqueArgs>(args: SelectSubset<T, FuncionarioFindUniqueArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Funcionario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FuncionarioFindUniqueOrThrowArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FuncionarioFindUniqueOrThrowArgs>(args: SelectSubset<T, FuncionarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Funcionario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioFindFirstArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FuncionarioFindFirstArgs>(args?: SelectSubset<T, FuncionarioFindFirstArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Funcionario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioFindFirstOrThrowArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FuncionarioFindFirstOrThrowArgs>(args?: SelectSubset<T, FuncionarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Funcionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Funcionarios
     * const funcionarios = await prisma.funcionario.findMany()
     * 
     * // Get first 10 Funcionarios
     * const funcionarios = await prisma.funcionario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const funcionarioWithIdOnly = await prisma.funcionario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FuncionarioFindManyArgs>(args?: SelectSubset<T, FuncionarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Funcionario.
     * @param {FuncionarioCreateArgs} args - Arguments to create a Funcionario.
     * @example
     * // Create one Funcionario
     * const Funcionario = await prisma.funcionario.create({
     *   data: {
     *     // ... data to create a Funcionario
     *   }
     * })
     * 
     */
    create<T extends FuncionarioCreateArgs>(args: SelectSubset<T, FuncionarioCreateArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Funcionarios.
     * @param {FuncionarioCreateManyArgs} args - Arguments to create many Funcionarios.
     * @example
     * // Create many Funcionarios
     * const funcionario = await prisma.funcionario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FuncionarioCreateManyArgs>(args?: SelectSubset<T, FuncionarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Funcionarios and returns the data saved in the database.
     * @param {FuncionarioCreateManyAndReturnArgs} args - Arguments to create many Funcionarios.
     * @example
     * // Create many Funcionarios
     * const funcionario = await prisma.funcionario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Funcionarios and only return the `id`
     * const funcionarioWithIdOnly = await prisma.funcionario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FuncionarioCreateManyAndReturnArgs>(args?: SelectSubset<T, FuncionarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Funcionario.
     * @param {FuncionarioDeleteArgs} args - Arguments to delete one Funcionario.
     * @example
     * // Delete one Funcionario
     * const Funcionario = await prisma.funcionario.delete({
     *   where: {
     *     // ... filter to delete one Funcionario
     *   }
     * })
     * 
     */
    delete<T extends FuncionarioDeleteArgs>(args: SelectSubset<T, FuncionarioDeleteArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Funcionario.
     * @param {FuncionarioUpdateArgs} args - Arguments to update one Funcionario.
     * @example
     * // Update one Funcionario
     * const funcionario = await prisma.funcionario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FuncionarioUpdateArgs>(args: SelectSubset<T, FuncionarioUpdateArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Funcionarios.
     * @param {FuncionarioDeleteManyArgs} args - Arguments to filter Funcionarios to delete.
     * @example
     * // Delete a few Funcionarios
     * const { count } = await prisma.funcionario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FuncionarioDeleteManyArgs>(args?: SelectSubset<T, FuncionarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Funcionarios
     * const funcionario = await prisma.funcionario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FuncionarioUpdateManyArgs>(args: SelectSubset<T, FuncionarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Funcionario.
     * @param {FuncionarioUpsertArgs} args - Arguments to update or create a Funcionario.
     * @example
     * // Update or create a Funcionario
     * const funcionario = await prisma.funcionario.upsert({
     *   create: {
     *     // ... data to create a Funcionario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Funcionario we want to update
     *   }
     * })
     */
    upsert<T extends FuncionarioUpsertArgs>(args: SelectSubset<T, FuncionarioUpsertArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioCountArgs} args - Arguments to filter Funcionarios to count.
     * @example
     * // Count the number of Funcionarios
     * const count = await prisma.funcionario.count({
     *   where: {
     *     // ... the filter for the Funcionarios we want to count
     *   }
     * })
    **/
    count<T extends FuncionarioCountArgs>(
      args?: Subset<T, FuncionarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FuncionarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Funcionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FuncionarioAggregateArgs>(args: Subset<T, FuncionarioAggregateArgs>): Prisma.PrismaPromise<GetFuncionarioAggregateType<T>>

    /**
     * Group by Funcionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FuncionarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FuncionarioGroupByArgs['orderBy'] }
        : { orderBy?: FuncionarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FuncionarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuncionarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Funcionario model
   */
  readonly fields: FuncionarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Funcionario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FuncionarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clientesCriados<T extends Funcionario$clientesCriadosArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$clientesCriadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany"> | Null>
    ordensCriadas<T extends Funcionario$ordensCriadasArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$ordensCriadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findMany"> | Null>
    ordensAprovadas<T extends Funcionario$ordensAprovadasArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$ordensAprovadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findMany"> | Null>
    pecasCriadas<T extends Funcionario$pecasCriadasArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$pecasCriadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "findMany"> | Null>
    servicosExecutados<T extends Funcionario$servicosExecutadosArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$servicosExecutadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany"> | Null>
    ordensDeEstoque<T extends Funcionario$ordensDeEstoqueArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$ordensDeEstoqueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "findMany"> | Null>
    criadoPor<T extends Funcionario$criadoPorArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$criadoPorArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    funcionariosCriados<T extends Funcionario$funcionariosCriadosArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$funcionariosCriadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Funcionario model
   */ 
  interface FuncionarioFieldRefs {
    readonly id: FieldRef<"Funcionario", 'String'>
    readonly nome: FieldRef<"Funcionario", 'String'>
    readonly username: FieldRef<"Funcionario", 'String'>
    readonly cpf: FieldRef<"Funcionario", 'String'>
    readonly dataDeNascimento: FieldRef<"Funcionario", 'DateTime'>
    readonly email: FieldRef<"Funcionario", 'String'>
    readonly senha: FieldRef<"Funcionario", 'String'>
    readonly telefone: FieldRef<"Funcionario", 'String'>
    readonly tipo: FieldRef<"Funcionario", 'TipoFuncionario'>
    readonly criadoPorId: FieldRef<"Funcionario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Funcionario findUnique
   */
  export type FuncionarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario findUniqueOrThrow
   */
  export type FuncionarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario findFirst
   */
  export type FuncionarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funcionarios.
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funcionarios.
     */
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario findFirstOrThrow
   */
  export type FuncionarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funcionarios.
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funcionarios.
     */
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario findMany
   */
  export type FuncionarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionarios to fetch.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Funcionarios.
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario create
   */
  export type FuncionarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Funcionario.
     */
    data: XOR<FuncionarioCreateInput, FuncionarioUncheckedCreateInput>
  }

  /**
   * Funcionario createMany
   */
  export type FuncionarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Funcionarios.
     */
    data: FuncionarioCreateManyInput | FuncionarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Funcionario createManyAndReturn
   */
  export type FuncionarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Funcionarios.
     */
    data: FuncionarioCreateManyInput | FuncionarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Funcionario update
   */
  export type FuncionarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Funcionario.
     */
    data: XOR<FuncionarioUpdateInput, FuncionarioUncheckedUpdateInput>
    /**
     * Choose, which Funcionario to update.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario updateMany
   */
  export type FuncionarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Funcionarios.
     */
    data: XOR<FuncionarioUpdateManyMutationInput, FuncionarioUncheckedUpdateManyInput>
    /**
     * Filter which Funcionarios to update
     */
    where?: FuncionarioWhereInput
  }

  /**
   * Funcionario upsert
   */
  export type FuncionarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Funcionario to update in case it exists.
     */
    where: FuncionarioWhereUniqueInput
    /**
     * In case the Funcionario found by the `where` argument doesn't exist, create a new Funcionario with this data.
     */
    create: XOR<FuncionarioCreateInput, FuncionarioUncheckedCreateInput>
    /**
     * In case the Funcionario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FuncionarioUpdateInput, FuncionarioUncheckedUpdateInput>
  }

  /**
   * Funcionario delete
   */
  export type FuncionarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter which Funcionario to delete.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario deleteMany
   */
  export type FuncionarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Funcionarios to delete
     */
    where?: FuncionarioWhereInput
  }

  /**
   * Funcionario.clientesCriados
   */
  export type Funcionario$clientesCriadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    cursor?: ClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Funcionario.ordensCriadas
   */
  export type Funcionario$ordensCriadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    where?: OrdemDeServicoWhereInput
    orderBy?: OrdemDeServicoOrderByWithRelationInput | OrdemDeServicoOrderByWithRelationInput[]
    cursor?: OrdemDeServicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdemDeServicoScalarFieldEnum | OrdemDeServicoScalarFieldEnum[]
  }

  /**
   * Funcionario.ordensAprovadas
   */
  export type Funcionario$ordensAprovadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    where?: OrdemDeServicoWhereInput
    orderBy?: OrdemDeServicoOrderByWithRelationInput | OrdemDeServicoOrderByWithRelationInput[]
    cursor?: OrdemDeServicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdemDeServicoScalarFieldEnum | OrdemDeServicoScalarFieldEnum[]
  }

  /**
   * Funcionario.pecasCriadas
   */
  export type Funcionario$pecasCriadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    where?: PecaWhereInput
    orderBy?: PecaOrderByWithRelationInput | PecaOrderByWithRelationInput[]
    cursor?: PecaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PecaScalarFieldEnum | PecaScalarFieldEnum[]
  }

  /**
   * Funcionario.servicosExecutados
   */
  export type Funcionario$servicosExecutadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    cursor?: ClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Funcionario.ordensDeEstoque
   */
  export type Funcionario$ordensDeEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    where?: OrdemEstoqueWhereInput
    orderBy?: OrdemEstoqueOrderByWithRelationInput | OrdemEstoqueOrderByWithRelationInput[]
    cursor?: OrdemEstoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdemEstoqueScalarFieldEnum | OrdemEstoqueScalarFieldEnum[]
  }

  /**
   * Funcionario.criadoPor
   */
  export type Funcionario$criadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * Funcionario.funcionariosCriados
   */
  export type Funcionario$funcionariosCriadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    cursor?: FuncionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario without action
   */
  export type FuncionarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
  }


  /**
   * Model Carro
   */

  export type AggregateCarro = {
    _count: CarroCountAggregateOutputType | null
    _avg: CarroAvgAggregateOutputType | null
    _sum: CarroSumAggregateOutputType | null
    _min: CarroMinAggregateOutputType | null
    _max: CarroMaxAggregateOutputType | null
  }

  export type CarroAvgAggregateOutputType = {
    ano: number | null
  }

  export type CarroSumAggregateOutputType = {
    ano: number | null
  }

  export type CarroMinAggregateOutputType = {
    id: string | null
    placa: string | null
    modelo: string | null
    ano: number | null
    clienteId: string | null
  }

  export type CarroMaxAggregateOutputType = {
    id: string | null
    placa: string | null
    modelo: string | null
    ano: number | null
    clienteId: string | null
  }

  export type CarroCountAggregateOutputType = {
    id: number
    placa: number
    modelo: number
    ano: number
    clienteId: number
    _all: number
  }


  export type CarroAvgAggregateInputType = {
    ano?: true
  }

  export type CarroSumAggregateInputType = {
    ano?: true
  }

  export type CarroMinAggregateInputType = {
    id?: true
    placa?: true
    modelo?: true
    ano?: true
    clienteId?: true
  }

  export type CarroMaxAggregateInputType = {
    id?: true
    placa?: true
    modelo?: true
    ano?: true
    clienteId?: true
  }

  export type CarroCountAggregateInputType = {
    id?: true
    placa?: true
    modelo?: true
    ano?: true
    clienteId?: true
    _all?: true
  }

  export type CarroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Carro to aggregate.
     */
    where?: CarroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carros to fetch.
     */
    orderBy?: CarroOrderByWithRelationInput | CarroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CarroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Carros
    **/
    _count?: true | CarroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CarroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CarroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CarroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CarroMaxAggregateInputType
  }

  export type GetCarroAggregateType<T extends CarroAggregateArgs> = {
        [P in keyof T & keyof AggregateCarro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCarro[P]>
      : GetScalarType<T[P], AggregateCarro[P]>
  }




  export type CarroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarroWhereInput
    orderBy?: CarroOrderByWithAggregationInput | CarroOrderByWithAggregationInput[]
    by: CarroScalarFieldEnum[] | CarroScalarFieldEnum
    having?: CarroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CarroCountAggregateInputType | true
    _avg?: CarroAvgAggregateInputType
    _sum?: CarroSumAggregateInputType
    _min?: CarroMinAggregateInputType
    _max?: CarroMaxAggregateInputType
  }

  export type CarroGroupByOutputType = {
    id: string
    placa: string
    modelo: string
    ano: number
    clienteId: string
    _count: CarroCountAggregateOutputType | null
    _avg: CarroAvgAggregateOutputType | null
    _sum: CarroSumAggregateOutputType | null
    _min: CarroMinAggregateOutputType | null
    _max: CarroMaxAggregateOutputType | null
  }

  type GetCarroGroupByPayload<T extends CarroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CarroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CarroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CarroGroupByOutputType[P]>
            : GetScalarType<T[P], CarroGroupByOutputType[P]>
        }
      >
    >


  export type CarroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    placa?: boolean
    modelo?: boolean
    ano?: boolean
    clienteId?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    revisoes?: boolean | Carro$revisoesArgs<ExtArgs>
    _count?: boolean | CarroCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carro"]>

  export type CarroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    placa?: boolean
    modelo?: boolean
    ano?: boolean
    clienteId?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carro"]>

  export type CarroSelectScalar = {
    id?: boolean
    placa?: boolean
    modelo?: boolean
    ano?: boolean
    clienteId?: boolean
  }

  export type CarroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    revisoes?: boolean | Carro$revisoesArgs<ExtArgs>
    _count?: boolean | CarroCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CarroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }

  export type $CarroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Carro"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      revisoes: Prisma.$RevisaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      placa: string
      modelo: string
      ano: number
      clienteId: string
    }, ExtArgs["result"]["carro"]>
    composites: {}
  }

  type CarroGetPayload<S extends boolean | null | undefined | CarroDefaultArgs> = $Result.GetResult<Prisma.$CarroPayload, S>

  type CarroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CarroFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CarroCountAggregateInputType | true
    }

  export interface CarroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Carro'], meta: { name: 'Carro' } }
    /**
     * Find zero or one Carro that matches the filter.
     * @param {CarroFindUniqueArgs} args - Arguments to find a Carro
     * @example
     * // Get one Carro
     * const carro = await prisma.carro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CarroFindUniqueArgs>(args: SelectSubset<T, CarroFindUniqueArgs<ExtArgs>>): Prisma__CarroClient<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Carro that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CarroFindUniqueOrThrowArgs} args - Arguments to find a Carro
     * @example
     * // Get one Carro
     * const carro = await prisma.carro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CarroFindUniqueOrThrowArgs>(args: SelectSubset<T, CarroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CarroClient<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Carro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroFindFirstArgs} args - Arguments to find a Carro
     * @example
     * // Get one Carro
     * const carro = await prisma.carro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CarroFindFirstArgs>(args?: SelectSubset<T, CarroFindFirstArgs<ExtArgs>>): Prisma__CarroClient<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Carro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroFindFirstOrThrowArgs} args - Arguments to find a Carro
     * @example
     * // Get one Carro
     * const carro = await prisma.carro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CarroFindFirstOrThrowArgs>(args?: SelectSubset<T, CarroFindFirstOrThrowArgs<ExtArgs>>): Prisma__CarroClient<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Carros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Carros
     * const carros = await prisma.carro.findMany()
     * 
     * // Get first 10 Carros
     * const carros = await prisma.carro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const carroWithIdOnly = await prisma.carro.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CarroFindManyArgs>(args?: SelectSubset<T, CarroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Carro.
     * @param {CarroCreateArgs} args - Arguments to create a Carro.
     * @example
     * // Create one Carro
     * const Carro = await prisma.carro.create({
     *   data: {
     *     // ... data to create a Carro
     *   }
     * })
     * 
     */
    create<T extends CarroCreateArgs>(args: SelectSubset<T, CarroCreateArgs<ExtArgs>>): Prisma__CarroClient<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Carros.
     * @param {CarroCreateManyArgs} args - Arguments to create many Carros.
     * @example
     * // Create many Carros
     * const carro = await prisma.carro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CarroCreateManyArgs>(args?: SelectSubset<T, CarroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Carros and returns the data saved in the database.
     * @param {CarroCreateManyAndReturnArgs} args - Arguments to create many Carros.
     * @example
     * // Create many Carros
     * const carro = await prisma.carro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Carros and only return the `id`
     * const carroWithIdOnly = await prisma.carro.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CarroCreateManyAndReturnArgs>(args?: SelectSubset<T, CarroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Carro.
     * @param {CarroDeleteArgs} args - Arguments to delete one Carro.
     * @example
     * // Delete one Carro
     * const Carro = await prisma.carro.delete({
     *   where: {
     *     // ... filter to delete one Carro
     *   }
     * })
     * 
     */
    delete<T extends CarroDeleteArgs>(args: SelectSubset<T, CarroDeleteArgs<ExtArgs>>): Prisma__CarroClient<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Carro.
     * @param {CarroUpdateArgs} args - Arguments to update one Carro.
     * @example
     * // Update one Carro
     * const carro = await prisma.carro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CarroUpdateArgs>(args: SelectSubset<T, CarroUpdateArgs<ExtArgs>>): Prisma__CarroClient<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Carros.
     * @param {CarroDeleteManyArgs} args - Arguments to filter Carros to delete.
     * @example
     * // Delete a few Carros
     * const { count } = await prisma.carro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CarroDeleteManyArgs>(args?: SelectSubset<T, CarroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Carros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Carros
     * const carro = await prisma.carro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CarroUpdateManyArgs>(args: SelectSubset<T, CarroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Carro.
     * @param {CarroUpsertArgs} args - Arguments to update or create a Carro.
     * @example
     * // Update or create a Carro
     * const carro = await prisma.carro.upsert({
     *   create: {
     *     // ... data to create a Carro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Carro we want to update
     *   }
     * })
     */
    upsert<T extends CarroUpsertArgs>(args: SelectSubset<T, CarroUpsertArgs<ExtArgs>>): Prisma__CarroClient<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Carros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroCountArgs} args - Arguments to filter Carros to count.
     * @example
     * // Count the number of Carros
     * const count = await prisma.carro.count({
     *   where: {
     *     // ... the filter for the Carros we want to count
     *   }
     * })
    **/
    count<T extends CarroCountArgs>(
      args?: Subset<T, CarroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CarroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Carro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CarroAggregateArgs>(args: Subset<T, CarroAggregateArgs>): Prisma.PrismaPromise<GetCarroAggregateType<T>>

    /**
     * Group by Carro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CarroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CarroGroupByArgs['orderBy'] }
        : { orderBy?: CarroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CarroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCarroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Carro model
   */
  readonly fields: CarroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Carro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CarroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    revisoes<T extends Carro$revisoesArgs<ExtArgs> = {}>(args?: Subset<T, Carro$revisoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Carro model
   */ 
  interface CarroFieldRefs {
    readonly id: FieldRef<"Carro", 'String'>
    readonly placa: FieldRef<"Carro", 'String'>
    readonly modelo: FieldRef<"Carro", 'String'>
    readonly ano: FieldRef<"Carro", 'Int'>
    readonly clienteId: FieldRef<"Carro", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Carro findUnique
   */
  export type CarroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    /**
     * Filter, which Carro to fetch.
     */
    where: CarroWhereUniqueInput
  }

  /**
   * Carro findUniqueOrThrow
   */
  export type CarroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    /**
     * Filter, which Carro to fetch.
     */
    where: CarroWhereUniqueInput
  }

  /**
   * Carro findFirst
   */
  export type CarroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    /**
     * Filter, which Carro to fetch.
     */
    where?: CarroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carros to fetch.
     */
    orderBy?: CarroOrderByWithRelationInput | CarroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Carros.
     */
    cursor?: CarroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Carros.
     */
    distinct?: CarroScalarFieldEnum | CarroScalarFieldEnum[]
  }

  /**
   * Carro findFirstOrThrow
   */
  export type CarroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    /**
     * Filter, which Carro to fetch.
     */
    where?: CarroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carros to fetch.
     */
    orderBy?: CarroOrderByWithRelationInput | CarroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Carros.
     */
    cursor?: CarroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Carros.
     */
    distinct?: CarroScalarFieldEnum | CarroScalarFieldEnum[]
  }

  /**
   * Carro findMany
   */
  export type CarroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    /**
     * Filter, which Carros to fetch.
     */
    where?: CarroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carros to fetch.
     */
    orderBy?: CarroOrderByWithRelationInput | CarroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Carros.
     */
    cursor?: CarroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carros.
     */
    skip?: number
    distinct?: CarroScalarFieldEnum | CarroScalarFieldEnum[]
  }

  /**
   * Carro create
   */
  export type CarroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    /**
     * The data needed to create a Carro.
     */
    data: XOR<CarroCreateInput, CarroUncheckedCreateInput>
  }

  /**
   * Carro createMany
   */
  export type CarroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Carros.
     */
    data: CarroCreateManyInput | CarroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Carro createManyAndReturn
   */
  export type CarroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Carros.
     */
    data: CarroCreateManyInput | CarroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Carro update
   */
  export type CarroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    /**
     * The data needed to update a Carro.
     */
    data: XOR<CarroUpdateInput, CarroUncheckedUpdateInput>
    /**
     * Choose, which Carro to update.
     */
    where: CarroWhereUniqueInput
  }

  /**
   * Carro updateMany
   */
  export type CarroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Carros.
     */
    data: XOR<CarroUpdateManyMutationInput, CarroUncheckedUpdateManyInput>
    /**
     * Filter which Carros to update
     */
    where?: CarroWhereInput
  }

  /**
   * Carro upsert
   */
  export type CarroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    /**
     * The filter to search for the Carro to update in case it exists.
     */
    where: CarroWhereUniqueInput
    /**
     * In case the Carro found by the `where` argument doesn't exist, create a new Carro with this data.
     */
    create: XOR<CarroCreateInput, CarroUncheckedCreateInput>
    /**
     * In case the Carro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CarroUpdateInput, CarroUncheckedUpdateInput>
  }

  /**
   * Carro delete
   */
  export type CarroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
    /**
     * Filter which Carro to delete.
     */
    where: CarroWhereUniqueInput
  }

  /**
   * Carro deleteMany
   */
  export type CarroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Carros to delete
     */
    where?: CarroWhereInput
  }

  /**
   * Carro.revisoes
   */
  export type Carro$revisoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    where?: RevisaoWhereInput
    orderBy?: RevisaoOrderByWithRelationInput | RevisaoOrderByWithRelationInput[]
    cursor?: RevisaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RevisaoScalarFieldEnum | RevisaoScalarFieldEnum[]
  }

  /**
   * Carro without action
   */
  export type CarroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carro
     */
    select?: CarroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroInclude<ExtArgs> | null
  }


  /**
   * Model Servico
   */

  export type AggregateServico = {
    _count: ServicoCountAggregateOutputType | null
    _avg: ServicoAvgAggregateOutputType | null
    _sum: ServicoSumAggregateOutputType | null
    _min: ServicoMinAggregateOutputType | null
    _max: ServicoMaxAggregateOutputType | null
  }

  export type ServicoAvgAggregateOutputType = {
    valor: Decimal | null
  }

  export type ServicoSumAggregateOutputType = {
    valor: Decimal | null
  }

  export type ServicoMinAggregateOutputType = {
    id: string | null
    tipoDeServico: string | null
    valor: Decimal | null
  }

  export type ServicoMaxAggregateOutputType = {
    id: string | null
    tipoDeServico: string | null
    valor: Decimal | null
  }

  export type ServicoCountAggregateOutputType = {
    id: number
    tipoDeServico: number
    valor: number
    _all: number
  }


  export type ServicoAvgAggregateInputType = {
    valor?: true
  }

  export type ServicoSumAggregateInputType = {
    valor?: true
  }

  export type ServicoMinAggregateInputType = {
    id?: true
    tipoDeServico?: true
    valor?: true
  }

  export type ServicoMaxAggregateInputType = {
    id?: true
    tipoDeServico?: true
    valor?: true
  }

  export type ServicoCountAggregateInputType = {
    id?: true
    tipoDeServico?: true
    valor?: true
    _all?: true
  }

  export type ServicoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Servico to aggregate.
     */
    where?: ServicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicos to fetch.
     */
    orderBy?: ServicoOrderByWithRelationInput | ServicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Servicos
    **/
    _count?: true | ServicoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServicoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServicoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServicoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServicoMaxAggregateInputType
  }

  export type GetServicoAggregateType<T extends ServicoAggregateArgs> = {
        [P in keyof T & keyof AggregateServico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServico[P]>
      : GetScalarType<T[P], AggregateServico[P]>
  }




  export type ServicoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServicoWhereInput
    orderBy?: ServicoOrderByWithAggregationInput | ServicoOrderByWithAggregationInput[]
    by: ServicoScalarFieldEnum[] | ServicoScalarFieldEnum
    having?: ServicoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServicoCountAggregateInputType | true
    _avg?: ServicoAvgAggregateInputType
    _sum?: ServicoSumAggregateInputType
    _min?: ServicoMinAggregateInputType
    _max?: ServicoMaxAggregateInputType
  }

  export type ServicoGroupByOutputType = {
    id: string
    tipoDeServico: string
    valor: Decimal
    _count: ServicoCountAggregateOutputType | null
    _avg: ServicoAvgAggregateOutputType | null
    _sum: ServicoSumAggregateOutputType | null
    _min: ServicoMinAggregateOutputType | null
    _max: ServicoMaxAggregateOutputType | null
  }

  type GetServicoGroupByPayload<T extends ServicoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServicoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServicoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServicoGroupByOutputType[P]>
            : GetScalarType<T[P], ServicoGroupByOutputType[P]>
        }
      >
    >


  export type ServicoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipoDeServico?: boolean
    valor?: boolean
    ordensDeServico?: boolean | Servico$ordensDeServicoArgs<ExtArgs>
    Promocao?: boolean | Servico$PromocaoArgs<ExtArgs>
    _count?: boolean | ServicoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["servico"]>

  export type ServicoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipoDeServico?: boolean
    valor?: boolean
  }, ExtArgs["result"]["servico"]>

  export type ServicoSelectScalar = {
    id?: boolean
    tipoDeServico?: boolean
    valor?: boolean
  }

  export type ServicoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordensDeServico?: boolean | Servico$ordensDeServicoArgs<ExtArgs>
    Promocao?: boolean | Servico$PromocaoArgs<ExtArgs>
    _count?: boolean | ServicoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ServicoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ServicoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Servico"
    objects: {
      ordensDeServico: Prisma.$OrdemDeServicoPayload<ExtArgs>[]
      Promocao: Prisma.$PromocaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tipoDeServico: string
      valor: Prisma.Decimal
    }, ExtArgs["result"]["servico"]>
    composites: {}
  }

  type ServicoGetPayload<S extends boolean | null | undefined | ServicoDefaultArgs> = $Result.GetResult<Prisma.$ServicoPayload, S>

  type ServicoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ServicoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ServicoCountAggregateInputType | true
    }

  export interface ServicoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Servico'], meta: { name: 'Servico' } }
    /**
     * Find zero or one Servico that matches the filter.
     * @param {ServicoFindUniqueArgs} args - Arguments to find a Servico
     * @example
     * // Get one Servico
     * const servico = await prisma.servico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServicoFindUniqueArgs>(args: SelectSubset<T, ServicoFindUniqueArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Servico that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ServicoFindUniqueOrThrowArgs} args - Arguments to find a Servico
     * @example
     * // Get one Servico
     * const servico = await prisma.servico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServicoFindUniqueOrThrowArgs>(args: SelectSubset<T, ServicoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Servico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicoFindFirstArgs} args - Arguments to find a Servico
     * @example
     * // Get one Servico
     * const servico = await prisma.servico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServicoFindFirstArgs>(args?: SelectSubset<T, ServicoFindFirstArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Servico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicoFindFirstOrThrowArgs} args - Arguments to find a Servico
     * @example
     * // Get one Servico
     * const servico = await prisma.servico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServicoFindFirstOrThrowArgs>(args?: SelectSubset<T, ServicoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Servicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Servicos
     * const servicos = await prisma.servico.findMany()
     * 
     * // Get first 10 Servicos
     * const servicos = await prisma.servico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const servicoWithIdOnly = await prisma.servico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServicoFindManyArgs>(args?: SelectSubset<T, ServicoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Servico.
     * @param {ServicoCreateArgs} args - Arguments to create a Servico.
     * @example
     * // Create one Servico
     * const Servico = await prisma.servico.create({
     *   data: {
     *     // ... data to create a Servico
     *   }
     * })
     * 
     */
    create<T extends ServicoCreateArgs>(args: SelectSubset<T, ServicoCreateArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Servicos.
     * @param {ServicoCreateManyArgs} args - Arguments to create many Servicos.
     * @example
     * // Create many Servicos
     * const servico = await prisma.servico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServicoCreateManyArgs>(args?: SelectSubset<T, ServicoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Servicos and returns the data saved in the database.
     * @param {ServicoCreateManyAndReturnArgs} args - Arguments to create many Servicos.
     * @example
     * // Create many Servicos
     * const servico = await prisma.servico.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Servicos and only return the `id`
     * const servicoWithIdOnly = await prisma.servico.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServicoCreateManyAndReturnArgs>(args?: SelectSubset<T, ServicoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Servico.
     * @param {ServicoDeleteArgs} args - Arguments to delete one Servico.
     * @example
     * // Delete one Servico
     * const Servico = await prisma.servico.delete({
     *   where: {
     *     // ... filter to delete one Servico
     *   }
     * })
     * 
     */
    delete<T extends ServicoDeleteArgs>(args: SelectSubset<T, ServicoDeleteArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Servico.
     * @param {ServicoUpdateArgs} args - Arguments to update one Servico.
     * @example
     * // Update one Servico
     * const servico = await prisma.servico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServicoUpdateArgs>(args: SelectSubset<T, ServicoUpdateArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Servicos.
     * @param {ServicoDeleteManyArgs} args - Arguments to filter Servicos to delete.
     * @example
     * // Delete a few Servicos
     * const { count } = await prisma.servico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServicoDeleteManyArgs>(args?: SelectSubset<T, ServicoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Servicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Servicos
     * const servico = await prisma.servico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServicoUpdateManyArgs>(args: SelectSubset<T, ServicoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Servico.
     * @param {ServicoUpsertArgs} args - Arguments to update or create a Servico.
     * @example
     * // Update or create a Servico
     * const servico = await prisma.servico.upsert({
     *   create: {
     *     // ... data to create a Servico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Servico we want to update
     *   }
     * })
     */
    upsert<T extends ServicoUpsertArgs>(args: SelectSubset<T, ServicoUpsertArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Servicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicoCountArgs} args - Arguments to filter Servicos to count.
     * @example
     * // Count the number of Servicos
     * const count = await prisma.servico.count({
     *   where: {
     *     // ... the filter for the Servicos we want to count
     *   }
     * })
    **/
    count<T extends ServicoCountArgs>(
      args?: Subset<T, ServicoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServicoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Servico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServicoAggregateArgs>(args: Subset<T, ServicoAggregateArgs>): Prisma.PrismaPromise<GetServicoAggregateType<T>>

    /**
     * Group by Servico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServicoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServicoGroupByArgs['orderBy'] }
        : { orderBy?: ServicoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServicoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServicoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Servico model
   */
  readonly fields: ServicoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Servico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServicoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ordensDeServico<T extends Servico$ordensDeServicoArgs<ExtArgs> = {}>(args?: Subset<T, Servico$ordensDeServicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findMany"> | Null>
    Promocao<T extends Servico$PromocaoArgs<ExtArgs> = {}>(args?: Subset<T, Servico$PromocaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Servico model
   */ 
  interface ServicoFieldRefs {
    readonly id: FieldRef<"Servico", 'String'>
    readonly tipoDeServico: FieldRef<"Servico", 'String'>
    readonly valor: FieldRef<"Servico", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Servico findUnique
   */
  export type ServicoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    /**
     * Filter, which Servico to fetch.
     */
    where: ServicoWhereUniqueInput
  }

  /**
   * Servico findUniqueOrThrow
   */
  export type ServicoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    /**
     * Filter, which Servico to fetch.
     */
    where: ServicoWhereUniqueInput
  }

  /**
   * Servico findFirst
   */
  export type ServicoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    /**
     * Filter, which Servico to fetch.
     */
    where?: ServicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicos to fetch.
     */
    orderBy?: ServicoOrderByWithRelationInput | ServicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Servicos.
     */
    cursor?: ServicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Servicos.
     */
    distinct?: ServicoScalarFieldEnum | ServicoScalarFieldEnum[]
  }

  /**
   * Servico findFirstOrThrow
   */
  export type ServicoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    /**
     * Filter, which Servico to fetch.
     */
    where?: ServicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicos to fetch.
     */
    orderBy?: ServicoOrderByWithRelationInput | ServicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Servicos.
     */
    cursor?: ServicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Servicos.
     */
    distinct?: ServicoScalarFieldEnum | ServicoScalarFieldEnum[]
  }

  /**
   * Servico findMany
   */
  export type ServicoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    /**
     * Filter, which Servicos to fetch.
     */
    where?: ServicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicos to fetch.
     */
    orderBy?: ServicoOrderByWithRelationInput | ServicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Servicos.
     */
    cursor?: ServicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicos.
     */
    skip?: number
    distinct?: ServicoScalarFieldEnum | ServicoScalarFieldEnum[]
  }

  /**
   * Servico create
   */
  export type ServicoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    /**
     * The data needed to create a Servico.
     */
    data: XOR<ServicoCreateInput, ServicoUncheckedCreateInput>
  }

  /**
   * Servico createMany
   */
  export type ServicoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Servicos.
     */
    data: ServicoCreateManyInput | ServicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Servico createManyAndReturn
   */
  export type ServicoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Servicos.
     */
    data: ServicoCreateManyInput | ServicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Servico update
   */
  export type ServicoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    /**
     * The data needed to update a Servico.
     */
    data: XOR<ServicoUpdateInput, ServicoUncheckedUpdateInput>
    /**
     * Choose, which Servico to update.
     */
    where: ServicoWhereUniqueInput
  }

  /**
   * Servico updateMany
   */
  export type ServicoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Servicos.
     */
    data: XOR<ServicoUpdateManyMutationInput, ServicoUncheckedUpdateManyInput>
    /**
     * Filter which Servicos to update
     */
    where?: ServicoWhereInput
  }

  /**
   * Servico upsert
   */
  export type ServicoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    /**
     * The filter to search for the Servico to update in case it exists.
     */
    where: ServicoWhereUniqueInput
    /**
     * In case the Servico found by the `where` argument doesn't exist, create a new Servico with this data.
     */
    create: XOR<ServicoCreateInput, ServicoUncheckedCreateInput>
    /**
     * In case the Servico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServicoUpdateInput, ServicoUncheckedUpdateInput>
  }

  /**
   * Servico delete
   */
  export type ServicoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    /**
     * Filter which Servico to delete.
     */
    where: ServicoWhereUniqueInput
  }

  /**
   * Servico deleteMany
   */
  export type ServicoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Servicos to delete
     */
    where?: ServicoWhereInput
  }

  /**
   * Servico.ordensDeServico
   */
  export type Servico$ordensDeServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    where?: OrdemDeServicoWhereInput
    orderBy?: OrdemDeServicoOrderByWithRelationInput | OrdemDeServicoOrderByWithRelationInput[]
    cursor?: OrdemDeServicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdemDeServicoScalarFieldEnum | OrdemDeServicoScalarFieldEnum[]
  }

  /**
   * Servico.Promocao
   */
  export type Servico$PromocaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    where?: PromocaoWhereInput
    orderBy?: PromocaoOrderByWithRelationInput | PromocaoOrderByWithRelationInput[]
    cursor?: PromocaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromocaoScalarFieldEnum | PromocaoScalarFieldEnum[]
  }

  /**
   * Servico without action
   */
  export type ServicoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
  }


  /**
   * Model Peca
   */

  export type AggregatePeca = {
    _count: PecaCountAggregateOutputType | null
    _avg: PecaAvgAggregateOutputType | null
    _sum: PecaSumAggregateOutputType | null
    _min: PecaMinAggregateOutputType | null
    _max: PecaMaxAggregateOutputType | null
  }

  export type PecaAvgAggregateOutputType = {
    valor: Decimal | null
    quantidade: number | null
  }

  export type PecaSumAggregateOutputType = {
    valor: Decimal | null
    quantidade: number | null
  }

  export type PecaMinAggregateOutputType = {
    id: string | null
    nome: string | null
    tipo: string | null
    valor: Decimal | null
    quantidade: number | null
    criadoPorId: string | null
  }

  export type PecaMaxAggregateOutputType = {
    id: string | null
    nome: string | null
    tipo: string | null
    valor: Decimal | null
    quantidade: number | null
    criadoPorId: string | null
  }

  export type PecaCountAggregateOutputType = {
    id: number
    nome: number
    tipo: number
    valor: number
    quantidade: number
    criadoPorId: number
    _all: number
  }


  export type PecaAvgAggregateInputType = {
    valor?: true
    quantidade?: true
  }

  export type PecaSumAggregateInputType = {
    valor?: true
    quantidade?: true
  }

  export type PecaMinAggregateInputType = {
    id?: true
    nome?: true
    tipo?: true
    valor?: true
    quantidade?: true
    criadoPorId?: true
  }

  export type PecaMaxAggregateInputType = {
    id?: true
    nome?: true
    tipo?: true
    valor?: true
    quantidade?: true
    criadoPorId?: true
  }

  export type PecaCountAggregateInputType = {
    id?: true
    nome?: true
    tipo?: true
    valor?: true
    quantidade?: true
    criadoPorId?: true
    _all?: true
  }

  export type PecaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Peca to aggregate.
     */
    where?: PecaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pecas to fetch.
     */
    orderBy?: PecaOrderByWithRelationInput | PecaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PecaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pecas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pecas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pecas
    **/
    _count?: true | PecaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PecaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PecaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PecaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PecaMaxAggregateInputType
  }

  export type GetPecaAggregateType<T extends PecaAggregateArgs> = {
        [P in keyof T & keyof AggregatePeca]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePeca[P]>
      : GetScalarType<T[P], AggregatePeca[P]>
  }




  export type PecaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecaWhereInput
    orderBy?: PecaOrderByWithAggregationInput | PecaOrderByWithAggregationInput[]
    by: PecaScalarFieldEnum[] | PecaScalarFieldEnum
    having?: PecaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PecaCountAggregateInputType | true
    _avg?: PecaAvgAggregateInputType
    _sum?: PecaSumAggregateInputType
    _min?: PecaMinAggregateInputType
    _max?: PecaMaxAggregateInputType
  }

  export type PecaGroupByOutputType = {
    id: string
    nome: string
    tipo: string
    valor: Decimal
    quantidade: number
    criadoPorId: string
    _count: PecaCountAggregateOutputType | null
    _avg: PecaAvgAggregateOutputType | null
    _sum: PecaSumAggregateOutputType | null
    _min: PecaMinAggregateOutputType | null
    _max: PecaMaxAggregateOutputType | null
  }

  type GetPecaGroupByPayload<T extends PecaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PecaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PecaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PecaGroupByOutputType[P]>
            : GetScalarType<T[P], PecaGroupByOutputType[P]>
        }
      >
    >


  export type PecaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipo?: boolean
    valor?: boolean
    quantidade?: boolean
    criadoPorId?: boolean
    criadoPor?: boolean | FuncionarioDefaultArgs<ExtArgs>
    ordensDeServico?: boolean | Peca$ordensDeServicoArgs<ExtArgs>
    _count?: boolean | PecaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["peca"]>

  export type PecaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipo?: boolean
    valor?: boolean
    quantidade?: boolean
    criadoPorId?: boolean
    criadoPor?: boolean | FuncionarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["peca"]>

  export type PecaSelectScalar = {
    id?: boolean
    nome?: boolean
    tipo?: boolean
    valor?: boolean
    quantidade?: boolean
    criadoPorId?: boolean
  }

  export type PecaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    criadoPor?: boolean | FuncionarioDefaultArgs<ExtArgs>
    ordensDeServico?: boolean | Peca$ordensDeServicoArgs<ExtArgs>
    _count?: boolean | PecaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PecaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    criadoPor?: boolean | FuncionarioDefaultArgs<ExtArgs>
  }

  export type $PecaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Peca"
    objects: {
      criadoPor: Prisma.$FuncionarioPayload<ExtArgs>
      ordensDeServico: Prisma.$OrdemDeServicoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nome: string
      tipo: string
      valor: Prisma.Decimal
      quantidade: number
      criadoPorId: string
    }, ExtArgs["result"]["peca"]>
    composites: {}
  }

  type PecaGetPayload<S extends boolean | null | undefined | PecaDefaultArgs> = $Result.GetResult<Prisma.$PecaPayload, S>

  type PecaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PecaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PecaCountAggregateInputType | true
    }

  export interface PecaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Peca'], meta: { name: 'Peca' } }
    /**
     * Find zero or one Peca that matches the filter.
     * @param {PecaFindUniqueArgs} args - Arguments to find a Peca
     * @example
     * // Get one Peca
     * const peca = await prisma.peca.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PecaFindUniqueArgs>(args: SelectSubset<T, PecaFindUniqueArgs<ExtArgs>>): Prisma__PecaClient<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Peca that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PecaFindUniqueOrThrowArgs} args - Arguments to find a Peca
     * @example
     * // Get one Peca
     * const peca = await prisma.peca.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PecaFindUniqueOrThrowArgs>(args: SelectSubset<T, PecaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PecaClient<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Peca that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecaFindFirstArgs} args - Arguments to find a Peca
     * @example
     * // Get one Peca
     * const peca = await prisma.peca.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PecaFindFirstArgs>(args?: SelectSubset<T, PecaFindFirstArgs<ExtArgs>>): Prisma__PecaClient<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Peca that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecaFindFirstOrThrowArgs} args - Arguments to find a Peca
     * @example
     * // Get one Peca
     * const peca = await prisma.peca.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PecaFindFirstOrThrowArgs>(args?: SelectSubset<T, PecaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PecaClient<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pecas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pecas
     * const pecas = await prisma.peca.findMany()
     * 
     * // Get first 10 Pecas
     * const pecas = await prisma.peca.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pecaWithIdOnly = await prisma.peca.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PecaFindManyArgs>(args?: SelectSubset<T, PecaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Peca.
     * @param {PecaCreateArgs} args - Arguments to create a Peca.
     * @example
     * // Create one Peca
     * const Peca = await prisma.peca.create({
     *   data: {
     *     // ... data to create a Peca
     *   }
     * })
     * 
     */
    create<T extends PecaCreateArgs>(args: SelectSubset<T, PecaCreateArgs<ExtArgs>>): Prisma__PecaClient<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pecas.
     * @param {PecaCreateManyArgs} args - Arguments to create many Pecas.
     * @example
     * // Create many Pecas
     * const peca = await prisma.peca.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PecaCreateManyArgs>(args?: SelectSubset<T, PecaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pecas and returns the data saved in the database.
     * @param {PecaCreateManyAndReturnArgs} args - Arguments to create many Pecas.
     * @example
     * // Create many Pecas
     * const peca = await prisma.peca.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pecas and only return the `id`
     * const pecaWithIdOnly = await prisma.peca.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PecaCreateManyAndReturnArgs>(args?: SelectSubset<T, PecaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Peca.
     * @param {PecaDeleteArgs} args - Arguments to delete one Peca.
     * @example
     * // Delete one Peca
     * const Peca = await prisma.peca.delete({
     *   where: {
     *     // ... filter to delete one Peca
     *   }
     * })
     * 
     */
    delete<T extends PecaDeleteArgs>(args: SelectSubset<T, PecaDeleteArgs<ExtArgs>>): Prisma__PecaClient<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Peca.
     * @param {PecaUpdateArgs} args - Arguments to update one Peca.
     * @example
     * // Update one Peca
     * const peca = await prisma.peca.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PecaUpdateArgs>(args: SelectSubset<T, PecaUpdateArgs<ExtArgs>>): Prisma__PecaClient<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pecas.
     * @param {PecaDeleteManyArgs} args - Arguments to filter Pecas to delete.
     * @example
     * // Delete a few Pecas
     * const { count } = await prisma.peca.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PecaDeleteManyArgs>(args?: SelectSubset<T, PecaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pecas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pecas
     * const peca = await prisma.peca.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PecaUpdateManyArgs>(args: SelectSubset<T, PecaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Peca.
     * @param {PecaUpsertArgs} args - Arguments to update or create a Peca.
     * @example
     * // Update or create a Peca
     * const peca = await prisma.peca.upsert({
     *   create: {
     *     // ... data to create a Peca
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Peca we want to update
     *   }
     * })
     */
    upsert<T extends PecaUpsertArgs>(args: SelectSubset<T, PecaUpsertArgs<ExtArgs>>): Prisma__PecaClient<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pecas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecaCountArgs} args - Arguments to filter Pecas to count.
     * @example
     * // Count the number of Pecas
     * const count = await prisma.peca.count({
     *   where: {
     *     // ... the filter for the Pecas we want to count
     *   }
     * })
    **/
    count<T extends PecaCountArgs>(
      args?: Subset<T, PecaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PecaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Peca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PecaAggregateArgs>(args: Subset<T, PecaAggregateArgs>): Prisma.PrismaPromise<GetPecaAggregateType<T>>

    /**
     * Group by Peca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PecaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PecaGroupByArgs['orderBy'] }
        : { orderBy?: PecaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PecaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPecaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Peca model
   */
  readonly fields: PecaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Peca.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PecaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    criadoPor<T extends FuncionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FuncionarioDefaultArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    ordensDeServico<T extends Peca$ordensDeServicoArgs<ExtArgs> = {}>(args?: Subset<T, Peca$ordensDeServicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Peca model
   */ 
  interface PecaFieldRefs {
    readonly id: FieldRef<"Peca", 'String'>
    readonly nome: FieldRef<"Peca", 'String'>
    readonly tipo: FieldRef<"Peca", 'String'>
    readonly valor: FieldRef<"Peca", 'Decimal'>
    readonly quantidade: FieldRef<"Peca", 'Int'>
    readonly criadoPorId: FieldRef<"Peca", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Peca findUnique
   */
  export type PecaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    /**
     * Filter, which Peca to fetch.
     */
    where: PecaWhereUniqueInput
  }

  /**
   * Peca findUniqueOrThrow
   */
  export type PecaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    /**
     * Filter, which Peca to fetch.
     */
    where: PecaWhereUniqueInput
  }

  /**
   * Peca findFirst
   */
  export type PecaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    /**
     * Filter, which Peca to fetch.
     */
    where?: PecaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pecas to fetch.
     */
    orderBy?: PecaOrderByWithRelationInput | PecaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pecas.
     */
    cursor?: PecaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pecas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pecas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pecas.
     */
    distinct?: PecaScalarFieldEnum | PecaScalarFieldEnum[]
  }

  /**
   * Peca findFirstOrThrow
   */
  export type PecaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    /**
     * Filter, which Peca to fetch.
     */
    where?: PecaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pecas to fetch.
     */
    orderBy?: PecaOrderByWithRelationInput | PecaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pecas.
     */
    cursor?: PecaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pecas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pecas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pecas.
     */
    distinct?: PecaScalarFieldEnum | PecaScalarFieldEnum[]
  }

  /**
   * Peca findMany
   */
  export type PecaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    /**
     * Filter, which Pecas to fetch.
     */
    where?: PecaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pecas to fetch.
     */
    orderBy?: PecaOrderByWithRelationInput | PecaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pecas.
     */
    cursor?: PecaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pecas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pecas.
     */
    skip?: number
    distinct?: PecaScalarFieldEnum | PecaScalarFieldEnum[]
  }

  /**
   * Peca create
   */
  export type PecaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    /**
     * The data needed to create a Peca.
     */
    data: XOR<PecaCreateInput, PecaUncheckedCreateInput>
  }

  /**
   * Peca createMany
   */
  export type PecaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pecas.
     */
    data: PecaCreateManyInput | PecaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Peca createManyAndReturn
   */
  export type PecaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Pecas.
     */
    data: PecaCreateManyInput | PecaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Peca update
   */
  export type PecaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    /**
     * The data needed to update a Peca.
     */
    data: XOR<PecaUpdateInput, PecaUncheckedUpdateInput>
    /**
     * Choose, which Peca to update.
     */
    where: PecaWhereUniqueInput
  }

  /**
   * Peca updateMany
   */
  export type PecaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pecas.
     */
    data: XOR<PecaUpdateManyMutationInput, PecaUncheckedUpdateManyInput>
    /**
     * Filter which Pecas to update
     */
    where?: PecaWhereInput
  }

  /**
   * Peca upsert
   */
  export type PecaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    /**
     * The filter to search for the Peca to update in case it exists.
     */
    where: PecaWhereUniqueInput
    /**
     * In case the Peca found by the `where` argument doesn't exist, create a new Peca with this data.
     */
    create: XOR<PecaCreateInput, PecaUncheckedCreateInput>
    /**
     * In case the Peca was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PecaUpdateInput, PecaUncheckedUpdateInput>
  }

  /**
   * Peca delete
   */
  export type PecaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    /**
     * Filter which Peca to delete.
     */
    where: PecaWhereUniqueInput
  }

  /**
   * Peca deleteMany
   */
  export type PecaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pecas to delete
     */
    where?: PecaWhereInput
  }

  /**
   * Peca.ordensDeServico
   */
  export type Peca$ordensDeServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    where?: OrdemDeServicoWhereInput
    orderBy?: OrdemDeServicoOrderByWithRelationInput | OrdemDeServicoOrderByWithRelationInput[]
    cursor?: OrdemDeServicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdemDeServicoScalarFieldEnum | OrdemDeServicoScalarFieldEnum[]
  }

  /**
   * Peca without action
   */
  export type PecaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
  }


  /**
   * Model OrdemDeServico
   */

  export type AggregateOrdemDeServico = {
    _count: OrdemDeServicoCountAggregateOutputType | null
    _avg: OrdemDeServicoAvgAggregateOutputType | null
    _sum: OrdemDeServicoSumAggregateOutputType | null
    _min: OrdemDeServicoMinAggregateOutputType | null
    _max: OrdemDeServicoMaxAggregateOutputType | null
  }

  export type OrdemDeServicoAvgAggregateOutputType = {
    valorTotal: number | null
  }

  export type OrdemDeServicoSumAggregateOutputType = {
    valorTotal: number | null
  }

  export type OrdemDeServicoMinAggregateOutputType = {
    id: string | null
    placaDoCarro: string | null
    servicosPrestados: string | null
    cpf: string | null
    valorTotal: number | null
    dataDeRealizacao: Date | null
    dataDeVencimento: Date | null
    status: $Enums.StatusOrdem | null
    clienteId: string | null
    criadoPorId: string | null
    aprovado: boolean | null
    aprovadoPorId: string | null
    servicoId: string | null
  }

  export type OrdemDeServicoMaxAggregateOutputType = {
    id: string | null
    placaDoCarro: string | null
    servicosPrestados: string | null
    cpf: string | null
    valorTotal: number | null
    dataDeRealizacao: Date | null
    dataDeVencimento: Date | null
    status: $Enums.StatusOrdem | null
    clienteId: string | null
    criadoPorId: string | null
    aprovado: boolean | null
    aprovadoPorId: string | null
    servicoId: string | null
  }

  export type OrdemDeServicoCountAggregateOutputType = {
    id: number
    placaDoCarro: number
    servicosPrestados: number
    cpf: number
    valorTotal: number
    dataDeRealizacao: number
    dataDeVencimento: number
    status: number
    clienteId: number
    criadoPorId: number
    aprovado: number
    aprovadoPorId: number
    servicoId: number
    _all: number
  }


  export type OrdemDeServicoAvgAggregateInputType = {
    valorTotal?: true
  }

  export type OrdemDeServicoSumAggregateInputType = {
    valorTotal?: true
  }

  export type OrdemDeServicoMinAggregateInputType = {
    id?: true
    placaDoCarro?: true
    servicosPrestados?: true
    cpf?: true
    valorTotal?: true
    dataDeRealizacao?: true
    dataDeVencimento?: true
    status?: true
    clienteId?: true
    criadoPorId?: true
    aprovado?: true
    aprovadoPorId?: true
    servicoId?: true
  }

  export type OrdemDeServicoMaxAggregateInputType = {
    id?: true
    placaDoCarro?: true
    servicosPrestados?: true
    cpf?: true
    valorTotal?: true
    dataDeRealizacao?: true
    dataDeVencimento?: true
    status?: true
    clienteId?: true
    criadoPorId?: true
    aprovado?: true
    aprovadoPorId?: true
    servicoId?: true
  }

  export type OrdemDeServicoCountAggregateInputType = {
    id?: true
    placaDoCarro?: true
    servicosPrestados?: true
    cpf?: true
    valorTotal?: true
    dataDeRealizacao?: true
    dataDeVencimento?: true
    status?: true
    clienteId?: true
    criadoPorId?: true
    aprovado?: true
    aprovadoPorId?: true
    servicoId?: true
    _all?: true
  }

  export type OrdemDeServicoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrdemDeServico to aggregate.
     */
    where?: OrdemDeServicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemDeServicos to fetch.
     */
    orderBy?: OrdemDeServicoOrderByWithRelationInput | OrdemDeServicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrdemDeServicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemDeServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemDeServicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrdemDeServicos
    **/
    _count?: true | OrdemDeServicoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdemDeServicoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdemDeServicoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdemDeServicoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdemDeServicoMaxAggregateInputType
  }

  export type GetOrdemDeServicoAggregateType<T extends OrdemDeServicoAggregateArgs> = {
        [P in keyof T & keyof AggregateOrdemDeServico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrdemDeServico[P]>
      : GetScalarType<T[P], AggregateOrdemDeServico[P]>
  }




  export type OrdemDeServicoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemDeServicoWhereInput
    orderBy?: OrdemDeServicoOrderByWithAggregationInput | OrdemDeServicoOrderByWithAggregationInput[]
    by: OrdemDeServicoScalarFieldEnum[] | OrdemDeServicoScalarFieldEnum
    having?: OrdemDeServicoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdemDeServicoCountAggregateInputType | true
    _avg?: OrdemDeServicoAvgAggregateInputType
    _sum?: OrdemDeServicoSumAggregateInputType
    _min?: OrdemDeServicoMinAggregateInputType
    _max?: OrdemDeServicoMaxAggregateInputType
  }

  export type OrdemDeServicoGroupByOutputType = {
    id: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date
    dataDeVencimento: Date
    status: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado: boolean
    aprovadoPorId: string | null
    servicoId: string | null
    _count: OrdemDeServicoCountAggregateOutputType | null
    _avg: OrdemDeServicoAvgAggregateOutputType | null
    _sum: OrdemDeServicoSumAggregateOutputType | null
    _min: OrdemDeServicoMinAggregateOutputType | null
    _max: OrdemDeServicoMaxAggregateOutputType | null
  }

  type GetOrdemDeServicoGroupByPayload<T extends OrdemDeServicoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdemDeServicoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdemDeServicoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdemDeServicoGroupByOutputType[P]>
            : GetScalarType<T[P], OrdemDeServicoGroupByOutputType[P]>
        }
      >
    >


  export type OrdemDeServicoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    placaDoCarro?: boolean
    servicosPrestados?: boolean
    cpf?: boolean
    valorTotal?: boolean
    dataDeRealizacao?: boolean
    dataDeVencimento?: boolean
    status?: boolean
    clienteId?: boolean
    criadoPorId?: boolean
    aprovado?: boolean
    aprovadoPorId?: boolean
    servicoId?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    criadoPor?: boolean | FuncionarioDefaultArgs<ExtArgs>
    aprovadoPor?: boolean | OrdemDeServico$aprovadoPorArgs<ExtArgs>
    pecasUsadas?: boolean | OrdemDeServico$pecasUsadasArgs<ExtArgs>
    pagamentos?: boolean | OrdemDeServico$pagamentosArgs<ExtArgs>
    servico?: boolean | OrdemDeServico$servicoArgs<ExtArgs>
    ordemDeEstoque?: boolean | OrdemDeServico$ordemDeEstoqueArgs<ExtArgs>
    Notificacao?: boolean | OrdemDeServico$NotificacaoArgs<ExtArgs>
    _count?: boolean | OrdemDeServicoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ordemDeServico"]>

  export type OrdemDeServicoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    placaDoCarro?: boolean
    servicosPrestados?: boolean
    cpf?: boolean
    valorTotal?: boolean
    dataDeRealizacao?: boolean
    dataDeVencimento?: boolean
    status?: boolean
    clienteId?: boolean
    criadoPorId?: boolean
    aprovado?: boolean
    aprovadoPorId?: boolean
    servicoId?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    criadoPor?: boolean | FuncionarioDefaultArgs<ExtArgs>
    aprovadoPor?: boolean | OrdemDeServico$aprovadoPorArgs<ExtArgs>
    servico?: boolean | OrdemDeServico$servicoArgs<ExtArgs>
  }, ExtArgs["result"]["ordemDeServico"]>

  export type OrdemDeServicoSelectScalar = {
    id?: boolean
    placaDoCarro?: boolean
    servicosPrestados?: boolean
    cpf?: boolean
    valorTotal?: boolean
    dataDeRealizacao?: boolean
    dataDeVencimento?: boolean
    status?: boolean
    clienteId?: boolean
    criadoPorId?: boolean
    aprovado?: boolean
    aprovadoPorId?: boolean
    servicoId?: boolean
  }

  export type OrdemDeServicoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    criadoPor?: boolean | FuncionarioDefaultArgs<ExtArgs>
    aprovadoPor?: boolean | OrdemDeServico$aprovadoPorArgs<ExtArgs>
    pecasUsadas?: boolean | OrdemDeServico$pecasUsadasArgs<ExtArgs>
    pagamentos?: boolean | OrdemDeServico$pagamentosArgs<ExtArgs>
    servico?: boolean | OrdemDeServico$servicoArgs<ExtArgs>
    ordemDeEstoque?: boolean | OrdemDeServico$ordemDeEstoqueArgs<ExtArgs>
    Notificacao?: boolean | OrdemDeServico$NotificacaoArgs<ExtArgs>
    _count?: boolean | OrdemDeServicoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrdemDeServicoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    criadoPor?: boolean | FuncionarioDefaultArgs<ExtArgs>
    aprovadoPor?: boolean | OrdemDeServico$aprovadoPorArgs<ExtArgs>
    servico?: boolean | OrdemDeServico$servicoArgs<ExtArgs>
  }

  export type $OrdemDeServicoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrdemDeServico"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      criadoPor: Prisma.$FuncionarioPayload<ExtArgs>
      aprovadoPor: Prisma.$FuncionarioPayload<ExtArgs> | null
      pecasUsadas: Prisma.$PecaPayload<ExtArgs>[]
      pagamentos: Prisma.$OrdemServicoPagamentoPayload<ExtArgs>[]
      servico: Prisma.$ServicoPayload<ExtArgs> | null
      ordemDeEstoque: Prisma.$OrdemEstoquePayload<ExtArgs> | null
      Notificacao: Prisma.$NotificacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      placaDoCarro: string
      servicosPrestados: string
      cpf: string
      valorTotal: number
      dataDeRealizacao: Date
      dataDeVencimento: Date
      status: $Enums.StatusOrdem
      clienteId: string
      criadoPorId: string
      aprovado: boolean
      aprovadoPorId: string | null
      servicoId: string | null
    }, ExtArgs["result"]["ordemDeServico"]>
    composites: {}
  }

  type OrdemDeServicoGetPayload<S extends boolean | null | undefined | OrdemDeServicoDefaultArgs> = $Result.GetResult<Prisma.$OrdemDeServicoPayload, S>

  type OrdemDeServicoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrdemDeServicoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrdemDeServicoCountAggregateInputType | true
    }

  export interface OrdemDeServicoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrdemDeServico'], meta: { name: 'OrdemDeServico' } }
    /**
     * Find zero or one OrdemDeServico that matches the filter.
     * @param {OrdemDeServicoFindUniqueArgs} args - Arguments to find a OrdemDeServico
     * @example
     * // Get one OrdemDeServico
     * const ordemDeServico = await prisma.ordemDeServico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrdemDeServicoFindUniqueArgs>(args: SelectSubset<T, OrdemDeServicoFindUniqueArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one OrdemDeServico that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrdemDeServicoFindUniqueOrThrowArgs} args - Arguments to find a OrdemDeServico
     * @example
     * // Get one OrdemDeServico
     * const ordemDeServico = await prisma.ordemDeServico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrdemDeServicoFindUniqueOrThrowArgs>(args: SelectSubset<T, OrdemDeServicoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first OrdemDeServico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemDeServicoFindFirstArgs} args - Arguments to find a OrdemDeServico
     * @example
     * // Get one OrdemDeServico
     * const ordemDeServico = await prisma.ordemDeServico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrdemDeServicoFindFirstArgs>(args?: SelectSubset<T, OrdemDeServicoFindFirstArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first OrdemDeServico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemDeServicoFindFirstOrThrowArgs} args - Arguments to find a OrdemDeServico
     * @example
     * // Get one OrdemDeServico
     * const ordemDeServico = await prisma.ordemDeServico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrdemDeServicoFindFirstOrThrowArgs>(args?: SelectSubset<T, OrdemDeServicoFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more OrdemDeServicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemDeServicoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrdemDeServicos
     * const ordemDeServicos = await prisma.ordemDeServico.findMany()
     * 
     * // Get first 10 OrdemDeServicos
     * const ordemDeServicos = await prisma.ordemDeServico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordemDeServicoWithIdOnly = await prisma.ordemDeServico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrdemDeServicoFindManyArgs>(args?: SelectSubset<T, OrdemDeServicoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a OrdemDeServico.
     * @param {OrdemDeServicoCreateArgs} args - Arguments to create a OrdemDeServico.
     * @example
     * // Create one OrdemDeServico
     * const OrdemDeServico = await prisma.ordemDeServico.create({
     *   data: {
     *     // ... data to create a OrdemDeServico
     *   }
     * })
     * 
     */
    create<T extends OrdemDeServicoCreateArgs>(args: SelectSubset<T, OrdemDeServicoCreateArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many OrdemDeServicos.
     * @param {OrdemDeServicoCreateManyArgs} args - Arguments to create many OrdemDeServicos.
     * @example
     * // Create many OrdemDeServicos
     * const ordemDeServico = await prisma.ordemDeServico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrdemDeServicoCreateManyArgs>(args?: SelectSubset<T, OrdemDeServicoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrdemDeServicos and returns the data saved in the database.
     * @param {OrdemDeServicoCreateManyAndReturnArgs} args - Arguments to create many OrdemDeServicos.
     * @example
     * // Create many OrdemDeServicos
     * const ordemDeServico = await prisma.ordemDeServico.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrdemDeServicos and only return the `id`
     * const ordemDeServicoWithIdOnly = await prisma.ordemDeServico.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrdemDeServicoCreateManyAndReturnArgs>(args?: SelectSubset<T, OrdemDeServicoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a OrdemDeServico.
     * @param {OrdemDeServicoDeleteArgs} args - Arguments to delete one OrdemDeServico.
     * @example
     * // Delete one OrdemDeServico
     * const OrdemDeServico = await prisma.ordemDeServico.delete({
     *   where: {
     *     // ... filter to delete one OrdemDeServico
     *   }
     * })
     * 
     */
    delete<T extends OrdemDeServicoDeleteArgs>(args: SelectSubset<T, OrdemDeServicoDeleteArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one OrdemDeServico.
     * @param {OrdemDeServicoUpdateArgs} args - Arguments to update one OrdemDeServico.
     * @example
     * // Update one OrdemDeServico
     * const ordemDeServico = await prisma.ordemDeServico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrdemDeServicoUpdateArgs>(args: SelectSubset<T, OrdemDeServicoUpdateArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more OrdemDeServicos.
     * @param {OrdemDeServicoDeleteManyArgs} args - Arguments to filter OrdemDeServicos to delete.
     * @example
     * // Delete a few OrdemDeServicos
     * const { count } = await prisma.ordemDeServico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrdemDeServicoDeleteManyArgs>(args?: SelectSubset<T, OrdemDeServicoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrdemDeServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemDeServicoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrdemDeServicos
     * const ordemDeServico = await prisma.ordemDeServico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrdemDeServicoUpdateManyArgs>(args: SelectSubset<T, OrdemDeServicoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrdemDeServico.
     * @param {OrdemDeServicoUpsertArgs} args - Arguments to update or create a OrdemDeServico.
     * @example
     * // Update or create a OrdemDeServico
     * const ordemDeServico = await prisma.ordemDeServico.upsert({
     *   create: {
     *     // ... data to create a OrdemDeServico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrdemDeServico we want to update
     *   }
     * })
     */
    upsert<T extends OrdemDeServicoUpsertArgs>(args: SelectSubset<T, OrdemDeServicoUpsertArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of OrdemDeServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemDeServicoCountArgs} args - Arguments to filter OrdemDeServicos to count.
     * @example
     * // Count the number of OrdemDeServicos
     * const count = await prisma.ordemDeServico.count({
     *   where: {
     *     // ... the filter for the OrdemDeServicos we want to count
     *   }
     * })
    **/
    count<T extends OrdemDeServicoCountArgs>(
      args?: Subset<T, OrdemDeServicoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdemDeServicoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrdemDeServico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemDeServicoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdemDeServicoAggregateArgs>(args: Subset<T, OrdemDeServicoAggregateArgs>): Prisma.PrismaPromise<GetOrdemDeServicoAggregateType<T>>

    /**
     * Group by OrdemDeServico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemDeServicoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrdemDeServicoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrdemDeServicoGroupByArgs['orderBy'] }
        : { orderBy?: OrdemDeServicoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrdemDeServicoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdemDeServicoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrdemDeServico model
   */
  readonly fields: OrdemDeServicoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrdemDeServico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrdemDeServicoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    criadoPor<T extends FuncionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FuncionarioDefaultArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    aprovadoPor<T extends OrdemDeServico$aprovadoPorArgs<ExtArgs> = {}>(args?: Subset<T, OrdemDeServico$aprovadoPorArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    pecasUsadas<T extends OrdemDeServico$pecasUsadasArgs<ExtArgs> = {}>(args?: Subset<T, OrdemDeServico$pecasUsadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecaPayload<ExtArgs>, T, "findMany"> | Null>
    pagamentos<T extends OrdemDeServico$pagamentosArgs<ExtArgs> = {}>(args?: Subset<T, OrdemDeServico$pagamentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "findMany"> | Null>
    servico<T extends OrdemDeServico$servicoArgs<ExtArgs> = {}>(args?: Subset<T, OrdemDeServico$servicoArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    ordemDeEstoque<T extends OrdemDeServico$ordemDeEstoqueArgs<ExtArgs> = {}>(args?: Subset<T, OrdemDeServico$ordemDeEstoqueArgs<ExtArgs>>): Prisma__OrdemEstoqueClient<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    Notificacao<T extends OrdemDeServico$NotificacaoArgs<ExtArgs> = {}>(args?: Subset<T, OrdemDeServico$NotificacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrdemDeServico model
   */ 
  interface OrdemDeServicoFieldRefs {
    readonly id: FieldRef<"OrdemDeServico", 'String'>
    readonly placaDoCarro: FieldRef<"OrdemDeServico", 'String'>
    readonly servicosPrestados: FieldRef<"OrdemDeServico", 'String'>
    readonly cpf: FieldRef<"OrdemDeServico", 'String'>
    readonly valorTotal: FieldRef<"OrdemDeServico", 'Float'>
    readonly dataDeRealizacao: FieldRef<"OrdemDeServico", 'DateTime'>
    readonly dataDeVencimento: FieldRef<"OrdemDeServico", 'DateTime'>
    readonly status: FieldRef<"OrdemDeServico", 'StatusOrdem'>
    readonly clienteId: FieldRef<"OrdemDeServico", 'String'>
    readonly criadoPorId: FieldRef<"OrdemDeServico", 'String'>
    readonly aprovado: FieldRef<"OrdemDeServico", 'Boolean'>
    readonly aprovadoPorId: FieldRef<"OrdemDeServico", 'String'>
    readonly servicoId: FieldRef<"OrdemDeServico", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrdemDeServico findUnique
   */
  export type OrdemDeServicoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemDeServico to fetch.
     */
    where: OrdemDeServicoWhereUniqueInput
  }

  /**
   * OrdemDeServico findUniqueOrThrow
   */
  export type OrdemDeServicoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemDeServico to fetch.
     */
    where: OrdemDeServicoWhereUniqueInput
  }

  /**
   * OrdemDeServico findFirst
   */
  export type OrdemDeServicoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemDeServico to fetch.
     */
    where?: OrdemDeServicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemDeServicos to fetch.
     */
    orderBy?: OrdemDeServicoOrderByWithRelationInput | OrdemDeServicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrdemDeServicos.
     */
    cursor?: OrdemDeServicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemDeServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemDeServicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrdemDeServicos.
     */
    distinct?: OrdemDeServicoScalarFieldEnum | OrdemDeServicoScalarFieldEnum[]
  }

  /**
   * OrdemDeServico findFirstOrThrow
   */
  export type OrdemDeServicoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemDeServico to fetch.
     */
    where?: OrdemDeServicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemDeServicos to fetch.
     */
    orderBy?: OrdemDeServicoOrderByWithRelationInput | OrdemDeServicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrdemDeServicos.
     */
    cursor?: OrdemDeServicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemDeServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemDeServicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrdemDeServicos.
     */
    distinct?: OrdemDeServicoScalarFieldEnum | OrdemDeServicoScalarFieldEnum[]
  }

  /**
   * OrdemDeServico findMany
   */
  export type OrdemDeServicoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemDeServicos to fetch.
     */
    where?: OrdemDeServicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemDeServicos to fetch.
     */
    orderBy?: OrdemDeServicoOrderByWithRelationInput | OrdemDeServicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrdemDeServicos.
     */
    cursor?: OrdemDeServicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemDeServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemDeServicos.
     */
    skip?: number
    distinct?: OrdemDeServicoScalarFieldEnum | OrdemDeServicoScalarFieldEnum[]
  }

  /**
   * OrdemDeServico create
   */
  export type OrdemDeServicoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    /**
     * The data needed to create a OrdemDeServico.
     */
    data: XOR<OrdemDeServicoCreateInput, OrdemDeServicoUncheckedCreateInput>
  }

  /**
   * OrdemDeServico createMany
   */
  export type OrdemDeServicoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrdemDeServicos.
     */
    data: OrdemDeServicoCreateManyInput | OrdemDeServicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrdemDeServico createManyAndReturn
   */
  export type OrdemDeServicoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many OrdemDeServicos.
     */
    data: OrdemDeServicoCreateManyInput | OrdemDeServicoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrdemDeServico update
   */
  export type OrdemDeServicoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    /**
     * The data needed to update a OrdemDeServico.
     */
    data: XOR<OrdemDeServicoUpdateInput, OrdemDeServicoUncheckedUpdateInput>
    /**
     * Choose, which OrdemDeServico to update.
     */
    where: OrdemDeServicoWhereUniqueInput
  }

  /**
   * OrdemDeServico updateMany
   */
  export type OrdemDeServicoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrdemDeServicos.
     */
    data: XOR<OrdemDeServicoUpdateManyMutationInput, OrdemDeServicoUncheckedUpdateManyInput>
    /**
     * Filter which OrdemDeServicos to update
     */
    where?: OrdemDeServicoWhereInput
  }

  /**
   * OrdemDeServico upsert
   */
  export type OrdemDeServicoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    /**
     * The filter to search for the OrdemDeServico to update in case it exists.
     */
    where: OrdemDeServicoWhereUniqueInput
    /**
     * In case the OrdemDeServico found by the `where` argument doesn't exist, create a new OrdemDeServico with this data.
     */
    create: XOR<OrdemDeServicoCreateInput, OrdemDeServicoUncheckedCreateInput>
    /**
     * In case the OrdemDeServico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrdemDeServicoUpdateInput, OrdemDeServicoUncheckedUpdateInput>
  }

  /**
   * OrdemDeServico delete
   */
  export type OrdemDeServicoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    /**
     * Filter which OrdemDeServico to delete.
     */
    where: OrdemDeServicoWhereUniqueInput
  }

  /**
   * OrdemDeServico deleteMany
   */
  export type OrdemDeServicoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrdemDeServicos to delete
     */
    where?: OrdemDeServicoWhereInput
  }

  /**
   * OrdemDeServico.aprovadoPor
   */
  export type OrdemDeServico$aprovadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * OrdemDeServico.pecasUsadas
   */
  export type OrdemDeServico$pecasUsadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Peca
     */
    select?: PecaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecaInclude<ExtArgs> | null
    where?: PecaWhereInput
    orderBy?: PecaOrderByWithRelationInput | PecaOrderByWithRelationInput[]
    cursor?: PecaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PecaScalarFieldEnum | PecaScalarFieldEnum[]
  }

  /**
   * OrdemDeServico.pagamentos
   */
  export type OrdemDeServico$pagamentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    where?: OrdemServicoPagamentoWhereInput
    orderBy?: OrdemServicoPagamentoOrderByWithRelationInput | OrdemServicoPagamentoOrderByWithRelationInput[]
    cursor?: OrdemServicoPagamentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdemServicoPagamentoScalarFieldEnum | OrdemServicoPagamentoScalarFieldEnum[]
  }

  /**
   * OrdemDeServico.servico
   */
  export type OrdemDeServico$servicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    where?: ServicoWhereInput
  }

  /**
   * OrdemDeServico.ordemDeEstoque
   */
  export type OrdemDeServico$ordemDeEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    where?: OrdemEstoqueWhereInput
  }

  /**
   * OrdemDeServico.Notificacao
   */
  export type OrdemDeServico$NotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    where?: NotificacaoWhereInput
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    cursor?: NotificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * OrdemDeServico without action
   */
  export type OrdemDeServicoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
  }


  /**
   * Model OrdemEstoque
   */

  export type AggregateOrdemEstoque = {
    _count: OrdemEstoqueCountAggregateOutputType | null
    _min: OrdemEstoqueMinAggregateOutputType | null
    _max: OrdemEstoqueMaxAggregateOutputType | null
  }

  export type OrdemEstoqueMinAggregateOutputType = {
    id: string | null
    ordemDeServicoId: string | null
    pecaAprovada: boolean | null
    mensagem: string | null
    aprovadoPorId: string | null
  }

  export type OrdemEstoqueMaxAggregateOutputType = {
    id: string | null
    ordemDeServicoId: string | null
    pecaAprovada: boolean | null
    mensagem: string | null
    aprovadoPorId: string | null
  }

  export type OrdemEstoqueCountAggregateOutputType = {
    id: number
    ordemDeServicoId: number
    pecaAprovada: number
    mensagem: number
    aprovadoPorId: number
    _all: number
  }


  export type OrdemEstoqueMinAggregateInputType = {
    id?: true
    ordemDeServicoId?: true
    pecaAprovada?: true
    mensagem?: true
    aprovadoPorId?: true
  }

  export type OrdemEstoqueMaxAggregateInputType = {
    id?: true
    ordemDeServicoId?: true
    pecaAprovada?: true
    mensagem?: true
    aprovadoPorId?: true
  }

  export type OrdemEstoqueCountAggregateInputType = {
    id?: true
    ordemDeServicoId?: true
    pecaAprovada?: true
    mensagem?: true
    aprovadoPorId?: true
    _all?: true
  }

  export type OrdemEstoqueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrdemEstoque to aggregate.
     */
    where?: OrdemEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemEstoques to fetch.
     */
    orderBy?: OrdemEstoqueOrderByWithRelationInput | OrdemEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrdemEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrdemEstoques
    **/
    _count?: true | OrdemEstoqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdemEstoqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdemEstoqueMaxAggregateInputType
  }

  export type GetOrdemEstoqueAggregateType<T extends OrdemEstoqueAggregateArgs> = {
        [P in keyof T & keyof AggregateOrdemEstoque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrdemEstoque[P]>
      : GetScalarType<T[P], AggregateOrdemEstoque[P]>
  }




  export type OrdemEstoqueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemEstoqueWhereInput
    orderBy?: OrdemEstoqueOrderByWithAggregationInput | OrdemEstoqueOrderByWithAggregationInput[]
    by: OrdemEstoqueScalarFieldEnum[] | OrdemEstoqueScalarFieldEnum
    having?: OrdemEstoqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdemEstoqueCountAggregateInputType | true
    _min?: OrdemEstoqueMinAggregateInputType
    _max?: OrdemEstoqueMaxAggregateInputType
  }

  export type OrdemEstoqueGroupByOutputType = {
    id: string
    ordemDeServicoId: string | null
    pecaAprovada: boolean
    mensagem: string | null
    aprovadoPorId: string | null
    _count: OrdemEstoqueCountAggregateOutputType | null
    _min: OrdemEstoqueMinAggregateOutputType | null
    _max: OrdemEstoqueMaxAggregateOutputType | null
  }

  type GetOrdemEstoqueGroupByPayload<T extends OrdemEstoqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdemEstoqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdemEstoqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdemEstoqueGroupByOutputType[P]>
            : GetScalarType<T[P], OrdemEstoqueGroupByOutputType[P]>
        }
      >
    >


  export type OrdemEstoqueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ordemDeServicoId?: boolean
    pecaAprovada?: boolean
    mensagem?: boolean
    aprovadoPorId?: boolean
    ordemDeServico?: boolean | OrdemEstoque$ordemDeServicoArgs<ExtArgs>
    aprovadoPor?: boolean | OrdemEstoque$aprovadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["ordemEstoque"]>

  export type OrdemEstoqueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ordemDeServicoId?: boolean
    pecaAprovada?: boolean
    mensagem?: boolean
    aprovadoPorId?: boolean
    ordemDeServico?: boolean | OrdemEstoque$ordemDeServicoArgs<ExtArgs>
    aprovadoPor?: boolean | OrdemEstoque$aprovadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["ordemEstoque"]>

  export type OrdemEstoqueSelectScalar = {
    id?: boolean
    ordemDeServicoId?: boolean
    pecaAprovada?: boolean
    mensagem?: boolean
    aprovadoPorId?: boolean
  }

  export type OrdemEstoqueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordemDeServico?: boolean | OrdemEstoque$ordemDeServicoArgs<ExtArgs>
    aprovadoPor?: boolean | OrdemEstoque$aprovadoPorArgs<ExtArgs>
  }
  export type OrdemEstoqueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordemDeServico?: boolean | OrdemEstoque$ordemDeServicoArgs<ExtArgs>
    aprovadoPor?: boolean | OrdemEstoque$aprovadoPorArgs<ExtArgs>
  }

  export type $OrdemEstoquePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrdemEstoque"
    objects: {
      ordemDeServico: Prisma.$OrdemDeServicoPayload<ExtArgs> | null
      aprovadoPor: Prisma.$FuncionarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ordemDeServicoId: string | null
      pecaAprovada: boolean
      mensagem: string | null
      aprovadoPorId: string | null
    }, ExtArgs["result"]["ordemEstoque"]>
    composites: {}
  }

  type OrdemEstoqueGetPayload<S extends boolean | null | undefined | OrdemEstoqueDefaultArgs> = $Result.GetResult<Prisma.$OrdemEstoquePayload, S>

  type OrdemEstoqueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrdemEstoqueFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrdemEstoqueCountAggregateInputType | true
    }

  export interface OrdemEstoqueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrdemEstoque'], meta: { name: 'OrdemEstoque' } }
    /**
     * Find zero or one OrdemEstoque that matches the filter.
     * @param {OrdemEstoqueFindUniqueArgs} args - Arguments to find a OrdemEstoque
     * @example
     * // Get one OrdemEstoque
     * const ordemEstoque = await prisma.ordemEstoque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrdemEstoqueFindUniqueArgs>(args: SelectSubset<T, OrdemEstoqueFindUniqueArgs<ExtArgs>>): Prisma__OrdemEstoqueClient<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one OrdemEstoque that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrdemEstoqueFindUniqueOrThrowArgs} args - Arguments to find a OrdemEstoque
     * @example
     * // Get one OrdemEstoque
     * const ordemEstoque = await prisma.ordemEstoque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrdemEstoqueFindUniqueOrThrowArgs>(args: SelectSubset<T, OrdemEstoqueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrdemEstoqueClient<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first OrdemEstoque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemEstoqueFindFirstArgs} args - Arguments to find a OrdemEstoque
     * @example
     * // Get one OrdemEstoque
     * const ordemEstoque = await prisma.ordemEstoque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrdemEstoqueFindFirstArgs>(args?: SelectSubset<T, OrdemEstoqueFindFirstArgs<ExtArgs>>): Prisma__OrdemEstoqueClient<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first OrdemEstoque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemEstoqueFindFirstOrThrowArgs} args - Arguments to find a OrdemEstoque
     * @example
     * // Get one OrdemEstoque
     * const ordemEstoque = await prisma.ordemEstoque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrdemEstoqueFindFirstOrThrowArgs>(args?: SelectSubset<T, OrdemEstoqueFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrdemEstoqueClient<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more OrdemEstoques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemEstoqueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrdemEstoques
     * const ordemEstoques = await prisma.ordemEstoque.findMany()
     * 
     * // Get first 10 OrdemEstoques
     * const ordemEstoques = await prisma.ordemEstoque.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordemEstoqueWithIdOnly = await prisma.ordemEstoque.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrdemEstoqueFindManyArgs>(args?: SelectSubset<T, OrdemEstoqueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a OrdemEstoque.
     * @param {OrdemEstoqueCreateArgs} args - Arguments to create a OrdemEstoque.
     * @example
     * // Create one OrdemEstoque
     * const OrdemEstoque = await prisma.ordemEstoque.create({
     *   data: {
     *     // ... data to create a OrdemEstoque
     *   }
     * })
     * 
     */
    create<T extends OrdemEstoqueCreateArgs>(args: SelectSubset<T, OrdemEstoqueCreateArgs<ExtArgs>>): Prisma__OrdemEstoqueClient<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many OrdemEstoques.
     * @param {OrdemEstoqueCreateManyArgs} args - Arguments to create many OrdemEstoques.
     * @example
     * // Create many OrdemEstoques
     * const ordemEstoque = await prisma.ordemEstoque.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrdemEstoqueCreateManyArgs>(args?: SelectSubset<T, OrdemEstoqueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrdemEstoques and returns the data saved in the database.
     * @param {OrdemEstoqueCreateManyAndReturnArgs} args - Arguments to create many OrdemEstoques.
     * @example
     * // Create many OrdemEstoques
     * const ordemEstoque = await prisma.ordemEstoque.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrdemEstoques and only return the `id`
     * const ordemEstoqueWithIdOnly = await prisma.ordemEstoque.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrdemEstoqueCreateManyAndReturnArgs>(args?: SelectSubset<T, OrdemEstoqueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a OrdemEstoque.
     * @param {OrdemEstoqueDeleteArgs} args - Arguments to delete one OrdemEstoque.
     * @example
     * // Delete one OrdemEstoque
     * const OrdemEstoque = await prisma.ordemEstoque.delete({
     *   where: {
     *     // ... filter to delete one OrdemEstoque
     *   }
     * })
     * 
     */
    delete<T extends OrdemEstoqueDeleteArgs>(args: SelectSubset<T, OrdemEstoqueDeleteArgs<ExtArgs>>): Prisma__OrdemEstoqueClient<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one OrdemEstoque.
     * @param {OrdemEstoqueUpdateArgs} args - Arguments to update one OrdemEstoque.
     * @example
     * // Update one OrdemEstoque
     * const ordemEstoque = await prisma.ordemEstoque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrdemEstoqueUpdateArgs>(args: SelectSubset<T, OrdemEstoqueUpdateArgs<ExtArgs>>): Prisma__OrdemEstoqueClient<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more OrdemEstoques.
     * @param {OrdemEstoqueDeleteManyArgs} args - Arguments to filter OrdemEstoques to delete.
     * @example
     * // Delete a few OrdemEstoques
     * const { count } = await prisma.ordemEstoque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrdemEstoqueDeleteManyArgs>(args?: SelectSubset<T, OrdemEstoqueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrdemEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemEstoqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrdemEstoques
     * const ordemEstoque = await prisma.ordemEstoque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrdemEstoqueUpdateManyArgs>(args: SelectSubset<T, OrdemEstoqueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrdemEstoque.
     * @param {OrdemEstoqueUpsertArgs} args - Arguments to update or create a OrdemEstoque.
     * @example
     * // Update or create a OrdemEstoque
     * const ordemEstoque = await prisma.ordemEstoque.upsert({
     *   create: {
     *     // ... data to create a OrdemEstoque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrdemEstoque we want to update
     *   }
     * })
     */
    upsert<T extends OrdemEstoqueUpsertArgs>(args: SelectSubset<T, OrdemEstoqueUpsertArgs<ExtArgs>>): Prisma__OrdemEstoqueClient<$Result.GetResult<Prisma.$OrdemEstoquePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of OrdemEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemEstoqueCountArgs} args - Arguments to filter OrdemEstoques to count.
     * @example
     * // Count the number of OrdemEstoques
     * const count = await prisma.ordemEstoque.count({
     *   where: {
     *     // ... the filter for the OrdemEstoques we want to count
     *   }
     * })
    **/
    count<T extends OrdemEstoqueCountArgs>(
      args?: Subset<T, OrdemEstoqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdemEstoqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrdemEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemEstoqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdemEstoqueAggregateArgs>(args: Subset<T, OrdemEstoqueAggregateArgs>): Prisma.PrismaPromise<GetOrdemEstoqueAggregateType<T>>

    /**
     * Group by OrdemEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemEstoqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrdemEstoqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrdemEstoqueGroupByArgs['orderBy'] }
        : { orderBy?: OrdemEstoqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrdemEstoqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdemEstoqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrdemEstoque model
   */
  readonly fields: OrdemEstoqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrdemEstoque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrdemEstoqueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ordemDeServico<T extends OrdemEstoque$ordemDeServicoArgs<ExtArgs> = {}>(args?: Subset<T, OrdemEstoque$ordemDeServicoArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    aprovadoPor<T extends OrdemEstoque$aprovadoPorArgs<ExtArgs> = {}>(args?: Subset<T, OrdemEstoque$aprovadoPorArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrdemEstoque model
   */ 
  interface OrdemEstoqueFieldRefs {
    readonly id: FieldRef<"OrdemEstoque", 'String'>
    readonly ordemDeServicoId: FieldRef<"OrdemEstoque", 'String'>
    readonly pecaAprovada: FieldRef<"OrdemEstoque", 'Boolean'>
    readonly mensagem: FieldRef<"OrdemEstoque", 'String'>
    readonly aprovadoPorId: FieldRef<"OrdemEstoque", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrdemEstoque findUnique
   */
  export type OrdemEstoqueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which OrdemEstoque to fetch.
     */
    where: OrdemEstoqueWhereUniqueInput
  }

  /**
   * OrdemEstoque findUniqueOrThrow
   */
  export type OrdemEstoqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which OrdemEstoque to fetch.
     */
    where: OrdemEstoqueWhereUniqueInput
  }

  /**
   * OrdemEstoque findFirst
   */
  export type OrdemEstoqueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which OrdemEstoque to fetch.
     */
    where?: OrdemEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemEstoques to fetch.
     */
    orderBy?: OrdemEstoqueOrderByWithRelationInput | OrdemEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrdemEstoques.
     */
    cursor?: OrdemEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrdemEstoques.
     */
    distinct?: OrdemEstoqueScalarFieldEnum | OrdemEstoqueScalarFieldEnum[]
  }

  /**
   * OrdemEstoque findFirstOrThrow
   */
  export type OrdemEstoqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which OrdemEstoque to fetch.
     */
    where?: OrdemEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemEstoques to fetch.
     */
    orderBy?: OrdemEstoqueOrderByWithRelationInput | OrdemEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrdemEstoques.
     */
    cursor?: OrdemEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrdemEstoques.
     */
    distinct?: OrdemEstoqueScalarFieldEnum | OrdemEstoqueScalarFieldEnum[]
  }

  /**
   * OrdemEstoque findMany
   */
  export type OrdemEstoqueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which OrdemEstoques to fetch.
     */
    where?: OrdemEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemEstoques to fetch.
     */
    orderBy?: OrdemEstoqueOrderByWithRelationInput | OrdemEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrdemEstoques.
     */
    cursor?: OrdemEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemEstoques.
     */
    skip?: number
    distinct?: OrdemEstoqueScalarFieldEnum | OrdemEstoqueScalarFieldEnum[]
  }

  /**
   * OrdemEstoque create
   */
  export type OrdemEstoqueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to create a OrdemEstoque.
     */
    data?: XOR<OrdemEstoqueCreateInput, OrdemEstoqueUncheckedCreateInput>
  }

  /**
   * OrdemEstoque createMany
   */
  export type OrdemEstoqueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrdemEstoques.
     */
    data: OrdemEstoqueCreateManyInput | OrdemEstoqueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrdemEstoque createManyAndReturn
   */
  export type OrdemEstoqueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many OrdemEstoques.
     */
    data: OrdemEstoqueCreateManyInput | OrdemEstoqueCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrdemEstoque update
   */
  export type OrdemEstoqueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to update a OrdemEstoque.
     */
    data: XOR<OrdemEstoqueUpdateInput, OrdemEstoqueUncheckedUpdateInput>
    /**
     * Choose, which OrdemEstoque to update.
     */
    where: OrdemEstoqueWhereUniqueInput
  }

  /**
   * OrdemEstoque updateMany
   */
  export type OrdemEstoqueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrdemEstoques.
     */
    data: XOR<OrdemEstoqueUpdateManyMutationInput, OrdemEstoqueUncheckedUpdateManyInput>
    /**
     * Filter which OrdemEstoques to update
     */
    where?: OrdemEstoqueWhereInput
  }

  /**
   * OrdemEstoque upsert
   */
  export type OrdemEstoqueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    /**
     * The filter to search for the OrdemEstoque to update in case it exists.
     */
    where: OrdemEstoqueWhereUniqueInput
    /**
     * In case the OrdemEstoque found by the `where` argument doesn't exist, create a new OrdemEstoque with this data.
     */
    create: XOR<OrdemEstoqueCreateInput, OrdemEstoqueUncheckedCreateInput>
    /**
     * In case the OrdemEstoque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrdemEstoqueUpdateInput, OrdemEstoqueUncheckedUpdateInput>
  }

  /**
   * OrdemEstoque delete
   */
  export type OrdemEstoqueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
    /**
     * Filter which OrdemEstoque to delete.
     */
    where: OrdemEstoqueWhereUniqueInput
  }

  /**
   * OrdemEstoque deleteMany
   */
  export type OrdemEstoqueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrdemEstoques to delete
     */
    where?: OrdemEstoqueWhereInput
  }

  /**
   * OrdemEstoque.ordemDeServico
   */
  export type OrdemEstoque$ordemDeServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    where?: OrdemDeServicoWhereInput
  }

  /**
   * OrdemEstoque.aprovadoPor
   */
  export type OrdemEstoque$aprovadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * OrdemEstoque without action
   */
  export type OrdemEstoqueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemEstoque
     */
    select?: OrdemEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemEstoqueInclude<ExtArgs> | null
  }


  /**
   * Model Revisao
   */

  export type AggregateRevisao = {
    _count: RevisaoCountAggregateOutputType | null
    _min: RevisaoMinAggregateOutputType | null
    _max: RevisaoMaxAggregateOutputType | null
  }

  export type RevisaoMinAggregateOutputType = {
    id: string | null
    placaDoCarro: string | null
    dataDaRevisao: Date | null
    dataDaProximaRevisao: Date | null
    mensagemPredefinida: string | null
    carroId: string | null
    clienteId: string | null
  }

  export type RevisaoMaxAggregateOutputType = {
    id: string | null
    placaDoCarro: string | null
    dataDaRevisao: Date | null
    dataDaProximaRevisao: Date | null
    mensagemPredefinida: string | null
    carroId: string | null
    clienteId: string | null
  }

  export type RevisaoCountAggregateOutputType = {
    id: number
    placaDoCarro: number
    dataDaRevisao: number
    dataDaProximaRevisao: number
    mensagemPredefinida: number
    carroId: number
    clienteId: number
    _all: number
  }


  export type RevisaoMinAggregateInputType = {
    id?: true
    placaDoCarro?: true
    dataDaRevisao?: true
    dataDaProximaRevisao?: true
    mensagemPredefinida?: true
    carroId?: true
    clienteId?: true
  }

  export type RevisaoMaxAggregateInputType = {
    id?: true
    placaDoCarro?: true
    dataDaRevisao?: true
    dataDaProximaRevisao?: true
    mensagemPredefinida?: true
    carroId?: true
    clienteId?: true
  }

  export type RevisaoCountAggregateInputType = {
    id?: true
    placaDoCarro?: true
    dataDaRevisao?: true
    dataDaProximaRevisao?: true
    mensagemPredefinida?: true
    carroId?: true
    clienteId?: true
    _all?: true
  }

  export type RevisaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Revisao to aggregate.
     */
    where?: RevisaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Revisaos to fetch.
     */
    orderBy?: RevisaoOrderByWithRelationInput | RevisaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RevisaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Revisaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Revisaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Revisaos
    **/
    _count?: true | RevisaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RevisaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RevisaoMaxAggregateInputType
  }

  export type GetRevisaoAggregateType<T extends RevisaoAggregateArgs> = {
        [P in keyof T & keyof AggregateRevisao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRevisao[P]>
      : GetScalarType<T[P], AggregateRevisao[P]>
  }




  export type RevisaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RevisaoWhereInput
    orderBy?: RevisaoOrderByWithAggregationInput | RevisaoOrderByWithAggregationInput[]
    by: RevisaoScalarFieldEnum[] | RevisaoScalarFieldEnum
    having?: RevisaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RevisaoCountAggregateInputType | true
    _min?: RevisaoMinAggregateInputType
    _max?: RevisaoMaxAggregateInputType
  }

  export type RevisaoGroupByOutputType = {
    id: string
    placaDoCarro: string
    dataDaRevisao: Date
    dataDaProximaRevisao: Date | null
    mensagemPredefinida: string | null
    carroId: string
    clienteId: string | null
    _count: RevisaoCountAggregateOutputType | null
    _min: RevisaoMinAggregateOutputType | null
    _max: RevisaoMaxAggregateOutputType | null
  }

  type GetRevisaoGroupByPayload<T extends RevisaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RevisaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RevisaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RevisaoGroupByOutputType[P]>
            : GetScalarType<T[P], RevisaoGroupByOutputType[P]>
        }
      >
    >


  export type RevisaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    placaDoCarro?: boolean
    dataDaRevisao?: boolean
    dataDaProximaRevisao?: boolean
    mensagemPredefinida?: boolean
    carroId?: boolean
    clienteId?: boolean
    carro?: boolean | CarroDefaultArgs<ExtArgs>
    cliente?: boolean | Revisao$clienteArgs<ExtArgs>
    Notificacao?: boolean | Revisao$NotificacaoArgs<ExtArgs>
    _count?: boolean | RevisaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["revisao"]>

  export type RevisaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    placaDoCarro?: boolean
    dataDaRevisao?: boolean
    dataDaProximaRevisao?: boolean
    mensagemPredefinida?: boolean
    carroId?: boolean
    clienteId?: boolean
    carro?: boolean | CarroDefaultArgs<ExtArgs>
    cliente?: boolean | Revisao$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["revisao"]>

  export type RevisaoSelectScalar = {
    id?: boolean
    placaDoCarro?: boolean
    dataDaRevisao?: boolean
    dataDaProximaRevisao?: boolean
    mensagemPredefinida?: boolean
    carroId?: boolean
    clienteId?: boolean
  }

  export type RevisaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    carro?: boolean | CarroDefaultArgs<ExtArgs>
    cliente?: boolean | Revisao$clienteArgs<ExtArgs>
    Notificacao?: boolean | Revisao$NotificacaoArgs<ExtArgs>
    _count?: boolean | RevisaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RevisaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    carro?: boolean | CarroDefaultArgs<ExtArgs>
    cliente?: boolean | Revisao$clienteArgs<ExtArgs>
  }

  export type $RevisaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Revisao"
    objects: {
      carro: Prisma.$CarroPayload<ExtArgs>
      cliente: Prisma.$ClientePayload<ExtArgs> | null
      Notificacao: Prisma.$NotificacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      placaDoCarro: string
      dataDaRevisao: Date
      dataDaProximaRevisao: Date | null
      mensagemPredefinida: string | null
      carroId: string
      clienteId: string | null
    }, ExtArgs["result"]["revisao"]>
    composites: {}
  }

  type RevisaoGetPayload<S extends boolean | null | undefined | RevisaoDefaultArgs> = $Result.GetResult<Prisma.$RevisaoPayload, S>

  type RevisaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RevisaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RevisaoCountAggregateInputType | true
    }

  export interface RevisaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Revisao'], meta: { name: 'Revisao' } }
    /**
     * Find zero or one Revisao that matches the filter.
     * @param {RevisaoFindUniqueArgs} args - Arguments to find a Revisao
     * @example
     * // Get one Revisao
     * const revisao = await prisma.revisao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RevisaoFindUniqueArgs>(args: SelectSubset<T, RevisaoFindUniqueArgs<ExtArgs>>): Prisma__RevisaoClient<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Revisao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RevisaoFindUniqueOrThrowArgs} args - Arguments to find a Revisao
     * @example
     * // Get one Revisao
     * const revisao = await prisma.revisao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RevisaoFindUniqueOrThrowArgs>(args: SelectSubset<T, RevisaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RevisaoClient<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Revisao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisaoFindFirstArgs} args - Arguments to find a Revisao
     * @example
     * // Get one Revisao
     * const revisao = await prisma.revisao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RevisaoFindFirstArgs>(args?: SelectSubset<T, RevisaoFindFirstArgs<ExtArgs>>): Prisma__RevisaoClient<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Revisao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisaoFindFirstOrThrowArgs} args - Arguments to find a Revisao
     * @example
     * // Get one Revisao
     * const revisao = await prisma.revisao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RevisaoFindFirstOrThrowArgs>(args?: SelectSubset<T, RevisaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__RevisaoClient<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Revisaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Revisaos
     * const revisaos = await prisma.revisao.findMany()
     * 
     * // Get first 10 Revisaos
     * const revisaos = await prisma.revisao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const revisaoWithIdOnly = await prisma.revisao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RevisaoFindManyArgs>(args?: SelectSubset<T, RevisaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Revisao.
     * @param {RevisaoCreateArgs} args - Arguments to create a Revisao.
     * @example
     * // Create one Revisao
     * const Revisao = await prisma.revisao.create({
     *   data: {
     *     // ... data to create a Revisao
     *   }
     * })
     * 
     */
    create<T extends RevisaoCreateArgs>(args: SelectSubset<T, RevisaoCreateArgs<ExtArgs>>): Prisma__RevisaoClient<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Revisaos.
     * @param {RevisaoCreateManyArgs} args - Arguments to create many Revisaos.
     * @example
     * // Create many Revisaos
     * const revisao = await prisma.revisao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RevisaoCreateManyArgs>(args?: SelectSubset<T, RevisaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Revisaos and returns the data saved in the database.
     * @param {RevisaoCreateManyAndReturnArgs} args - Arguments to create many Revisaos.
     * @example
     * // Create many Revisaos
     * const revisao = await prisma.revisao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Revisaos and only return the `id`
     * const revisaoWithIdOnly = await prisma.revisao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RevisaoCreateManyAndReturnArgs>(args?: SelectSubset<T, RevisaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Revisao.
     * @param {RevisaoDeleteArgs} args - Arguments to delete one Revisao.
     * @example
     * // Delete one Revisao
     * const Revisao = await prisma.revisao.delete({
     *   where: {
     *     // ... filter to delete one Revisao
     *   }
     * })
     * 
     */
    delete<T extends RevisaoDeleteArgs>(args: SelectSubset<T, RevisaoDeleteArgs<ExtArgs>>): Prisma__RevisaoClient<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Revisao.
     * @param {RevisaoUpdateArgs} args - Arguments to update one Revisao.
     * @example
     * // Update one Revisao
     * const revisao = await prisma.revisao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RevisaoUpdateArgs>(args: SelectSubset<T, RevisaoUpdateArgs<ExtArgs>>): Prisma__RevisaoClient<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Revisaos.
     * @param {RevisaoDeleteManyArgs} args - Arguments to filter Revisaos to delete.
     * @example
     * // Delete a few Revisaos
     * const { count } = await prisma.revisao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RevisaoDeleteManyArgs>(args?: SelectSubset<T, RevisaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Revisaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Revisaos
     * const revisao = await prisma.revisao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RevisaoUpdateManyArgs>(args: SelectSubset<T, RevisaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Revisao.
     * @param {RevisaoUpsertArgs} args - Arguments to update or create a Revisao.
     * @example
     * // Update or create a Revisao
     * const revisao = await prisma.revisao.upsert({
     *   create: {
     *     // ... data to create a Revisao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Revisao we want to update
     *   }
     * })
     */
    upsert<T extends RevisaoUpsertArgs>(args: SelectSubset<T, RevisaoUpsertArgs<ExtArgs>>): Prisma__RevisaoClient<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Revisaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisaoCountArgs} args - Arguments to filter Revisaos to count.
     * @example
     * // Count the number of Revisaos
     * const count = await prisma.revisao.count({
     *   where: {
     *     // ... the filter for the Revisaos we want to count
     *   }
     * })
    **/
    count<T extends RevisaoCountArgs>(
      args?: Subset<T, RevisaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RevisaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Revisao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RevisaoAggregateArgs>(args: Subset<T, RevisaoAggregateArgs>): Prisma.PrismaPromise<GetRevisaoAggregateType<T>>

    /**
     * Group by Revisao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RevisaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RevisaoGroupByArgs['orderBy'] }
        : { orderBy?: RevisaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RevisaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRevisaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Revisao model
   */
  readonly fields: RevisaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Revisao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RevisaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    carro<T extends CarroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CarroDefaultArgs<ExtArgs>>): Prisma__CarroClient<$Result.GetResult<Prisma.$CarroPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    cliente<T extends Revisao$clienteArgs<ExtArgs> = {}>(args?: Subset<T, Revisao$clienteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    Notificacao<T extends Revisao$NotificacaoArgs<ExtArgs> = {}>(args?: Subset<T, Revisao$NotificacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Revisao model
   */ 
  interface RevisaoFieldRefs {
    readonly id: FieldRef<"Revisao", 'String'>
    readonly placaDoCarro: FieldRef<"Revisao", 'String'>
    readonly dataDaRevisao: FieldRef<"Revisao", 'DateTime'>
    readonly dataDaProximaRevisao: FieldRef<"Revisao", 'DateTime'>
    readonly mensagemPredefinida: FieldRef<"Revisao", 'String'>
    readonly carroId: FieldRef<"Revisao", 'String'>
    readonly clienteId: FieldRef<"Revisao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Revisao findUnique
   */
  export type RevisaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    /**
     * Filter, which Revisao to fetch.
     */
    where: RevisaoWhereUniqueInput
  }

  /**
   * Revisao findUniqueOrThrow
   */
  export type RevisaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    /**
     * Filter, which Revisao to fetch.
     */
    where: RevisaoWhereUniqueInput
  }

  /**
   * Revisao findFirst
   */
  export type RevisaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    /**
     * Filter, which Revisao to fetch.
     */
    where?: RevisaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Revisaos to fetch.
     */
    orderBy?: RevisaoOrderByWithRelationInput | RevisaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Revisaos.
     */
    cursor?: RevisaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Revisaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Revisaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Revisaos.
     */
    distinct?: RevisaoScalarFieldEnum | RevisaoScalarFieldEnum[]
  }

  /**
   * Revisao findFirstOrThrow
   */
  export type RevisaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    /**
     * Filter, which Revisao to fetch.
     */
    where?: RevisaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Revisaos to fetch.
     */
    orderBy?: RevisaoOrderByWithRelationInput | RevisaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Revisaos.
     */
    cursor?: RevisaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Revisaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Revisaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Revisaos.
     */
    distinct?: RevisaoScalarFieldEnum | RevisaoScalarFieldEnum[]
  }

  /**
   * Revisao findMany
   */
  export type RevisaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    /**
     * Filter, which Revisaos to fetch.
     */
    where?: RevisaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Revisaos to fetch.
     */
    orderBy?: RevisaoOrderByWithRelationInput | RevisaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Revisaos.
     */
    cursor?: RevisaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Revisaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Revisaos.
     */
    skip?: number
    distinct?: RevisaoScalarFieldEnum | RevisaoScalarFieldEnum[]
  }

  /**
   * Revisao create
   */
  export type RevisaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Revisao.
     */
    data: XOR<RevisaoCreateInput, RevisaoUncheckedCreateInput>
  }

  /**
   * Revisao createMany
   */
  export type RevisaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Revisaos.
     */
    data: RevisaoCreateManyInput | RevisaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Revisao createManyAndReturn
   */
  export type RevisaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Revisaos.
     */
    data: RevisaoCreateManyInput | RevisaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Revisao update
   */
  export type RevisaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Revisao.
     */
    data: XOR<RevisaoUpdateInput, RevisaoUncheckedUpdateInput>
    /**
     * Choose, which Revisao to update.
     */
    where: RevisaoWhereUniqueInput
  }

  /**
   * Revisao updateMany
   */
  export type RevisaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Revisaos.
     */
    data: XOR<RevisaoUpdateManyMutationInput, RevisaoUncheckedUpdateManyInput>
    /**
     * Filter which Revisaos to update
     */
    where?: RevisaoWhereInput
  }

  /**
   * Revisao upsert
   */
  export type RevisaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Revisao to update in case it exists.
     */
    where: RevisaoWhereUniqueInput
    /**
     * In case the Revisao found by the `where` argument doesn't exist, create a new Revisao with this data.
     */
    create: XOR<RevisaoCreateInput, RevisaoUncheckedCreateInput>
    /**
     * In case the Revisao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RevisaoUpdateInput, RevisaoUncheckedUpdateInput>
  }

  /**
   * Revisao delete
   */
  export type RevisaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    /**
     * Filter which Revisao to delete.
     */
    where: RevisaoWhereUniqueInput
  }

  /**
   * Revisao deleteMany
   */
  export type RevisaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Revisaos to delete
     */
    where?: RevisaoWhereInput
  }

  /**
   * Revisao.cliente
   */
  export type Revisao$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
  }

  /**
   * Revisao.Notificacao
   */
  export type Revisao$NotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    where?: NotificacaoWhereInput
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    cursor?: NotificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Revisao without action
   */
  export type RevisaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
  }


  /**
   * Model Pagamento
   */

  export type AggregatePagamento = {
    _count: PagamentoCountAggregateOutputType | null
    _min: PagamentoMinAggregateOutputType | null
    _max: PagamentoMaxAggregateOutputType | null
  }

  export type PagamentoMinAggregateOutputType = {
    id: string | null
    formaDePagamento: $Enums.FormaPagamento | null
  }

  export type PagamentoMaxAggregateOutputType = {
    id: string | null
    formaDePagamento: $Enums.FormaPagamento | null
  }

  export type PagamentoCountAggregateOutputType = {
    id: number
    formaDePagamento: number
    _all: number
  }


  export type PagamentoMinAggregateInputType = {
    id?: true
    formaDePagamento?: true
  }

  export type PagamentoMaxAggregateInputType = {
    id?: true
    formaDePagamento?: true
  }

  export type PagamentoCountAggregateInputType = {
    id?: true
    formaDePagamento?: true
    _all?: true
  }

  export type PagamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagamento to aggregate.
     */
    where?: PagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagamentos to fetch.
     */
    orderBy?: PagamentoOrderByWithRelationInput | PagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pagamentos
    **/
    _count?: true | PagamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagamentoMaxAggregateInputType
  }

  export type GetPagamentoAggregateType<T extends PagamentoAggregateArgs> = {
        [P in keyof T & keyof AggregatePagamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePagamento[P]>
      : GetScalarType<T[P], AggregatePagamento[P]>
  }




  export type PagamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagamentoWhereInput
    orderBy?: PagamentoOrderByWithAggregationInput | PagamentoOrderByWithAggregationInput[]
    by: PagamentoScalarFieldEnum[] | PagamentoScalarFieldEnum
    having?: PagamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagamentoCountAggregateInputType | true
    _min?: PagamentoMinAggregateInputType
    _max?: PagamentoMaxAggregateInputType
  }

  export type PagamentoGroupByOutputType = {
    id: string
    formaDePagamento: $Enums.FormaPagamento
    _count: PagamentoCountAggregateOutputType | null
    _min: PagamentoMinAggregateOutputType | null
    _max: PagamentoMaxAggregateOutputType | null
  }

  type GetPagamentoGroupByPayload<T extends PagamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagamentoGroupByOutputType[P]>
            : GetScalarType<T[P], PagamentoGroupByOutputType[P]>
        }
      >
    >


  export type PagamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    formaDePagamento?: boolean
    ordens?: boolean | Pagamento$ordensArgs<ExtArgs>
    _count?: boolean | PagamentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagamento"]>

  export type PagamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    formaDePagamento?: boolean
  }, ExtArgs["result"]["pagamento"]>

  export type PagamentoSelectScalar = {
    id?: boolean
    formaDePagamento?: boolean
  }

  export type PagamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordens?: boolean | Pagamento$ordensArgs<ExtArgs>
    _count?: boolean | PagamentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PagamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PagamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pagamento"
    objects: {
      ordens: Prisma.$OrdemServicoPagamentoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      formaDePagamento: $Enums.FormaPagamento
    }, ExtArgs["result"]["pagamento"]>
    composites: {}
  }

  type PagamentoGetPayload<S extends boolean | null | undefined | PagamentoDefaultArgs> = $Result.GetResult<Prisma.$PagamentoPayload, S>

  type PagamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PagamentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PagamentoCountAggregateInputType | true
    }

  export interface PagamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pagamento'], meta: { name: 'Pagamento' } }
    /**
     * Find zero or one Pagamento that matches the filter.
     * @param {PagamentoFindUniqueArgs} args - Arguments to find a Pagamento
     * @example
     * // Get one Pagamento
     * const pagamento = await prisma.pagamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PagamentoFindUniqueArgs>(args: SelectSubset<T, PagamentoFindUniqueArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pagamento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PagamentoFindUniqueOrThrowArgs} args - Arguments to find a Pagamento
     * @example
     * // Get one Pagamento
     * const pagamento = await prisma.pagamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PagamentoFindUniqueOrThrowArgs>(args: SelectSubset<T, PagamentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pagamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoFindFirstArgs} args - Arguments to find a Pagamento
     * @example
     * // Get one Pagamento
     * const pagamento = await prisma.pagamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PagamentoFindFirstArgs>(args?: SelectSubset<T, PagamentoFindFirstArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pagamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoFindFirstOrThrowArgs} args - Arguments to find a Pagamento
     * @example
     * // Get one Pagamento
     * const pagamento = await prisma.pagamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PagamentoFindFirstOrThrowArgs>(args?: SelectSubset<T, PagamentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pagamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagamentos
     * const pagamentos = await prisma.pagamento.findMany()
     * 
     * // Get first 10 Pagamentos
     * const pagamentos = await prisma.pagamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pagamentoWithIdOnly = await prisma.pagamento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PagamentoFindManyArgs>(args?: SelectSubset<T, PagamentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pagamento.
     * @param {PagamentoCreateArgs} args - Arguments to create a Pagamento.
     * @example
     * // Create one Pagamento
     * const Pagamento = await prisma.pagamento.create({
     *   data: {
     *     // ... data to create a Pagamento
     *   }
     * })
     * 
     */
    create<T extends PagamentoCreateArgs>(args: SelectSubset<T, PagamentoCreateArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pagamentos.
     * @param {PagamentoCreateManyArgs} args - Arguments to create many Pagamentos.
     * @example
     * // Create many Pagamentos
     * const pagamento = await prisma.pagamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PagamentoCreateManyArgs>(args?: SelectSubset<T, PagamentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pagamentos and returns the data saved in the database.
     * @param {PagamentoCreateManyAndReturnArgs} args - Arguments to create many Pagamentos.
     * @example
     * // Create many Pagamentos
     * const pagamento = await prisma.pagamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pagamentos and only return the `id`
     * const pagamentoWithIdOnly = await prisma.pagamento.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PagamentoCreateManyAndReturnArgs>(args?: SelectSubset<T, PagamentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Pagamento.
     * @param {PagamentoDeleteArgs} args - Arguments to delete one Pagamento.
     * @example
     * // Delete one Pagamento
     * const Pagamento = await prisma.pagamento.delete({
     *   where: {
     *     // ... filter to delete one Pagamento
     *   }
     * })
     * 
     */
    delete<T extends PagamentoDeleteArgs>(args: SelectSubset<T, PagamentoDeleteArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pagamento.
     * @param {PagamentoUpdateArgs} args - Arguments to update one Pagamento.
     * @example
     * // Update one Pagamento
     * const pagamento = await prisma.pagamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PagamentoUpdateArgs>(args: SelectSubset<T, PagamentoUpdateArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pagamentos.
     * @param {PagamentoDeleteManyArgs} args - Arguments to filter Pagamentos to delete.
     * @example
     * // Delete a few Pagamentos
     * const { count } = await prisma.pagamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PagamentoDeleteManyArgs>(args?: SelectSubset<T, PagamentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagamentos
     * const pagamento = await prisma.pagamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PagamentoUpdateManyArgs>(args: SelectSubset<T, PagamentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pagamento.
     * @param {PagamentoUpsertArgs} args - Arguments to update or create a Pagamento.
     * @example
     * // Update or create a Pagamento
     * const pagamento = await prisma.pagamento.upsert({
     *   create: {
     *     // ... data to create a Pagamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pagamento we want to update
     *   }
     * })
     */
    upsert<T extends PagamentoUpsertArgs>(args: SelectSubset<T, PagamentoUpsertArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoCountArgs} args - Arguments to filter Pagamentos to count.
     * @example
     * // Count the number of Pagamentos
     * const count = await prisma.pagamento.count({
     *   where: {
     *     // ... the filter for the Pagamentos we want to count
     *   }
     * })
    **/
    count<T extends PagamentoCountArgs>(
      args?: Subset<T, PagamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagamentoAggregateArgs>(args: Subset<T, PagamentoAggregateArgs>): Prisma.PrismaPromise<GetPagamentoAggregateType<T>>

    /**
     * Group by Pagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PagamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PagamentoGroupByArgs['orderBy'] }
        : { orderBy?: PagamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PagamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pagamento model
   */
  readonly fields: PagamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pagamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PagamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ordens<T extends Pagamento$ordensArgs<ExtArgs> = {}>(args?: Subset<T, Pagamento$ordensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pagamento model
   */ 
  interface PagamentoFieldRefs {
    readonly id: FieldRef<"Pagamento", 'String'>
    readonly formaDePagamento: FieldRef<"Pagamento", 'FormaPagamento'>
  }
    

  // Custom InputTypes
  /**
   * Pagamento findUnique
   */
  export type PagamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamento to fetch.
     */
    where: PagamentoWhereUniqueInput
  }

  /**
   * Pagamento findUniqueOrThrow
   */
  export type PagamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamento to fetch.
     */
    where: PagamentoWhereUniqueInput
  }

  /**
   * Pagamento findFirst
   */
  export type PagamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamento to fetch.
     */
    where?: PagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagamentos to fetch.
     */
    orderBy?: PagamentoOrderByWithRelationInput | PagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagamentos.
     */
    cursor?: PagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagamentos.
     */
    distinct?: PagamentoScalarFieldEnum | PagamentoScalarFieldEnum[]
  }

  /**
   * Pagamento findFirstOrThrow
   */
  export type PagamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamento to fetch.
     */
    where?: PagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagamentos to fetch.
     */
    orderBy?: PagamentoOrderByWithRelationInput | PagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagamentos.
     */
    cursor?: PagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagamentos.
     */
    distinct?: PagamentoScalarFieldEnum | PagamentoScalarFieldEnum[]
  }

  /**
   * Pagamento findMany
   */
  export type PagamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamentos to fetch.
     */
    where?: PagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagamentos to fetch.
     */
    orderBy?: PagamentoOrderByWithRelationInput | PagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pagamentos.
     */
    cursor?: PagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagamentos.
     */
    skip?: number
    distinct?: PagamentoScalarFieldEnum | PagamentoScalarFieldEnum[]
  }

  /**
   * Pagamento create
   */
  export type PagamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pagamento.
     */
    data: XOR<PagamentoCreateInput, PagamentoUncheckedCreateInput>
  }

  /**
   * Pagamento createMany
   */
  export type PagamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pagamentos.
     */
    data: PagamentoCreateManyInput | PagamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pagamento createManyAndReturn
   */
  export type PagamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Pagamentos.
     */
    data: PagamentoCreateManyInput | PagamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pagamento update
   */
  export type PagamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pagamento.
     */
    data: XOR<PagamentoUpdateInput, PagamentoUncheckedUpdateInput>
    /**
     * Choose, which Pagamento to update.
     */
    where: PagamentoWhereUniqueInput
  }

  /**
   * Pagamento updateMany
   */
  export type PagamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pagamentos.
     */
    data: XOR<PagamentoUpdateManyMutationInput, PagamentoUncheckedUpdateManyInput>
    /**
     * Filter which Pagamentos to update
     */
    where?: PagamentoWhereInput
  }

  /**
   * Pagamento upsert
   */
  export type PagamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pagamento to update in case it exists.
     */
    where: PagamentoWhereUniqueInput
    /**
     * In case the Pagamento found by the `where` argument doesn't exist, create a new Pagamento with this data.
     */
    create: XOR<PagamentoCreateInput, PagamentoUncheckedCreateInput>
    /**
     * In case the Pagamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PagamentoUpdateInput, PagamentoUncheckedUpdateInput>
  }

  /**
   * Pagamento delete
   */
  export type PagamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter which Pagamento to delete.
     */
    where: PagamentoWhereUniqueInput
  }

  /**
   * Pagamento deleteMany
   */
  export type PagamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagamentos to delete
     */
    where?: PagamentoWhereInput
  }

  /**
   * Pagamento.ordens
   */
  export type Pagamento$ordensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    where?: OrdemServicoPagamentoWhereInput
    orderBy?: OrdemServicoPagamentoOrderByWithRelationInput | OrdemServicoPagamentoOrderByWithRelationInput[]
    cursor?: OrdemServicoPagamentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdemServicoPagamentoScalarFieldEnum | OrdemServicoPagamentoScalarFieldEnum[]
  }

  /**
   * Pagamento without action
   */
  export type PagamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
  }


  /**
   * Model OrdemServicoPagamento
   */

  export type AggregateOrdemServicoPagamento = {
    _count: OrdemServicoPagamentoCountAggregateOutputType | null
    _min: OrdemServicoPagamentoMinAggregateOutputType | null
    _max: OrdemServicoPagamentoMaxAggregateOutputType | null
  }

  export type OrdemServicoPagamentoMinAggregateOutputType = {
    id: string | null
    ordemDeServicoId: string | null
    pagamentoId: string | null
  }

  export type OrdemServicoPagamentoMaxAggregateOutputType = {
    id: string | null
    ordemDeServicoId: string | null
    pagamentoId: string | null
  }

  export type OrdemServicoPagamentoCountAggregateOutputType = {
    id: number
    ordemDeServicoId: number
    pagamentoId: number
    _all: number
  }


  export type OrdemServicoPagamentoMinAggregateInputType = {
    id?: true
    ordemDeServicoId?: true
    pagamentoId?: true
  }

  export type OrdemServicoPagamentoMaxAggregateInputType = {
    id?: true
    ordemDeServicoId?: true
    pagamentoId?: true
  }

  export type OrdemServicoPagamentoCountAggregateInputType = {
    id?: true
    ordemDeServicoId?: true
    pagamentoId?: true
    _all?: true
  }

  export type OrdemServicoPagamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrdemServicoPagamento to aggregate.
     */
    where?: OrdemServicoPagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemServicoPagamentos to fetch.
     */
    orderBy?: OrdemServicoPagamentoOrderByWithRelationInput | OrdemServicoPagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrdemServicoPagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemServicoPagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemServicoPagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrdemServicoPagamentos
    **/
    _count?: true | OrdemServicoPagamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdemServicoPagamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdemServicoPagamentoMaxAggregateInputType
  }

  export type GetOrdemServicoPagamentoAggregateType<T extends OrdemServicoPagamentoAggregateArgs> = {
        [P in keyof T & keyof AggregateOrdemServicoPagamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrdemServicoPagamento[P]>
      : GetScalarType<T[P], AggregateOrdemServicoPagamento[P]>
  }




  export type OrdemServicoPagamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdemServicoPagamentoWhereInput
    orderBy?: OrdemServicoPagamentoOrderByWithAggregationInput | OrdemServicoPagamentoOrderByWithAggregationInput[]
    by: OrdemServicoPagamentoScalarFieldEnum[] | OrdemServicoPagamentoScalarFieldEnum
    having?: OrdemServicoPagamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdemServicoPagamentoCountAggregateInputType | true
    _min?: OrdemServicoPagamentoMinAggregateInputType
    _max?: OrdemServicoPagamentoMaxAggregateInputType
  }

  export type OrdemServicoPagamentoGroupByOutputType = {
    id: string
    ordemDeServicoId: string
    pagamentoId: string
    _count: OrdemServicoPagamentoCountAggregateOutputType | null
    _min: OrdemServicoPagamentoMinAggregateOutputType | null
    _max: OrdemServicoPagamentoMaxAggregateOutputType | null
  }

  type GetOrdemServicoPagamentoGroupByPayload<T extends OrdemServicoPagamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdemServicoPagamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdemServicoPagamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdemServicoPagamentoGroupByOutputType[P]>
            : GetScalarType<T[P], OrdemServicoPagamentoGroupByOutputType[P]>
        }
      >
    >


  export type OrdemServicoPagamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ordemDeServicoId?: boolean
    pagamentoId?: boolean
    ordemDeServico?: boolean | OrdemDeServicoDefaultArgs<ExtArgs>
    pagamento?: boolean | PagamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ordemServicoPagamento"]>

  export type OrdemServicoPagamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ordemDeServicoId?: boolean
    pagamentoId?: boolean
    ordemDeServico?: boolean | OrdemDeServicoDefaultArgs<ExtArgs>
    pagamento?: boolean | PagamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ordemServicoPagamento"]>

  export type OrdemServicoPagamentoSelectScalar = {
    id?: boolean
    ordemDeServicoId?: boolean
    pagamentoId?: boolean
  }

  export type OrdemServicoPagamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordemDeServico?: boolean | OrdemDeServicoDefaultArgs<ExtArgs>
    pagamento?: boolean | PagamentoDefaultArgs<ExtArgs>
  }
  export type OrdemServicoPagamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordemDeServico?: boolean | OrdemDeServicoDefaultArgs<ExtArgs>
    pagamento?: boolean | PagamentoDefaultArgs<ExtArgs>
  }

  export type $OrdemServicoPagamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrdemServicoPagamento"
    objects: {
      ordemDeServico: Prisma.$OrdemDeServicoPayload<ExtArgs>
      pagamento: Prisma.$PagamentoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ordemDeServicoId: string
      pagamentoId: string
    }, ExtArgs["result"]["ordemServicoPagamento"]>
    composites: {}
  }

  type OrdemServicoPagamentoGetPayload<S extends boolean | null | undefined | OrdemServicoPagamentoDefaultArgs> = $Result.GetResult<Prisma.$OrdemServicoPagamentoPayload, S>

  type OrdemServicoPagamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrdemServicoPagamentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrdemServicoPagamentoCountAggregateInputType | true
    }

  export interface OrdemServicoPagamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrdemServicoPagamento'], meta: { name: 'OrdemServicoPagamento' } }
    /**
     * Find zero or one OrdemServicoPagamento that matches the filter.
     * @param {OrdemServicoPagamentoFindUniqueArgs} args - Arguments to find a OrdemServicoPagamento
     * @example
     * // Get one OrdemServicoPagamento
     * const ordemServicoPagamento = await prisma.ordemServicoPagamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrdemServicoPagamentoFindUniqueArgs>(args: SelectSubset<T, OrdemServicoPagamentoFindUniqueArgs<ExtArgs>>): Prisma__OrdemServicoPagamentoClient<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one OrdemServicoPagamento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrdemServicoPagamentoFindUniqueOrThrowArgs} args - Arguments to find a OrdemServicoPagamento
     * @example
     * // Get one OrdemServicoPagamento
     * const ordemServicoPagamento = await prisma.ordemServicoPagamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrdemServicoPagamentoFindUniqueOrThrowArgs>(args: SelectSubset<T, OrdemServicoPagamentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrdemServicoPagamentoClient<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first OrdemServicoPagamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemServicoPagamentoFindFirstArgs} args - Arguments to find a OrdemServicoPagamento
     * @example
     * // Get one OrdemServicoPagamento
     * const ordemServicoPagamento = await prisma.ordemServicoPagamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrdemServicoPagamentoFindFirstArgs>(args?: SelectSubset<T, OrdemServicoPagamentoFindFirstArgs<ExtArgs>>): Prisma__OrdemServicoPagamentoClient<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first OrdemServicoPagamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemServicoPagamentoFindFirstOrThrowArgs} args - Arguments to find a OrdemServicoPagamento
     * @example
     * // Get one OrdemServicoPagamento
     * const ordemServicoPagamento = await prisma.ordemServicoPagamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrdemServicoPagamentoFindFirstOrThrowArgs>(args?: SelectSubset<T, OrdemServicoPagamentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrdemServicoPagamentoClient<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more OrdemServicoPagamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemServicoPagamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrdemServicoPagamentos
     * const ordemServicoPagamentos = await prisma.ordemServicoPagamento.findMany()
     * 
     * // Get first 10 OrdemServicoPagamentos
     * const ordemServicoPagamentos = await prisma.ordemServicoPagamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordemServicoPagamentoWithIdOnly = await prisma.ordemServicoPagamento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrdemServicoPagamentoFindManyArgs>(args?: SelectSubset<T, OrdemServicoPagamentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a OrdemServicoPagamento.
     * @param {OrdemServicoPagamentoCreateArgs} args - Arguments to create a OrdemServicoPagamento.
     * @example
     * // Create one OrdemServicoPagamento
     * const OrdemServicoPagamento = await prisma.ordemServicoPagamento.create({
     *   data: {
     *     // ... data to create a OrdemServicoPagamento
     *   }
     * })
     * 
     */
    create<T extends OrdemServicoPagamentoCreateArgs>(args: SelectSubset<T, OrdemServicoPagamentoCreateArgs<ExtArgs>>): Prisma__OrdemServicoPagamentoClient<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many OrdemServicoPagamentos.
     * @param {OrdemServicoPagamentoCreateManyArgs} args - Arguments to create many OrdemServicoPagamentos.
     * @example
     * // Create many OrdemServicoPagamentos
     * const ordemServicoPagamento = await prisma.ordemServicoPagamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrdemServicoPagamentoCreateManyArgs>(args?: SelectSubset<T, OrdemServicoPagamentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrdemServicoPagamentos and returns the data saved in the database.
     * @param {OrdemServicoPagamentoCreateManyAndReturnArgs} args - Arguments to create many OrdemServicoPagamentos.
     * @example
     * // Create many OrdemServicoPagamentos
     * const ordemServicoPagamento = await prisma.ordemServicoPagamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrdemServicoPagamentos and only return the `id`
     * const ordemServicoPagamentoWithIdOnly = await prisma.ordemServicoPagamento.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrdemServicoPagamentoCreateManyAndReturnArgs>(args?: SelectSubset<T, OrdemServicoPagamentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a OrdemServicoPagamento.
     * @param {OrdemServicoPagamentoDeleteArgs} args - Arguments to delete one OrdemServicoPagamento.
     * @example
     * // Delete one OrdemServicoPagamento
     * const OrdemServicoPagamento = await prisma.ordemServicoPagamento.delete({
     *   where: {
     *     // ... filter to delete one OrdemServicoPagamento
     *   }
     * })
     * 
     */
    delete<T extends OrdemServicoPagamentoDeleteArgs>(args: SelectSubset<T, OrdemServicoPagamentoDeleteArgs<ExtArgs>>): Prisma__OrdemServicoPagamentoClient<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one OrdemServicoPagamento.
     * @param {OrdemServicoPagamentoUpdateArgs} args - Arguments to update one OrdemServicoPagamento.
     * @example
     * // Update one OrdemServicoPagamento
     * const ordemServicoPagamento = await prisma.ordemServicoPagamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrdemServicoPagamentoUpdateArgs>(args: SelectSubset<T, OrdemServicoPagamentoUpdateArgs<ExtArgs>>): Prisma__OrdemServicoPagamentoClient<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more OrdemServicoPagamentos.
     * @param {OrdemServicoPagamentoDeleteManyArgs} args - Arguments to filter OrdemServicoPagamentos to delete.
     * @example
     * // Delete a few OrdemServicoPagamentos
     * const { count } = await prisma.ordemServicoPagamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrdemServicoPagamentoDeleteManyArgs>(args?: SelectSubset<T, OrdemServicoPagamentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrdemServicoPagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemServicoPagamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrdemServicoPagamentos
     * const ordemServicoPagamento = await prisma.ordemServicoPagamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrdemServicoPagamentoUpdateManyArgs>(args: SelectSubset<T, OrdemServicoPagamentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrdemServicoPagamento.
     * @param {OrdemServicoPagamentoUpsertArgs} args - Arguments to update or create a OrdemServicoPagamento.
     * @example
     * // Update or create a OrdemServicoPagamento
     * const ordemServicoPagamento = await prisma.ordemServicoPagamento.upsert({
     *   create: {
     *     // ... data to create a OrdemServicoPagamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrdemServicoPagamento we want to update
     *   }
     * })
     */
    upsert<T extends OrdemServicoPagamentoUpsertArgs>(args: SelectSubset<T, OrdemServicoPagamentoUpsertArgs<ExtArgs>>): Prisma__OrdemServicoPagamentoClient<$Result.GetResult<Prisma.$OrdemServicoPagamentoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of OrdemServicoPagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemServicoPagamentoCountArgs} args - Arguments to filter OrdemServicoPagamentos to count.
     * @example
     * // Count the number of OrdemServicoPagamentos
     * const count = await prisma.ordemServicoPagamento.count({
     *   where: {
     *     // ... the filter for the OrdemServicoPagamentos we want to count
     *   }
     * })
    **/
    count<T extends OrdemServicoPagamentoCountArgs>(
      args?: Subset<T, OrdemServicoPagamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdemServicoPagamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrdemServicoPagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemServicoPagamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdemServicoPagamentoAggregateArgs>(args: Subset<T, OrdemServicoPagamentoAggregateArgs>): Prisma.PrismaPromise<GetOrdemServicoPagamentoAggregateType<T>>

    /**
     * Group by OrdemServicoPagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdemServicoPagamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrdemServicoPagamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrdemServicoPagamentoGroupByArgs['orderBy'] }
        : { orderBy?: OrdemServicoPagamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrdemServicoPagamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdemServicoPagamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrdemServicoPagamento model
   */
  readonly fields: OrdemServicoPagamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrdemServicoPagamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrdemServicoPagamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ordemDeServico<T extends OrdemDeServicoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrdemDeServicoDefaultArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    pagamento<T extends PagamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PagamentoDefaultArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrdemServicoPagamento model
   */ 
  interface OrdemServicoPagamentoFieldRefs {
    readonly id: FieldRef<"OrdemServicoPagamento", 'String'>
    readonly ordemDeServicoId: FieldRef<"OrdemServicoPagamento", 'String'>
    readonly pagamentoId: FieldRef<"OrdemServicoPagamento", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrdemServicoPagamento findUnique
   */
  export type OrdemServicoPagamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemServicoPagamento to fetch.
     */
    where: OrdemServicoPagamentoWhereUniqueInput
  }

  /**
   * OrdemServicoPagamento findUniqueOrThrow
   */
  export type OrdemServicoPagamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemServicoPagamento to fetch.
     */
    where: OrdemServicoPagamentoWhereUniqueInput
  }

  /**
   * OrdemServicoPagamento findFirst
   */
  export type OrdemServicoPagamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemServicoPagamento to fetch.
     */
    where?: OrdemServicoPagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemServicoPagamentos to fetch.
     */
    orderBy?: OrdemServicoPagamentoOrderByWithRelationInput | OrdemServicoPagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrdemServicoPagamentos.
     */
    cursor?: OrdemServicoPagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemServicoPagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemServicoPagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrdemServicoPagamentos.
     */
    distinct?: OrdemServicoPagamentoScalarFieldEnum | OrdemServicoPagamentoScalarFieldEnum[]
  }

  /**
   * OrdemServicoPagamento findFirstOrThrow
   */
  export type OrdemServicoPagamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemServicoPagamento to fetch.
     */
    where?: OrdemServicoPagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemServicoPagamentos to fetch.
     */
    orderBy?: OrdemServicoPagamentoOrderByWithRelationInput | OrdemServicoPagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrdemServicoPagamentos.
     */
    cursor?: OrdemServicoPagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemServicoPagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemServicoPagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrdemServicoPagamentos.
     */
    distinct?: OrdemServicoPagamentoScalarFieldEnum | OrdemServicoPagamentoScalarFieldEnum[]
  }

  /**
   * OrdemServicoPagamento findMany
   */
  export type OrdemServicoPagamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which OrdemServicoPagamentos to fetch.
     */
    where?: OrdemServicoPagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdemServicoPagamentos to fetch.
     */
    orderBy?: OrdemServicoPagamentoOrderByWithRelationInput | OrdemServicoPagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrdemServicoPagamentos.
     */
    cursor?: OrdemServicoPagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrdemServicoPagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdemServicoPagamentos.
     */
    skip?: number
    distinct?: OrdemServicoPagamentoScalarFieldEnum | OrdemServicoPagamentoScalarFieldEnum[]
  }

  /**
   * OrdemServicoPagamento create
   */
  export type OrdemServicoPagamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a OrdemServicoPagamento.
     */
    data: XOR<OrdemServicoPagamentoCreateInput, OrdemServicoPagamentoUncheckedCreateInput>
  }

  /**
   * OrdemServicoPagamento createMany
   */
  export type OrdemServicoPagamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrdemServicoPagamentos.
     */
    data: OrdemServicoPagamentoCreateManyInput | OrdemServicoPagamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrdemServicoPagamento createManyAndReturn
   */
  export type OrdemServicoPagamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many OrdemServicoPagamentos.
     */
    data: OrdemServicoPagamentoCreateManyInput | OrdemServicoPagamentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrdemServicoPagamento update
   */
  export type OrdemServicoPagamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a OrdemServicoPagamento.
     */
    data: XOR<OrdemServicoPagamentoUpdateInput, OrdemServicoPagamentoUncheckedUpdateInput>
    /**
     * Choose, which OrdemServicoPagamento to update.
     */
    where: OrdemServicoPagamentoWhereUniqueInput
  }

  /**
   * OrdemServicoPagamento updateMany
   */
  export type OrdemServicoPagamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrdemServicoPagamentos.
     */
    data: XOR<OrdemServicoPagamentoUpdateManyMutationInput, OrdemServicoPagamentoUncheckedUpdateManyInput>
    /**
     * Filter which OrdemServicoPagamentos to update
     */
    where?: OrdemServicoPagamentoWhereInput
  }

  /**
   * OrdemServicoPagamento upsert
   */
  export type OrdemServicoPagamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the OrdemServicoPagamento to update in case it exists.
     */
    where: OrdemServicoPagamentoWhereUniqueInput
    /**
     * In case the OrdemServicoPagamento found by the `where` argument doesn't exist, create a new OrdemServicoPagamento with this data.
     */
    create: XOR<OrdemServicoPagamentoCreateInput, OrdemServicoPagamentoUncheckedCreateInput>
    /**
     * In case the OrdemServicoPagamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrdemServicoPagamentoUpdateInput, OrdemServicoPagamentoUncheckedUpdateInput>
  }

  /**
   * OrdemServicoPagamento delete
   */
  export type OrdemServicoPagamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
    /**
     * Filter which OrdemServicoPagamento to delete.
     */
    where: OrdemServicoPagamentoWhereUniqueInput
  }

  /**
   * OrdemServicoPagamento deleteMany
   */
  export type OrdemServicoPagamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrdemServicoPagamentos to delete
     */
    where?: OrdemServicoPagamentoWhereInput
  }

  /**
   * OrdemServicoPagamento without action
   */
  export type OrdemServicoPagamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemServicoPagamento
     */
    select?: OrdemServicoPagamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemServicoPagamentoInclude<ExtArgs> | null
  }


  /**
   * Model Notificacao
   */

  export type AggregateNotificacao = {
    _count: NotificacaoCountAggregateOutputType | null
    _min: NotificacaoMinAggregateOutputType | null
    _max: NotificacaoMaxAggregateOutputType | null
  }

  export type NotificacaoMinAggregateOutputType = {
    id: string | null
    tipo: $Enums.TipoNotificacao | null
    mensagem: string | null
    enviadoEm: Date | null
    clienteId: string | null
    revisaoId: string | null
    ordemServicoId: string | null
    promocaoId: string | null
  }

  export type NotificacaoMaxAggregateOutputType = {
    id: string | null
    tipo: $Enums.TipoNotificacao | null
    mensagem: string | null
    enviadoEm: Date | null
    clienteId: string | null
    revisaoId: string | null
    ordemServicoId: string | null
    promocaoId: string | null
  }

  export type NotificacaoCountAggregateOutputType = {
    id: number
    tipo: number
    mensagem: number
    enviadoEm: number
    clienteId: number
    revisaoId: number
    ordemServicoId: number
    promocaoId: number
    _all: number
  }


  export type NotificacaoMinAggregateInputType = {
    id?: true
    tipo?: true
    mensagem?: true
    enviadoEm?: true
    clienteId?: true
    revisaoId?: true
    ordemServicoId?: true
    promocaoId?: true
  }

  export type NotificacaoMaxAggregateInputType = {
    id?: true
    tipo?: true
    mensagem?: true
    enviadoEm?: true
    clienteId?: true
    revisaoId?: true
    ordemServicoId?: true
    promocaoId?: true
  }

  export type NotificacaoCountAggregateInputType = {
    id?: true
    tipo?: true
    mensagem?: true
    enviadoEm?: true
    clienteId?: true
    revisaoId?: true
    ordemServicoId?: true
    promocaoId?: true
    _all?: true
  }

  export type NotificacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacao to aggregate.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notificacaos
    **/
    _count?: true | NotificacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificacaoMaxAggregateInputType
  }

  export type GetNotificacaoAggregateType<T extends NotificacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificacao[P]>
      : GetScalarType<T[P], AggregateNotificacao[P]>
  }




  export type NotificacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacaoWhereInput
    orderBy?: NotificacaoOrderByWithAggregationInput | NotificacaoOrderByWithAggregationInput[]
    by: NotificacaoScalarFieldEnum[] | NotificacaoScalarFieldEnum
    having?: NotificacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificacaoCountAggregateInputType | true
    _min?: NotificacaoMinAggregateInputType
    _max?: NotificacaoMaxAggregateInputType
  }

  export type NotificacaoGroupByOutputType = {
    id: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm: Date
    clienteId: string
    revisaoId: string | null
    ordemServicoId: string | null
    promocaoId: string | null
    _count: NotificacaoCountAggregateOutputType | null
    _min: NotificacaoMinAggregateOutputType | null
    _max: NotificacaoMaxAggregateOutputType | null
  }

  type GetNotificacaoGroupByPayload<T extends NotificacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificacaoGroupByOutputType[P]>
            : GetScalarType<T[P], NotificacaoGroupByOutputType[P]>
        }
      >
    >


  export type NotificacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    mensagem?: boolean
    enviadoEm?: boolean
    clienteId?: boolean
    revisaoId?: boolean
    ordemServicoId?: boolean
    promocaoId?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    promocao?: boolean | Notificacao$promocaoArgs<ExtArgs>
    revisao?: boolean | Notificacao$revisaoArgs<ExtArgs>
    ordemServico?: boolean | Notificacao$ordemServicoArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type NotificacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    mensagem?: boolean
    enviadoEm?: boolean
    clienteId?: boolean
    revisaoId?: boolean
    ordemServicoId?: boolean
    promocaoId?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    promocao?: boolean | Notificacao$promocaoArgs<ExtArgs>
    revisao?: boolean | Notificacao$revisaoArgs<ExtArgs>
    ordemServico?: boolean | Notificacao$ordemServicoArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type NotificacaoSelectScalar = {
    id?: boolean
    tipo?: boolean
    mensagem?: boolean
    enviadoEm?: boolean
    clienteId?: boolean
    revisaoId?: boolean
    ordemServicoId?: boolean
    promocaoId?: boolean
  }

  export type NotificacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    promocao?: boolean | Notificacao$promocaoArgs<ExtArgs>
    revisao?: boolean | Notificacao$revisaoArgs<ExtArgs>
    ordemServico?: boolean | Notificacao$ordemServicoArgs<ExtArgs>
  }
  export type NotificacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    promocao?: boolean | Notificacao$promocaoArgs<ExtArgs>
    revisao?: boolean | Notificacao$revisaoArgs<ExtArgs>
    ordemServico?: boolean | Notificacao$ordemServicoArgs<ExtArgs>
  }

  export type $NotificacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notificacao"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      promocao: Prisma.$PromocaoPayload<ExtArgs> | null
      revisao: Prisma.$RevisaoPayload<ExtArgs> | null
      ordemServico: Prisma.$OrdemDeServicoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tipo: $Enums.TipoNotificacao
      mensagem: string
      enviadoEm: Date
      clienteId: string
      revisaoId: string | null
      ordemServicoId: string | null
      promocaoId: string | null
    }, ExtArgs["result"]["notificacao"]>
    composites: {}
  }

  type NotificacaoGetPayload<S extends boolean | null | undefined | NotificacaoDefaultArgs> = $Result.GetResult<Prisma.$NotificacaoPayload, S>

  type NotificacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NotificacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotificacaoCountAggregateInputType | true
    }

  export interface NotificacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notificacao'], meta: { name: 'Notificacao' } }
    /**
     * Find zero or one Notificacao that matches the filter.
     * @param {NotificacaoFindUniqueArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificacaoFindUniqueArgs>(args: SelectSubset<T, NotificacaoFindUniqueArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notificacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NotificacaoFindUniqueOrThrowArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notificacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoFindFirstArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificacaoFindFirstArgs>(args?: SelectSubset<T, NotificacaoFindFirstArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notificacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoFindFirstOrThrowArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notificacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notificacaos
     * const notificacaos = await prisma.notificacao.findMany()
     * 
     * // Get first 10 Notificacaos
     * const notificacaos = await prisma.notificacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificacaoWithIdOnly = await prisma.notificacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificacaoFindManyArgs>(args?: SelectSubset<T, NotificacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notificacao.
     * @param {NotificacaoCreateArgs} args - Arguments to create a Notificacao.
     * @example
     * // Create one Notificacao
     * const Notificacao = await prisma.notificacao.create({
     *   data: {
     *     // ... data to create a Notificacao
     *   }
     * })
     * 
     */
    create<T extends NotificacaoCreateArgs>(args: SelectSubset<T, NotificacaoCreateArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notificacaos.
     * @param {NotificacaoCreateManyArgs} args - Arguments to create many Notificacaos.
     * @example
     * // Create many Notificacaos
     * const notificacao = await prisma.notificacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificacaoCreateManyArgs>(args?: SelectSubset<T, NotificacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notificacaos and returns the data saved in the database.
     * @param {NotificacaoCreateManyAndReturnArgs} args - Arguments to create many Notificacaos.
     * @example
     * // Create many Notificacaos
     * const notificacao = await prisma.notificacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notificacaos and only return the `id`
     * const notificacaoWithIdOnly = await prisma.notificacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Notificacao.
     * @param {NotificacaoDeleteArgs} args - Arguments to delete one Notificacao.
     * @example
     * // Delete one Notificacao
     * const Notificacao = await prisma.notificacao.delete({
     *   where: {
     *     // ... filter to delete one Notificacao
     *   }
     * })
     * 
     */
    delete<T extends NotificacaoDeleteArgs>(args: SelectSubset<T, NotificacaoDeleteArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notificacao.
     * @param {NotificacaoUpdateArgs} args - Arguments to update one Notificacao.
     * @example
     * // Update one Notificacao
     * const notificacao = await prisma.notificacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificacaoUpdateArgs>(args: SelectSubset<T, NotificacaoUpdateArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notificacaos.
     * @param {NotificacaoDeleteManyArgs} args - Arguments to filter Notificacaos to delete.
     * @example
     * // Delete a few Notificacaos
     * const { count } = await prisma.notificacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificacaoDeleteManyArgs>(args?: SelectSubset<T, NotificacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notificacaos
     * const notificacao = await prisma.notificacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificacaoUpdateManyArgs>(args: SelectSubset<T, NotificacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notificacao.
     * @param {NotificacaoUpsertArgs} args - Arguments to update or create a Notificacao.
     * @example
     * // Update or create a Notificacao
     * const notificacao = await prisma.notificacao.upsert({
     *   create: {
     *     // ... data to create a Notificacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notificacao we want to update
     *   }
     * })
     */
    upsert<T extends NotificacaoUpsertArgs>(args: SelectSubset<T, NotificacaoUpsertArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoCountArgs} args - Arguments to filter Notificacaos to count.
     * @example
     * // Count the number of Notificacaos
     * const count = await prisma.notificacao.count({
     *   where: {
     *     // ... the filter for the Notificacaos we want to count
     *   }
     * })
    **/
    count<T extends NotificacaoCountArgs>(
      args?: Subset<T, NotificacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificacaoAggregateArgs>(args: Subset<T, NotificacaoAggregateArgs>): Prisma.PrismaPromise<GetNotificacaoAggregateType<T>>

    /**
     * Group by Notificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificacaoGroupByArgs['orderBy'] }
        : { orderBy?: NotificacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notificacao model
   */
  readonly fields: NotificacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notificacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    promocao<T extends Notificacao$promocaoArgs<ExtArgs> = {}>(args?: Subset<T, Notificacao$promocaoArgs<ExtArgs>>): Prisma__PromocaoClient<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    revisao<T extends Notificacao$revisaoArgs<ExtArgs> = {}>(args?: Subset<T, Notificacao$revisaoArgs<ExtArgs>>): Prisma__RevisaoClient<$Result.GetResult<Prisma.$RevisaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    ordemServico<T extends Notificacao$ordemServicoArgs<ExtArgs> = {}>(args?: Subset<T, Notificacao$ordemServicoArgs<ExtArgs>>): Prisma__OrdemDeServicoClient<$Result.GetResult<Prisma.$OrdemDeServicoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notificacao model
   */ 
  interface NotificacaoFieldRefs {
    readonly id: FieldRef<"Notificacao", 'String'>
    readonly tipo: FieldRef<"Notificacao", 'TipoNotificacao'>
    readonly mensagem: FieldRef<"Notificacao", 'String'>
    readonly enviadoEm: FieldRef<"Notificacao", 'DateTime'>
    readonly clienteId: FieldRef<"Notificacao", 'String'>
    readonly revisaoId: FieldRef<"Notificacao", 'String'>
    readonly ordemServicoId: FieldRef<"Notificacao", 'String'>
    readonly promocaoId: FieldRef<"Notificacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Notificacao findUnique
   */
  export type NotificacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao findUniqueOrThrow
   */
  export type NotificacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao findFirst
   */
  export type NotificacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacaos.
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacaos.
     */
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Notificacao findFirstOrThrow
   */
  export type NotificacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacaos.
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacaos.
     */
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Notificacao findMany
   */
  export type NotificacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacaos to fetch.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notificacaos.
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Notificacao create
   */
  export type NotificacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Notificacao.
     */
    data: XOR<NotificacaoCreateInput, NotificacaoUncheckedCreateInput>
  }

  /**
   * Notificacao createMany
   */
  export type NotificacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notificacaos.
     */
    data: NotificacaoCreateManyInput | NotificacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notificacao createManyAndReturn
   */
  export type NotificacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Notificacaos.
     */
    data: NotificacaoCreateManyInput | NotificacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notificacao update
   */
  export type NotificacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Notificacao.
     */
    data: XOR<NotificacaoUpdateInput, NotificacaoUncheckedUpdateInput>
    /**
     * Choose, which Notificacao to update.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao updateMany
   */
  export type NotificacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notificacaos.
     */
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyInput>
    /**
     * Filter which Notificacaos to update
     */
    where?: NotificacaoWhereInput
  }

  /**
   * Notificacao upsert
   */
  export type NotificacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Notificacao to update in case it exists.
     */
    where: NotificacaoWhereUniqueInput
    /**
     * In case the Notificacao found by the `where` argument doesn't exist, create a new Notificacao with this data.
     */
    create: XOR<NotificacaoCreateInput, NotificacaoUncheckedCreateInput>
    /**
     * In case the Notificacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificacaoUpdateInput, NotificacaoUncheckedUpdateInput>
  }

  /**
   * Notificacao delete
   */
  export type NotificacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter which Notificacao to delete.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao deleteMany
   */
  export type NotificacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacaos to delete
     */
    where?: NotificacaoWhereInput
  }

  /**
   * Notificacao.promocao
   */
  export type Notificacao$promocaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    where?: PromocaoWhereInput
  }

  /**
   * Notificacao.revisao
   */
  export type Notificacao$revisaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revisao
     */
    select?: RevisaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisaoInclude<ExtArgs> | null
    where?: RevisaoWhereInput
  }

  /**
   * Notificacao.ordemServico
   */
  export type Notificacao$ordemServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdemDeServico
     */
    select?: OrdemDeServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdemDeServicoInclude<ExtArgs> | null
    where?: OrdemDeServicoWhereInput
  }

  /**
   * Notificacao without action
   */
  export type NotificacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
  }


  /**
   * Model Promocao
   */

  export type AggregatePromocao = {
    _count: PromocaoCountAggregateOutputType | null
    _avg: PromocaoAvgAggregateOutputType | null
    _sum: PromocaoSumAggregateOutputType | null
    _min: PromocaoMinAggregateOutputType | null
    _max: PromocaoMaxAggregateOutputType | null
  }

  export type PromocaoAvgAggregateOutputType = {
    desconto: number | null
  }

  export type PromocaoSumAggregateOutputType = {
    desconto: number | null
  }

  export type PromocaoMinAggregateOutputType = {
    id: string | null
    descricao: string | null
    desconto: number | null
    servicoId: string | null
  }

  export type PromocaoMaxAggregateOutputType = {
    id: string | null
    descricao: string | null
    desconto: number | null
    servicoId: string | null
  }

  export type PromocaoCountAggregateOutputType = {
    id: number
    descricao: number
    desconto: number
    servicoId: number
    _all: number
  }


  export type PromocaoAvgAggregateInputType = {
    desconto?: true
  }

  export type PromocaoSumAggregateInputType = {
    desconto?: true
  }

  export type PromocaoMinAggregateInputType = {
    id?: true
    descricao?: true
    desconto?: true
    servicoId?: true
  }

  export type PromocaoMaxAggregateInputType = {
    id?: true
    descricao?: true
    desconto?: true
    servicoId?: true
  }

  export type PromocaoCountAggregateInputType = {
    id?: true
    descricao?: true
    desconto?: true
    servicoId?: true
    _all?: true
  }

  export type PromocaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promocao to aggregate.
     */
    where?: PromocaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promocaos to fetch.
     */
    orderBy?: PromocaoOrderByWithRelationInput | PromocaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromocaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promocaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promocaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Promocaos
    **/
    _count?: true | PromocaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromocaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromocaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromocaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromocaoMaxAggregateInputType
  }

  export type GetPromocaoAggregateType<T extends PromocaoAggregateArgs> = {
        [P in keyof T & keyof AggregatePromocao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromocao[P]>
      : GetScalarType<T[P], AggregatePromocao[P]>
  }




  export type PromocaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromocaoWhereInput
    orderBy?: PromocaoOrderByWithAggregationInput | PromocaoOrderByWithAggregationInput[]
    by: PromocaoScalarFieldEnum[] | PromocaoScalarFieldEnum
    having?: PromocaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromocaoCountAggregateInputType | true
    _avg?: PromocaoAvgAggregateInputType
    _sum?: PromocaoSumAggregateInputType
    _min?: PromocaoMinAggregateInputType
    _max?: PromocaoMaxAggregateInputType
  }

  export type PromocaoGroupByOutputType = {
    id: string
    descricao: string
    desconto: number
    servicoId: string | null
    _count: PromocaoCountAggregateOutputType | null
    _avg: PromocaoAvgAggregateOutputType | null
    _sum: PromocaoSumAggregateOutputType | null
    _min: PromocaoMinAggregateOutputType | null
    _max: PromocaoMaxAggregateOutputType | null
  }

  type GetPromocaoGroupByPayload<T extends PromocaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromocaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromocaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromocaoGroupByOutputType[P]>
            : GetScalarType<T[P], PromocaoGroupByOutputType[P]>
        }
      >
    >


  export type PromocaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    desconto?: boolean
    servicoId?: boolean
    servico?: boolean | Promocao$servicoArgs<ExtArgs>
    notificacoes?: boolean | Promocao$notificacoesArgs<ExtArgs>
    _count?: boolean | PromocaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promocao"]>

  export type PromocaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    desconto?: boolean
    servicoId?: boolean
    servico?: boolean | Promocao$servicoArgs<ExtArgs>
  }, ExtArgs["result"]["promocao"]>

  export type PromocaoSelectScalar = {
    id?: boolean
    descricao?: boolean
    desconto?: boolean
    servicoId?: boolean
  }

  export type PromocaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    servico?: boolean | Promocao$servicoArgs<ExtArgs>
    notificacoes?: boolean | Promocao$notificacoesArgs<ExtArgs>
    _count?: boolean | PromocaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PromocaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    servico?: boolean | Promocao$servicoArgs<ExtArgs>
  }

  export type $PromocaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Promocao"
    objects: {
      servico: Prisma.$ServicoPayload<ExtArgs> | null
      notificacoes: Prisma.$NotificacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      descricao: string
      desconto: number
      servicoId: string | null
    }, ExtArgs["result"]["promocao"]>
    composites: {}
  }

  type PromocaoGetPayload<S extends boolean | null | undefined | PromocaoDefaultArgs> = $Result.GetResult<Prisma.$PromocaoPayload, S>

  type PromocaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PromocaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PromocaoCountAggregateInputType | true
    }

  export interface PromocaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Promocao'], meta: { name: 'Promocao' } }
    /**
     * Find zero or one Promocao that matches the filter.
     * @param {PromocaoFindUniqueArgs} args - Arguments to find a Promocao
     * @example
     * // Get one Promocao
     * const promocao = await prisma.promocao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromocaoFindUniqueArgs>(args: SelectSubset<T, PromocaoFindUniqueArgs<ExtArgs>>): Prisma__PromocaoClient<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Promocao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PromocaoFindUniqueOrThrowArgs} args - Arguments to find a Promocao
     * @example
     * // Get one Promocao
     * const promocao = await prisma.promocao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromocaoFindUniqueOrThrowArgs>(args: SelectSubset<T, PromocaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromocaoClient<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Promocao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocaoFindFirstArgs} args - Arguments to find a Promocao
     * @example
     * // Get one Promocao
     * const promocao = await prisma.promocao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromocaoFindFirstArgs>(args?: SelectSubset<T, PromocaoFindFirstArgs<ExtArgs>>): Prisma__PromocaoClient<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Promocao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocaoFindFirstOrThrowArgs} args - Arguments to find a Promocao
     * @example
     * // Get one Promocao
     * const promocao = await prisma.promocao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromocaoFindFirstOrThrowArgs>(args?: SelectSubset<T, PromocaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromocaoClient<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Promocaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promocaos
     * const promocaos = await prisma.promocao.findMany()
     * 
     * // Get first 10 Promocaos
     * const promocaos = await prisma.promocao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promocaoWithIdOnly = await prisma.promocao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromocaoFindManyArgs>(args?: SelectSubset<T, PromocaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Promocao.
     * @param {PromocaoCreateArgs} args - Arguments to create a Promocao.
     * @example
     * // Create one Promocao
     * const Promocao = await prisma.promocao.create({
     *   data: {
     *     // ... data to create a Promocao
     *   }
     * })
     * 
     */
    create<T extends PromocaoCreateArgs>(args: SelectSubset<T, PromocaoCreateArgs<ExtArgs>>): Prisma__PromocaoClient<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Promocaos.
     * @param {PromocaoCreateManyArgs} args - Arguments to create many Promocaos.
     * @example
     * // Create many Promocaos
     * const promocao = await prisma.promocao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromocaoCreateManyArgs>(args?: SelectSubset<T, PromocaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Promocaos and returns the data saved in the database.
     * @param {PromocaoCreateManyAndReturnArgs} args - Arguments to create many Promocaos.
     * @example
     * // Create many Promocaos
     * const promocao = await prisma.promocao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Promocaos and only return the `id`
     * const promocaoWithIdOnly = await prisma.promocao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PromocaoCreateManyAndReturnArgs>(args?: SelectSubset<T, PromocaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Promocao.
     * @param {PromocaoDeleteArgs} args - Arguments to delete one Promocao.
     * @example
     * // Delete one Promocao
     * const Promocao = await prisma.promocao.delete({
     *   where: {
     *     // ... filter to delete one Promocao
     *   }
     * })
     * 
     */
    delete<T extends PromocaoDeleteArgs>(args: SelectSubset<T, PromocaoDeleteArgs<ExtArgs>>): Prisma__PromocaoClient<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Promocao.
     * @param {PromocaoUpdateArgs} args - Arguments to update one Promocao.
     * @example
     * // Update one Promocao
     * const promocao = await prisma.promocao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromocaoUpdateArgs>(args: SelectSubset<T, PromocaoUpdateArgs<ExtArgs>>): Prisma__PromocaoClient<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Promocaos.
     * @param {PromocaoDeleteManyArgs} args - Arguments to filter Promocaos to delete.
     * @example
     * // Delete a few Promocaos
     * const { count } = await prisma.promocao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromocaoDeleteManyArgs>(args?: SelectSubset<T, PromocaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promocaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promocaos
     * const promocao = await prisma.promocao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromocaoUpdateManyArgs>(args: SelectSubset<T, PromocaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Promocao.
     * @param {PromocaoUpsertArgs} args - Arguments to update or create a Promocao.
     * @example
     * // Update or create a Promocao
     * const promocao = await prisma.promocao.upsert({
     *   create: {
     *     // ... data to create a Promocao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promocao we want to update
     *   }
     * })
     */
    upsert<T extends PromocaoUpsertArgs>(args: SelectSubset<T, PromocaoUpsertArgs<ExtArgs>>): Prisma__PromocaoClient<$Result.GetResult<Prisma.$PromocaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Promocaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocaoCountArgs} args - Arguments to filter Promocaos to count.
     * @example
     * // Count the number of Promocaos
     * const count = await prisma.promocao.count({
     *   where: {
     *     // ... the filter for the Promocaos we want to count
     *   }
     * })
    **/
    count<T extends PromocaoCountArgs>(
      args?: Subset<T, PromocaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromocaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promocao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromocaoAggregateArgs>(args: Subset<T, PromocaoAggregateArgs>): Prisma.PrismaPromise<GetPromocaoAggregateType<T>>

    /**
     * Group by Promocao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromocaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromocaoGroupByArgs['orderBy'] }
        : { orderBy?: PromocaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromocaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromocaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Promocao model
   */
  readonly fields: PromocaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Promocao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromocaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    servico<T extends Promocao$servicoArgs<ExtArgs> = {}>(args?: Subset<T, Promocao$servicoArgs<ExtArgs>>): Prisma__ServicoClient<$Result.GetResult<Prisma.$ServicoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    notificacoes<T extends Promocao$notificacoesArgs<ExtArgs> = {}>(args?: Subset<T, Promocao$notificacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Promocao model
   */ 
  interface PromocaoFieldRefs {
    readonly id: FieldRef<"Promocao", 'String'>
    readonly descricao: FieldRef<"Promocao", 'String'>
    readonly desconto: FieldRef<"Promocao", 'Float'>
    readonly servicoId: FieldRef<"Promocao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Promocao findUnique
   */
  export type PromocaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    /**
     * Filter, which Promocao to fetch.
     */
    where: PromocaoWhereUniqueInput
  }

  /**
   * Promocao findUniqueOrThrow
   */
  export type PromocaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    /**
     * Filter, which Promocao to fetch.
     */
    where: PromocaoWhereUniqueInput
  }

  /**
   * Promocao findFirst
   */
  export type PromocaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    /**
     * Filter, which Promocao to fetch.
     */
    where?: PromocaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promocaos to fetch.
     */
    orderBy?: PromocaoOrderByWithRelationInput | PromocaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promocaos.
     */
    cursor?: PromocaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promocaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promocaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promocaos.
     */
    distinct?: PromocaoScalarFieldEnum | PromocaoScalarFieldEnum[]
  }

  /**
   * Promocao findFirstOrThrow
   */
  export type PromocaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    /**
     * Filter, which Promocao to fetch.
     */
    where?: PromocaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promocaos to fetch.
     */
    orderBy?: PromocaoOrderByWithRelationInput | PromocaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promocaos.
     */
    cursor?: PromocaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promocaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promocaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promocaos.
     */
    distinct?: PromocaoScalarFieldEnum | PromocaoScalarFieldEnum[]
  }

  /**
   * Promocao findMany
   */
  export type PromocaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    /**
     * Filter, which Promocaos to fetch.
     */
    where?: PromocaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promocaos to fetch.
     */
    orderBy?: PromocaoOrderByWithRelationInput | PromocaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Promocaos.
     */
    cursor?: PromocaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promocaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promocaos.
     */
    skip?: number
    distinct?: PromocaoScalarFieldEnum | PromocaoScalarFieldEnum[]
  }

  /**
   * Promocao create
   */
  export type PromocaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Promocao.
     */
    data: XOR<PromocaoCreateInput, PromocaoUncheckedCreateInput>
  }

  /**
   * Promocao createMany
   */
  export type PromocaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Promocaos.
     */
    data: PromocaoCreateManyInput | PromocaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Promocao createManyAndReturn
   */
  export type PromocaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Promocaos.
     */
    data: PromocaoCreateManyInput | PromocaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Promocao update
   */
  export type PromocaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Promocao.
     */
    data: XOR<PromocaoUpdateInput, PromocaoUncheckedUpdateInput>
    /**
     * Choose, which Promocao to update.
     */
    where: PromocaoWhereUniqueInput
  }

  /**
   * Promocao updateMany
   */
  export type PromocaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Promocaos.
     */
    data: XOR<PromocaoUpdateManyMutationInput, PromocaoUncheckedUpdateManyInput>
    /**
     * Filter which Promocaos to update
     */
    where?: PromocaoWhereInput
  }

  /**
   * Promocao upsert
   */
  export type PromocaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Promocao to update in case it exists.
     */
    where: PromocaoWhereUniqueInput
    /**
     * In case the Promocao found by the `where` argument doesn't exist, create a new Promocao with this data.
     */
    create: XOR<PromocaoCreateInput, PromocaoUncheckedCreateInput>
    /**
     * In case the Promocao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromocaoUpdateInput, PromocaoUncheckedUpdateInput>
  }

  /**
   * Promocao delete
   */
  export type PromocaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
    /**
     * Filter which Promocao to delete.
     */
    where: PromocaoWhereUniqueInput
  }

  /**
   * Promocao deleteMany
   */
  export type PromocaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promocaos to delete
     */
    where?: PromocaoWhereInput
  }

  /**
   * Promocao.servico
   */
  export type Promocao$servicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servico
     */
    select?: ServicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicoInclude<ExtArgs> | null
    where?: ServicoWhereInput
  }

  /**
   * Promocao.notificacoes
   */
  export type Promocao$notificacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    where?: NotificacaoWhereInput
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    cursor?: NotificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Promocao without action
   */
  export type PromocaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promocao
     */
    select?: PromocaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromocaoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ClienteScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    telefone: 'telefone',
    email: 'email',
    cpf: 'cpf',
    cnpj: 'cnpj',
    dataDeNascimento: 'dataDeNascimento',
    password: 'password',
    tipo: 'tipo',
    clienteCadastrador: 'clienteCadastrador',
    criadoPorId: 'criadoPorId'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const FuncionarioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    username: 'username',
    cpf: 'cpf',
    dataDeNascimento: 'dataDeNascimento',
    email: 'email',
    senha: 'senha',
    telefone: 'telefone',
    tipo: 'tipo',
    criadoPorId: 'criadoPorId'
  };

  export type FuncionarioScalarFieldEnum = (typeof FuncionarioScalarFieldEnum)[keyof typeof FuncionarioScalarFieldEnum]


  export const CarroScalarFieldEnum: {
    id: 'id',
    placa: 'placa',
    modelo: 'modelo',
    ano: 'ano',
    clienteId: 'clienteId'
  };

  export type CarroScalarFieldEnum = (typeof CarroScalarFieldEnum)[keyof typeof CarroScalarFieldEnum]


  export const ServicoScalarFieldEnum: {
    id: 'id',
    tipoDeServico: 'tipoDeServico',
    valor: 'valor'
  };

  export type ServicoScalarFieldEnum = (typeof ServicoScalarFieldEnum)[keyof typeof ServicoScalarFieldEnum]


  export const PecaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    tipo: 'tipo',
    valor: 'valor',
    quantidade: 'quantidade',
    criadoPorId: 'criadoPorId'
  };

  export type PecaScalarFieldEnum = (typeof PecaScalarFieldEnum)[keyof typeof PecaScalarFieldEnum]


  export const OrdemDeServicoScalarFieldEnum: {
    id: 'id',
    placaDoCarro: 'placaDoCarro',
    servicosPrestados: 'servicosPrestados',
    cpf: 'cpf',
    valorTotal: 'valorTotal',
    dataDeRealizacao: 'dataDeRealizacao',
    dataDeVencimento: 'dataDeVencimento',
    status: 'status',
    clienteId: 'clienteId',
    criadoPorId: 'criadoPorId',
    aprovado: 'aprovado',
    aprovadoPorId: 'aprovadoPorId',
    servicoId: 'servicoId'
  };

  export type OrdemDeServicoScalarFieldEnum = (typeof OrdemDeServicoScalarFieldEnum)[keyof typeof OrdemDeServicoScalarFieldEnum]


  export const OrdemEstoqueScalarFieldEnum: {
    id: 'id',
    ordemDeServicoId: 'ordemDeServicoId',
    pecaAprovada: 'pecaAprovada',
    mensagem: 'mensagem',
    aprovadoPorId: 'aprovadoPorId'
  };

  export type OrdemEstoqueScalarFieldEnum = (typeof OrdemEstoqueScalarFieldEnum)[keyof typeof OrdemEstoqueScalarFieldEnum]


  export const RevisaoScalarFieldEnum: {
    id: 'id',
    placaDoCarro: 'placaDoCarro',
    dataDaRevisao: 'dataDaRevisao',
    dataDaProximaRevisao: 'dataDaProximaRevisao',
    mensagemPredefinida: 'mensagemPredefinida',
    carroId: 'carroId',
    clienteId: 'clienteId'
  };

  export type RevisaoScalarFieldEnum = (typeof RevisaoScalarFieldEnum)[keyof typeof RevisaoScalarFieldEnum]


  export const PagamentoScalarFieldEnum: {
    id: 'id',
    formaDePagamento: 'formaDePagamento'
  };

  export type PagamentoScalarFieldEnum = (typeof PagamentoScalarFieldEnum)[keyof typeof PagamentoScalarFieldEnum]


  export const OrdemServicoPagamentoScalarFieldEnum: {
    id: 'id',
    ordemDeServicoId: 'ordemDeServicoId',
    pagamentoId: 'pagamentoId'
  };

  export type OrdemServicoPagamentoScalarFieldEnum = (typeof OrdemServicoPagamentoScalarFieldEnum)[keyof typeof OrdemServicoPagamentoScalarFieldEnum]


  export const NotificacaoScalarFieldEnum: {
    id: 'id',
    tipo: 'tipo',
    mensagem: 'mensagem',
    enviadoEm: 'enviadoEm',
    clienteId: 'clienteId',
    revisaoId: 'revisaoId',
    ordemServicoId: 'ordemServicoId',
    promocaoId: 'promocaoId'
  };

  export type NotificacaoScalarFieldEnum = (typeof NotificacaoScalarFieldEnum)[keyof typeof NotificacaoScalarFieldEnum]


  export const PromocaoScalarFieldEnum: {
    id: 'id',
    descricao: 'descricao',
    desconto: 'desconto',
    servicoId: 'servicoId'
  };

  export type PromocaoScalarFieldEnum = (typeof PromocaoScalarFieldEnum)[keyof typeof PromocaoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'TipoCliente'
   */
  export type EnumTipoClienteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCliente'>
    


  /**
   * Reference to a field of type 'TipoCliente[]'
   */
  export type ListEnumTipoClienteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCliente[]'>
    


  /**
   * Reference to a field of type 'TipoFuncionario'
   */
  export type EnumTipoFuncionarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoFuncionario'>
    


  /**
   * Reference to a field of type 'TipoFuncionario[]'
   */
  export type ListEnumTipoFuncionarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoFuncionario[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'StatusOrdem'
   */
  export type EnumStatusOrdemFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusOrdem'>
    


  /**
   * Reference to a field of type 'StatusOrdem[]'
   */
  export type ListEnumStatusOrdemFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusOrdem[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'FormaPagamento'
   */
  export type EnumFormaPagamentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FormaPagamento'>
    


  /**
   * Reference to a field of type 'FormaPagamento[]'
   */
  export type ListEnumFormaPagamentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FormaPagamento[]'>
    


  /**
   * Reference to a field of type 'TipoNotificacao'
   */
  export type EnumTipoNotificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoNotificacao'>
    


  /**
   * Reference to a field of type 'TipoNotificacao[]'
   */
  export type ListEnumTipoNotificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoNotificacao[]'>
    
  /**
   * Deep Input Types
   */


  export type ClienteWhereInput = {
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    id?: StringFilter<"Cliente"> | string
    nome?: StringFilter<"Cliente"> | string
    telefone?: StringNullableFilter<"Cliente"> | string | null
    email?: StringFilter<"Cliente"> | string
    cpf?: StringNullableFilter<"Cliente"> | string | null
    cnpj?: StringNullableFilter<"Cliente"> | string | null
    dataDeNascimento?: DateTimeNullableFilter<"Cliente"> | Date | string | null
    password?: StringFilter<"Cliente"> | string
    tipo?: EnumTipoClienteFilter<"Cliente"> | $Enums.TipoCliente
    clienteCadastrador?: StringNullableFilter<"Cliente"> | string | null
    criadoPorId?: StringNullableFilter<"Cliente"> | string | null
    carros?: CarroListRelationFilter
    ordensDeServico?: OrdemDeServicoListRelationFilter
    revisoes?: RevisaoListRelationFilter
    criadoPor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    funcionariosExecutores?: FuncionarioListRelationFilter
    notificacoes?: NotificacaoListRelationFilter
  }

  export type ClienteOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrder
    cpf?: SortOrderInput | SortOrder
    cnpj?: SortOrderInput | SortOrder
    dataDeNascimento?: SortOrderInput | SortOrder
    password?: SortOrder
    tipo?: SortOrder
    clienteCadastrador?: SortOrderInput | SortOrder
    criadoPorId?: SortOrderInput | SortOrder
    carros?: CarroOrderByRelationAggregateInput
    ordensDeServico?: OrdemDeServicoOrderByRelationAggregateInput
    revisoes?: RevisaoOrderByRelationAggregateInput
    criadoPor?: FuncionarioOrderByWithRelationInput
    funcionariosExecutores?: FuncionarioOrderByRelationAggregateInput
    notificacoes?: NotificacaoOrderByRelationAggregateInput
  }

  export type ClienteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    cpf?: string
    cnpj?: string
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    nome?: StringFilter<"Cliente"> | string
    telefone?: StringNullableFilter<"Cliente"> | string | null
    dataDeNascimento?: DateTimeNullableFilter<"Cliente"> | Date | string | null
    password?: StringFilter<"Cliente"> | string
    tipo?: EnumTipoClienteFilter<"Cliente"> | $Enums.TipoCliente
    clienteCadastrador?: StringNullableFilter<"Cliente"> | string | null
    criadoPorId?: StringNullableFilter<"Cliente"> | string | null
    carros?: CarroListRelationFilter
    ordensDeServico?: OrdemDeServicoListRelationFilter
    revisoes?: RevisaoListRelationFilter
    criadoPor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    funcionariosExecutores?: FuncionarioListRelationFilter
    notificacoes?: NotificacaoListRelationFilter
  }, "id" | "email" | "cpf" | "cnpj">

  export type ClienteOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrder
    cpf?: SortOrderInput | SortOrder
    cnpj?: SortOrderInput | SortOrder
    dataDeNascimento?: SortOrderInput | SortOrder
    password?: SortOrder
    tipo?: SortOrder
    clienteCadastrador?: SortOrderInput | SortOrder
    criadoPorId?: SortOrderInput | SortOrder
    _count?: ClienteCountOrderByAggregateInput
    _max?: ClienteMaxOrderByAggregateInput
    _min?: ClienteMinOrderByAggregateInput
  }

  export type ClienteScalarWhereWithAggregatesInput = {
    AND?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    OR?: ClienteScalarWhereWithAggregatesInput[]
    NOT?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Cliente"> | string
    nome?: StringWithAggregatesFilter<"Cliente"> | string
    telefone?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    email?: StringWithAggregatesFilter<"Cliente"> | string
    cpf?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    cnpj?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    dataDeNascimento?: DateTimeNullableWithAggregatesFilter<"Cliente"> | Date | string | null
    password?: StringWithAggregatesFilter<"Cliente"> | string
    tipo?: EnumTipoClienteWithAggregatesFilter<"Cliente"> | $Enums.TipoCliente
    clienteCadastrador?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    criadoPorId?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
  }

  export type FuncionarioWhereInput = {
    AND?: FuncionarioWhereInput | FuncionarioWhereInput[]
    OR?: FuncionarioWhereInput[]
    NOT?: FuncionarioWhereInput | FuncionarioWhereInput[]
    id?: StringFilter<"Funcionario"> | string
    nome?: StringFilter<"Funcionario"> | string
    username?: StringFilter<"Funcionario"> | string
    cpf?: StringFilter<"Funcionario"> | string
    dataDeNascimento?: DateTimeFilter<"Funcionario"> | Date | string
    email?: StringFilter<"Funcionario"> | string
    senha?: StringFilter<"Funcionario"> | string
    telefone?: StringNullableFilter<"Funcionario"> | string | null
    tipo?: EnumTipoFuncionarioFilter<"Funcionario"> | $Enums.TipoFuncionario
    criadoPorId?: StringNullableFilter<"Funcionario"> | string | null
    clientesCriados?: ClienteListRelationFilter
    ordensCriadas?: OrdemDeServicoListRelationFilter
    ordensAprovadas?: OrdemDeServicoListRelationFilter
    pecasCriadas?: PecaListRelationFilter
    servicosExecutados?: ClienteListRelationFilter
    ordensDeEstoque?: OrdemEstoqueListRelationFilter
    criadoPor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    funcionariosCriados?: FuncionarioListRelationFilter
  }

  export type FuncionarioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    username?: SortOrder
    cpf?: SortOrder
    dataDeNascimento?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrderInput | SortOrder
    tipo?: SortOrder
    criadoPorId?: SortOrderInput | SortOrder
    clientesCriados?: ClienteOrderByRelationAggregateInput
    ordensCriadas?: OrdemDeServicoOrderByRelationAggregateInput
    ordensAprovadas?: OrdemDeServicoOrderByRelationAggregateInput
    pecasCriadas?: PecaOrderByRelationAggregateInput
    servicosExecutados?: ClienteOrderByRelationAggregateInput
    ordensDeEstoque?: OrdemEstoqueOrderByRelationAggregateInput
    criadoPor?: FuncionarioOrderByWithRelationInput
    funcionariosCriados?: FuncionarioOrderByRelationAggregateInput
  }

  export type FuncionarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    cpf?: string
    email?: string
    AND?: FuncionarioWhereInput | FuncionarioWhereInput[]
    OR?: FuncionarioWhereInput[]
    NOT?: FuncionarioWhereInput | FuncionarioWhereInput[]
    nome?: StringFilter<"Funcionario"> | string
    dataDeNascimento?: DateTimeFilter<"Funcionario"> | Date | string
    senha?: StringFilter<"Funcionario"> | string
    telefone?: StringNullableFilter<"Funcionario"> | string | null
    tipo?: EnumTipoFuncionarioFilter<"Funcionario"> | $Enums.TipoFuncionario
    criadoPorId?: StringNullableFilter<"Funcionario"> | string | null
    clientesCriados?: ClienteListRelationFilter
    ordensCriadas?: OrdemDeServicoListRelationFilter
    ordensAprovadas?: OrdemDeServicoListRelationFilter
    pecasCriadas?: PecaListRelationFilter
    servicosExecutados?: ClienteListRelationFilter
    ordensDeEstoque?: OrdemEstoqueListRelationFilter
    criadoPor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    funcionariosCriados?: FuncionarioListRelationFilter
  }, "id" | "username" | "cpf" | "email">

  export type FuncionarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    username?: SortOrder
    cpf?: SortOrder
    dataDeNascimento?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrderInput | SortOrder
    tipo?: SortOrder
    criadoPorId?: SortOrderInput | SortOrder
    _count?: FuncionarioCountOrderByAggregateInput
    _max?: FuncionarioMaxOrderByAggregateInput
    _min?: FuncionarioMinOrderByAggregateInput
  }

  export type FuncionarioScalarWhereWithAggregatesInput = {
    AND?: FuncionarioScalarWhereWithAggregatesInput | FuncionarioScalarWhereWithAggregatesInput[]
    OR?: FuncionarioScalarWhereWithAggregatesInput[]
    NOT?: FuncionarioScalarWhereWithAggregatesInput | FuncionarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Funcionario"> | string
    nome?: StringWithAggregatesFilter<"Funcionario"> | string
    username?: StringWithAggregatesFilter<"Funcionario"> | string
    cpf?: StringWithAggregatesFilter<"Funcionario"> | string
    dataDeNascimento?: DateTimeWithAggregatesFilter<"Funcionario"> | Date | string
    email?: StringWithAggregatesFilter<"Funcionario"> | string
    senha?: StringWithAggregatesFilter<"Funcionario"> | string
    telefone?: StringNullableWithAggregatesFilter<"Funcionario"> | string | null
    tipo?: EnumTipoFuncionarioWithAggregatesFilter<"Funcionario"> | $Enums.TipoFuncionario
    criadoPorId?: StringNullableWithAggregatesFilter<"Funcionario"> | string | null
  }

  export type CarroWhereInput = {
    AND?: CarroWhereInput | CarroWhereInput[]
    OR?: CarroWhereInput[]
    NOT?: CarroWhereInput | CarroWhereInput[]
    id?: StringFilter<"Carro"> | string
    placa?: StringFilter<"Carro"> | string
    modelo?: StringFilter<"Carro"> | string
    ano?: IntFilter<"Carro"> | number
    clienteId?: StringFilter<"Carro"> | string
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    revisoes?: RevisaoListRelationFilter
  }

  export type CarroOrderByWithRelationInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    clienteId?: SortOrder
    cliente?: ClienteOrderByWithRelationInput
    revisoes?: RevisaoOrderByRelationAggregateInput
  }

  export type CarroWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    placa?: string
    AND?: CarroWhereInput | CarroWhereInput[]
    OR?: CarroWhereInput[]
    NOT?: CarroWhereInput | CarroWhereInput[]
    modelo?: StringFilter<"Carro"> | string
    ano?: IntFilter<"Carro"> | number
    clienteId?: StringFilter<"Carro"> | string
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    revisoes?: RevisaoListRelationFilter
  }, "id" | "placa">

  export type CarroOrderByWithAggregationInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    clienteId?: SortOrder
    _count?: CarroCountOrderByAggregateInput
    _avg?: CarroAvgOrderByAggregateInput
    _max?: CarroMaxOrderByAggregateInput
    _min?: CarroMinOrderByAggregateInput
    _sum?: CarroSumOrderByAggregateInput
  }

  export type CarroScalarWhereWithAggregatesInput = {
    AND?: CarroScalarWhereWithAggregatesInput | CarroScalarWhereWithAggregatesInput[]
    OR?: CarroScalarWhereWithAggregatesInput[]
    NOT?: CarroScalarWhereWithAggregatesInput | CarroScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Carro"> | string
    placa?: StringWithAggregatesFilter<"Carro"> | string
    modelo?: StringWithAggregatesFilter<"Carro"> | string
    ano?: IntWithAggregatesFilter<"Carro"> | number
    clienteId?: StringWithAggregatesFilter<"Carro"> | string
  }

  export type ServicoWhereInput = {
    AND?: ServicoWhereInput | ServicoWhereInput[]
    OR?: ServicoWhereInput[]
    NOT?: ServicoWhereInput | ServicoWhereInput[]
    id?: StringFilter<"Servico"> | string
    tipoDeServico?: StringFilter<"Servico"> | string
    valor?: DecimalFilter<"Servico"> | Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoListRelationFilter
    Promocao?: PromocaoListRelationFilter
  }

  export type ServicoOrderByWithRelationInput = {
    id?: SortOrder
    tipoDeServico?: SortOrder
    valor?: SortOrder
    ordensDeServico?: OrdemDeServicoOrderByRelationAggregateInput
    Promocao?: PromocaoOrderByRelationAggregateInput
  }

  export type ServicoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ServicoWhereInput | ServicoWhereInput[]
    OR?: ServicoWhereInput[]
    NOT?: ServicoWhereInput | ServicoWhereInput[]
    tipoDeServico?: StringFilter<"Servico"> | string
    valor?: DecimalFilter<"Servico"> | Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoListRelationFilter
    Promocao?: PromocaoListRelationFilter
  }, "id">

  export type ServicoOrderByWithAggregationInput = {
    id?: SortOrder
    tipoDeServico?: SortOrder
    valor?: SortOrder
    _count?: ServicoCountOrderByAggregateInput
    _avg?: ServicoAvgOrderByAggregateInput
    _max?: ServicoMaxOrderByAggregateInput
    _min?: ServicoMinOrderByAggregateInput
    _sum?: ServicoSumOrderByAggregateInput
  }

  export type ServicoScalarWhereWithAggregatesInput = {
    AND?: ServicoScalarWhereWithAggregatesInput | ServicoScalarWhereWithAggregatesInput[]
    OR?: ServicoScalarWhereWithAggregatesInput[]
    NOT?: ServicoScalarWhereWithAggregatesInput | ServicoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Servico"> | string
    tipoDeServico?: StringWithAggregatesFilter<"Servico"> | string
    valor?: DecimalWithAggregatesFilter<"Servico"> | Decimal | DecimalJsLike | number | string
  }

  export type PecaWhereInput = {
    AND?: PecaWhereInput | PecaWhereInput[]
    OR?: PecaWhereInput[]
    NOT?: PecaWhereInput | PecaWhereInput[]
    id?: StringFilter<"Peca"> | string
    nome?: StringFilter<"Peca"> | string
    tipo?: StringFilter<"Peca"> | string
    valor?: DecimalFilter<"Peca"> | Decimal | DecimalJsLike | number | string
    quantidade?: IntFilter<"Peca"> | number
    criadoPorId?: StringFilter<"Peca"> | string
    criadoPor?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    ordensDeServico?: OrdemDeServicoListRelationFilter
  }

  export type PecaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    quantidade?: SortOrder
    criadoPorId?: SortOrder
    criadoPor?: FuncionarioOrderByWithRelationInput
    ordensDeServico?: OrdemDeServicoOrderByRelationAggregateInput
  }

  export type PecaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PecaWhereInput | PecaWhereInput[]
    OR?: PecaWhereInput[]
    NOT?: PecaWhereInput | PecaWhereInput[]
    nome?: StringFilter<"Peca"> | string
    tipo?: StringFilter<"Peca"> | string
    valor?: DecimalFilter<"Peca"> | Decimal | DecimalJsLike | number | string
    quantidade?: IntFilter<"Peca"> | number
    criadoPorId?: StringFilter<"Peca"> | string
    criadoPor?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    ordensDeServico?: OrdemDeServicoListRelationFilter
  }, "id">

  export type PecaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    quantidade?: SortOrder
    criadoPorId?: SortOrder
    _count?: PecaCountOrderByAggregateInput
    _avg?: PecaAvgOrderByAggregateInput
    _max?: PecaMaxOrderByAggregateInput
    _min?: PecaMinOrderByAggregateInput
    _sum?: PecaSumOrderByAggregateInput
  }

  export type PecaScalarWhereWithAggregatesInput = {
    AND?: PecaScalarWhereWithAggregatesInput | PecaScalarWhereWithAggregatesInput[]
    OR?: PecaScalarWhereWithAggregatesInput[]
    NOT?: PecaScalarWhereWithAggregatesInput | PecaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Peca"> | string
    nome?: StringWithAggregatesFilter<"Peca"> | string
    tipo?: StringWithAggregatesFilter<"Peca"> | string
    valor?: DecimalWithAggregatesFilter<"Peca"> | Decimal | DecimalJsLike | number | string
    quantidade?: IntWithAggregatesFilter<"Peca"> | number
    criadoPorId?: StringWithAggregatesFilter<"Peca"> | string
  }

  export type OrdemDeServicoWhereInput = {
    AND?: OrdemDeServicoWhereInput | OrdemDeServicoWhereInput[]
    OR?: OrdemDeServicoWhereInput[]
    NOT?: OrdemDeServicoWhereInput | OrdemDeServicoWhereInput[]
    id?: StringFilter<"OrdemDeServico"> | string
    placaDoCarro?: StringFilter<"OrdemDeServico"> | string
    servicosPrestados?: StringFilter<"OrdemDeServico"> | string
    cpf?: StringFilter<"OrdemDeServico"> | string
    valorTotal?: FloatFilter<"OrdemDeServico"> | number
    dataDeRealizacao?: DateTimeFilter<"OrdemDeServico"> | Date | string
    dataDeVencimento?: DateTimeFilter<"OrdemDeServico"> | Date | string
    status?: EnumStatusOrdemFilter<"OrdemDeServico"> | $Enums.StatusOrdem
    clienteId?: StringFilter<"OrdemDeServico"> | string
    criadoPorId?: StringFilter<"OrdemDeServico"> | string
    aprovado?: BoolFilter<"OrdemDeServico"> | boolean
    aprovadoPorId?: StringNullableFilter<"OrdemDeServico"> | string | null
    servicoId?: StringNullableFilter<"OrdemDeServico"> | string | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    criadoPor?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    aprovadoPor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    pecasUsadas?: PecaListRelationFilter
    pagamentos?: OrdemServicoPagamentoListRelationFilter
    servico?: XOR<ServicoNullableRelationFilter, ServicoWhereInput> | null
    ordemDeEstoque?: XOR<OrdemEstoqueNullableRelationFilter, OrdemEstoqueWhereInput> | null
    Notificacao?: NotificacaoListRelationFilter
  }

  export type OrdemDeServicoOrderByWithRelationInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    servicosPrestados?: SortOrder
    cpf?: SortOrder
    valorTotal?: SortOrder
    dataDeRealizacao?: SortOrder
    dataDeVencimento?: SortOrder
    status?: SortOrder
    clienteId?: SortOrder
    criadoPorId?: SortOrder
    aprovado?: SortOrder
    aprovadoPorId?: SortOrderInput | SortOrder
    servicoId?: SortOrderInput | SortOrder
    cliente?: ClienteOrderByWithRelationInput
    criadoPor?: FuncionarioOrderByWithRelationInput
    aprovadoPor?: FuncionarioOrderByWithRelationInput
    pecasUsadas?: PecaOrderByRelationAggregateInput
    pagamentos?: OrdemServicoPagamentoOrderByRelationAggregateInput
    servico?: ServicoOrderByWithRelationInput
    ordemDeEstoque?: OrdemEstoqueOrderByWithRelationInput
    Notificacao?: NotificacaoOrderByRelationAggregateInput
  }

  export type OrdemDeServicoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrdemDeServicoWhereInput | OrdemDeServicoWhereInput[]
    OR?: OrdemDeServicoWhereInput[]
    NOT?: OrdemDeServicoWhereInput | OrdemDeServicoWhereInput[]
    placaDoCarro?: StringFilter<"OrdemDeServico"> | string
    servicosPrestados?: StringFilter<"OrdemDeServico"> | string
    cpf?: StringFilter<"OrdemDeServico"> | string
    valorTotal?: FloatFilter<"OrdemDeServico"> | number
    dataDeRealizacao?: DateTimeFilter<"OrdemDeServico"> | Date | string
    dataDeVencimento?: DateTimeFilter<"OrdemDeServico"> | Date | string
    status?: EnumStatusOrdemFilter<"OrdemDeServico"> | $Enums.StatusOrdem
    clienteId?: StringFilter<"OrdemDeServico"> | string
    criadoPorId?: StringFilter<"OrdemDeServico"> | string
    aprovado?: BoolFilter<"OrdemDeServico"> | boolean
    aprovadoPorId?: StringNullableFilter<"OrdemDeServico"> | string | null
    servicoId?: StringNullableFilter<"OrdemDeServico"> | string | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    criadoPor?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    aprovadoPor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    pecasUsadas?: PecaListRelationFilter
    pagamentos?: OrdemServicoPagamentoListRelationFilter
    servico?: XOR<ServicoNullableRelationFilter, ServicoWhereInput> | null
    ordemDeEstoque?: XOR<OrdemEstoqueNullableRelationFilter, OrdemEstoqueWhereInput> | null
    Notificacao?: NotificacaoListRelationFilter
  }, "id">

  export type OrdemDeServicoOrderByWithAggregationInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    servicosPrestados?: SortOrder
    cpf?: SortOrder
    valorTotal?: SortOrder
    dataDeRealizacao?: SortOrder
    dataDeVencimento?: SortOrder
    status?: SortOrder
    clienteId?: SortOrder
    criadoPorId?: SortOrder
    aprovado?: SortOrder
    aprovadoPorId?: SortOrderInput | SortOrder
    servicoId?: SortOrderInput | SortOrder
    _count?: OrdemDeServicoCountOrderByAggregateInput
    _avg?: OrdemDeServicoAvgOrderByAggregateInput
    _max?: OrdemDeServicoMaxOrderByAggregateInput
    _min?: OrdemDeServicoMinOrderByAggregateInput
    _sum?: OrdemDeServicoSumOrderByAggregateInput
  }

  export type OrdemDeServicoScalarWhereWithAggregatesInput = {
    AND?: OrdemDeServicoScalarWhereWithAggregatesInput | OrdemDeServicoScalarWhereWithAggregatesInput[]
    OR?: OrdemDeServicoScalarWhereWithAggregatesInput[]
    NOT?: OrdemDeServicoScalarWhereWithAggregatesInput | OrdemDeServicoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrdemDeServico"> | string
    placaDoCarro?: StringWithAggregatesFilter<"OrdemDeServico"> | string
    servicosPrestados?: StringWithAggregatesFilter<"OrdemDeServico"> | string
    cpf?: StringWithAggregatesFilter<"OrdemDeServico"> | string
    valorTotal?: FloatWithAggregatesFilter<"OrdemDeServico"> | number
    dataDeRealizacao?: DateTimeWithAggregatesFilter<"OrdemDeServico"> | Date | string
    dataDeVencimento?: DateTimeWithAggregatesFilter<"OrdemDeServico"> | Date | string
    status?: EnumStatusOrdemWithAggregatesFilter<"OrdemDeServico"> | $Enums.StatusOrdem
    clienteId?: StringWithAggregatesFilter<"OrdemDeServico"> | string
    criadoPorId?: StringWithAggregatesFilter<"OrdemDeServico"> | string
    aprovado?: BoolWithAggregatesFilter<"OrdemDeServico"> | boolean
    aprovadoPorId?: StringNullableWithAggregatesFilter<"OrdemDeServico"> | string | null
    servicoId?: StringNullableWithAggregatesFilter<"OrdemDeServico"> | string | null
  }

  export type OrdemEstoqueWhereInput = {
    AND?: OrdemEstoqueWhereInput | OrdemEstoqueWhereInput[]
    OR?: OrdemEstoqueWhereInput[]
    NOT?: OrdemEstoqueWhereInput | OrdemEstoqueWhereInput[]
    id?: StringFilter<"OrdemEstoque"> | string
    ordemDeServicoId?: StringNullableFilter<"OrdemEstoque"> | string | null
    pecaAprovada?: BoolFilter<"OrdemEstoque"> | boolean
    mensagem?: StringNullableFilter<"OrdemEstoque"> | string | null
    aprovadoPorId?: StringNullableFilter<"OrdemEstoque"> | string | null
    ordemDeServico?: XOR<OrdemDeServicoNullableRelationFilter, OrdemDeServicoWhereInput> | null
    aprovadoPor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }

  export type OrdemEstoqueOrderByWithRelationInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrderInput | SortOrder
    pecaAprovada?: SortOrder
    mensagem?: SortOrderInput | SortOrder
    aprovadoPorId?: SortOrderInput | SortOrder
    ordemDeServico?: OrdemDeServicoOrderByWithRelationInput
    aprovadoPor?: FuncionarioOrderByWithRelationInput
  }

  export type OrdemEstoqueWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    ordemDeServicoId?: string
    AND?: OrdemEstoqueWhereInput | OrdemEstoqueWhereInput[]
    OR?: OrdemEstoqueWhereInput[]
    NOT?: OrdemEstoqueWhereInput | OrdemEstoqueWhereInput[]
    pecaAprovada?: BoolFilter<"OrdemEstoque"> | boolean
    mensagem?: StringNullableFilter<"OrdemEstoque"> | string | null
    aprovadoPorId?: StringNullableFilter<"OrdemEstoque"> | string | null
    ordemDeServico?: XOR<OrdemDeServicoNullableRelationFilter, OrdemDeServicoWhereInput> | null
    aprovadoPor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }, "id" | "ordemDeServicoId">

  export type OrdemEstoqueOrderByWithAggregationInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrderInput | SortOrder
    pecaAprovada?: SortOrder
    mensagem?: SortOrderInput | SortOrder
    aprovadoPorId?: SortOrderInput | SortOrder
    _count?: OrdemEstoqueCountOrderByAggregateInput
    _max?: OrdemEstoqueMaxOrderByAggregateInput
    _min?: OrdemEstoqueMinOrderByAggregateInput
  }

  export type OrdemEstoqueScalarWhereWithAggregatesInput = {
    AND?: OrdemEstoqueScalarWhereWithAggregatesInput | OrdemEstoqueScalarWhereWithAggregatesInput[]
    OR?: OrdemEstoqueScalarWhereWithAggregatesInput[]
    NOT?: OrdemEstoqueScalarWhereWithAggregatesInput | OrdemEstoqueScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrdemEstoque"> | string
    ordemDeServicoId?: StringNullableWithAggregatesFilter<"OrdemEstoque"> | string | null
    pecaAprovada?: BoolWithAggregatesFilter<"OrdemEstoque"> | boolean
    mensagem?: StringNullableWithAggregatesFilter<"OrdemEstoque"> | string | null
    aprovadoPorId?: StringNullableWithAggregatesFilter<"OrdemEstoque"> | string | null
  }

  export type RevisaoWhereInput = {
    AND?: RevisaoWhereInput | RevisaoWhereInput[]
    OR?: RevisaoWhereInput[]
    NOT?: RevisaoWhereInput | RevisaoWhereInput[]
    id?: StringFilter<"Revisao"> | string
    placaDoCarro?: StringFilter<"Revisao"> | string
    dataDaRevisao?: DateTimeFilter<"Revisao"> | Date | string
    dataDaProximaRevisao?: DateTimeNullableFilter<"Revisao"> | Date | string | null
    mensagemPredefinida?: StringNullableFilter<"Revisao"> | string | null
    carroId?: StringFilter<"Revisao"> | string
    clienteId?: StringNullableFilter<"Revisao"> | string | null
    carro?: XOR<CarroRelationFilter, CarroWhereInput>
    cliente?: XOR<ClienteNullableRelationFilter, ClienteWhereInput> | null
    Notificacao?: NotificacaoListRelationFilter
  }

  export type RevisaoOrderByWithRelationInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    dataDaRevisao?: SortOrder
    dataDaProximaRevisao?: SortOrderInput | SortOrder
    mensagemPredefinida?: SortOrderInput | SortOrder
    carroId?: SortOrder
    clienteId?: SortOrderInput | SortOrder
    carro?: CarroOrderByWithRelationInput
    cliente?: ClienteOrderByWithRelationInput
    Notificacao?: NotificacaoOrderByRelationAggregateInput
  }

  export type RevisaoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RevisaoWhereInput | RevisaoWhereInput[]
    OR?: RevisaoWhereInput[]
    NOT?: RevisaoWhereInput | RevisaoWhereInput[]
    placaDoCarro?: StringFilter<"Revisao"> | string
    dataDaRevisao?: DateTimeFilter<"Revisao"> | Date | string
    dataDaProximaRevisao?: DateTimeNullableFilter<"Revisao"> | Date | string | null
    mensagemPredefinida?: StringNullableFilter<"Revisao"> | string | null
    carroId?: StringFilter<"Revisao"> | string
    clienteId?: StringNullableFilter<"Revisao"> | string | null
    carro?: XOR<CarroRelationFilter, CarroWhereInput>
    cliente?: XOR<ClienteNullableRelationFilter, ClienteWhereInput> | null
    Notificacao?: NotificacaoListRelationFilter
  }, "id">

  export type RevisaoOrderByWithAggregationInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    dataDaRevisao?: SortOrder
    dataDaProximaRevisao?: SortOrderInput | SortOrder
    mensagemPredefinida?: SortOrderInput | SortOrder
    carroId?: SortOrder
    clienteId?: SortOrderInput | SortOrder
    _count?: RevisaoCountOrderByAggregateInput
    _max?: RevisaoMaxOrderByAggregateInput
    _min?: RevisaoMinOrderByAggregateInput
  }

  export type RevisaoScalarWhereWithAggregatesInput = {
    AND?: RevisaoScalarWhereWithAggregatesInput | RevisaoScalarWhereWithAggregatesInput[]
    OR?: RevisaoScalarWhereWithAggregatesInput[]
    NOT?: RevisaoScalarWhereWithAggregatesInput | RevisaoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Revisao"> | string
    placaDoCarro?: StringWithAggregatesFilter<"Revisao"> | string
    dataDaRevisao?: DateTimeWithAggregatesFilter<"Revisao"> | Date | string
    dataDaProximaRevisao?: DateTimeNullableWithAggregatesFilter<"Revisao"> | Date | string | null
    mensagemPredefinida?: StringNullableWithAggregatesFilter<"Revisao"> | string | null
    carroId?: StringWithAggregatesFilter<"Revisao"> | string
    clienteId?: StringNullableWithAggregatesFilter<"Revisao"> | string | null
  }

  export type PagamentoWhereInput = {
    AND?: PagamentoWhereInput | PagamentoWhereInput[]
    OR?: PagamentoWhereInput[]
    NOT?: PagamentoWhereInput | PagamentoWhereInput[]
    id?: StringFilter<"Pagamento"> | string
    formaDePagamento?: EnumFormaPagamentoFilter<"Pagamento"> | $Enums.FormaPagamento
    ordens?: OrdemServicoPagamentoListRelationFilter
  }

  export type PagamentoOrderByWithRelationInput = {
    id?: SortOrder
    formaDePagamento?: SortOrder
    ordens?: OrdemServicoPagamentoOrderByRelationAggregateInput
  }

  export type PagamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PagamentoWhereInput | PagamentoWhereInput[]
    OR?: PagamentoWhereInput[]
    NOT?: PagamentoWhereInput | PagamentoWhereInput[]
    formaDePagamento?: EnumFormaPagamentoFilter<"Pagamento"> | $Enums.FormaPagamento
    ordens?: OrdemServicoPagamentoListRelationFilter
  }, "id">

  export type PagamentoOrderByWithAggregationInput = {
    id?: SortOrder
    formaDePagamento?: SortOrder
    _count?: PagamentoCountOrderByAggregateInput
    _max?: PagamentoMaxOrderByAggregateInput
    _min?: PagamentoMinOrderByAggregateInput
  }

  export type PagamentoScalarWhereWithAggregatesInput = {
    AND?: PagamentoScalarWhereWithAggregatesInput | PagamentoScalarWhereWithAggregatesInput[]
    OR?: PagamentoScalarWhereWithAggregatesInput[]
    NOT?: PagamentoScalarWhereWithAggregatesInput | PagamentoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Pagamento"> | string
    formaDePagamento?: EnumFormaPagamentoWithAggregatesFilter<"Pagamento"> | $Enums.FormaPagamento
  }

  export type OrdemServicoPagamentoWhereInput = {
    AND?: OrdemServicoPagamentoWhereInput | OrdemServicoPagamentoWhereInput[]
    OR?: OrdemServicoPagamentoWhereInput[]
    NOT?: OrdemServicoPagamentoWhereInput | OrdemServicoPagamentoWhereInput[]
    id?: StringFilter<"OrdemServicoPagamento"> | string
    ordemDeServicoId?: StringFilter<"OrdemServicoPagamento"> | string
    pagamentoId?: StringFilter<"OrdemServicoPagamento"> | string
    ordemDeServico?: XOR<OrdemDeServicoRelationFilter, OrdemDeServicoWhereInput>
    pagamento?: XOR<PagamentoRelationFilter, PagamentoWhereInput>
  }

  export type OrdemServicoPagamentoOrderByWithRelationInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrder
    pagamentoId?: SortOrder
    ordemDeServico?: OrdemDeServicoOrderByWithRelationInput
    pagamento?: PagamentoOrderByWithRelationInput
  }

  export type OrdemServicoPagamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrdemServicoPagamentoWhereInput | OrdemServicoPagamentoWhereInput[]
    OR?: OrdemServicoPagamentoWhereInput[]
    NOT?: OrdemServicoPagamentoWhereInput | OrdemServicoPagamentoWhereInput[]
    ordemDeServicoId?: StringFilter<"OrdemServicoPagamento"> | string
    pagamentoId?: StringFilter<"OrdemServicoPagamento"> | string
    ordemDeServico?: XOR<OrdemDeServicoRelationFilter, OrdemDeServicoWhereInput>
    pagamento?: XOR<PagamentoRelationFilter, PagamentoWhereInput>
  }, "id">

  export type OrdemServicoPagamentoOrderByWithAggregationInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrder
    pagamentoId?: SortOrder
    _count?: OrdemServicoPagamentoCountOrderByAggregateInput
    _max?: OrdemServicoPagamentoMaxOrderByAggregateInput
    _min?: OrdemServicoPagamentoMinOrderByAggregateInput
  }

  export type OrdemServicoPagamentoScalarWhereWithAggregatesInput = {
    AND?: OrdemServicoPagamentoScalarWhereWithAggregatesInput | OrdemServicoPagamentoScalarWhereWithAggregatesInput[]
    OR?: OrdemServicoPagamentoScalarWhereWithAggregatesInput[]
    NOT?: OrdemServicoPagamentoScalarWhereWithAggregatesInput | OrdemServicoPagamentoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrdemServicoPagamento"> | string
    ordemDeServicoId?: StringWithAggregatesFilter<"OrdemServicoPagamento"> | string
    pagamentoId?: StringWithAggregatesFilter<"OrdemServicoPagamento"> | string
  }

  export type NotificacaoWhereInput = {
    AND?: NotificacaoWhereInput | NotificacaoWhereInput[]
    OR?: NotificacaoWhereInput[]
    NOT?: NotificacaoWhereInput | NotificacaoWhereInput[]
    id?: StringFilter<"Notificacao"> | string
    tipo?: EnumTipoNotificacaoFilter<"Notificacao"> | $Enums.TipoNotificacao
    mensagem?: StringFilter<"Notificacao"> | string
    enviadoEm?: DateTimeFilter<"Notificacao"> | Date | string
    clienteId?: StringFilter<"Notificacao"> | string
    revisaoId?: StringNullableFilter<"Notificacao"> | string | null
    ordemServicoId?: StringNullableFilter<"Notificacao"> | string | null
    promocaoId?: StringNullableFilter<"Notificacao"> | string | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    promocao?: XOR<PromocaoNullableRelationFilter, PromocaoWhereInput> | null
    revisao?: XOR<RevisaoNullableRelationFilter, RevisaoWhereInput> | null
    ordemServico?: XOR<OrdemDeServicoNullableRelationFilter, OrdemDeServicoWhereInput> | null
  }

  export type NotificacaoOrderByWithRelationInput = {
    id?: SortOrder
    tipo?: SortOrder
    mensagem?: SortOrder
    enviadoEm?: SortOrder
    clienteId?: SortOrder
    revisaoId?: SortOrderInput | SortOrder
    ordemServicoId?: SortOrderInput | SortOrder
    promocaoId?: SortOrderInput | SortOrder
    cliente?: ClienteOrderByWithRelationInput
    promocao?: PromocaoOrderByWithRelationInput
    revisao?: RevisaoOrderByWithRelationInput
    ordemServico?: OrdemDeServicoOrderByWithRelationInput
  }

  export type NotificacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificacaoWhereInput | NotificacaoWhereInput[]
    OR?: NotificacaoWhereInput[]
    NOT?: NotificacaoWhereInput | NotificacaoWhereInput[]
    tipo?: EnumTipoNotificacaoFilter<"Notificacao"> | $Enums.TipoNotificacao
    mensagem?: StringFilter<"Notificacao"> | string
    enviadoEm?: DateTimeFilter<"Notificacao"> | Date | string
    clienteId?: StringFilter<"Notificacao"> | string
    revisaoId?: StringNullableFilter<"Notificacao"> | string | null
    ordemServicoId?: StringNullableFilter<"Notificacao"> | string | null
    promocaoId?: StringNullableFilter<"Notificacao"> | string | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    promocao?: XOR<PromocaoNullableRelationFilter, PromocaoWhereInput> | null
    revisao?: XOR<RevisaoNullableRelationFilter, RevisaoWhereInput> | null
    ordemServico?: XOR<OrdemDeServicoNullableRelationFilter, OrdemDeServicoWhereInput> | null
  }, "id">

  export type NotificacaoOrderByWithAggregationInput = {
    id?: SortOrder
    tipo?: SortOrder
    mensagem?: SortOrder
    enviadoEm?: SortOrder
    clienteId?: SortOrder
    revisaoId?: SortOrderInput | SortOrder
    ordemServicoId?: SortOrderInput | SortOrder
    promocaoId?: SortOrderInput | SortOrder
    _count?: NotificacaoCountOrderByAggregateInput
    _max?: NotificacaoMaxOrderByAggregateInput
    _min?: NotificacaoMinOrderByAggregateInput
  }

  export type NotificacaoScalarWhereWithAggregatesInput = {
    AND?: NotificacaoScalarWhereWithAggregatesInput | NotificacaoScalarWhereWithAggregatesInput[]
    OR?: NotificacaoScalarWhereWithAggregatesInput[]
    NOT?: NotificacaoScalarWhereWithAggregatesInput | NotificacaoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notificacao"> | string
    tipo?: EnumTipoNotificacaoWithAggregatesFilter<"Notificacao"> | $Enums.TipoNotificacao
    mensagem?: StringWithAggregatesFilter<"Notificacao"> | string
    enviadoEm?: DateTimeWithAggregatesFilter<"Notificacao"> | Date | string
    clienteId?: StringWithAggregatesFilter<"Notificacao"> | string
    revisaoId?: StringNullableWithAggregatesFilter<"Notificacao"> | string | null
    ordemServicoId?: StringNullableWithAggregatesFilter<"Notificacao"> | string | null
    promocaoId?: StringNullableWithAggregatesFilter<"Notificacao"> | string | null
  }

  export type PromocaoWhereInput = {
    AND?: PromocaoWhereInput | PromocaoWhereInput[]
    OR?: PromocaoWhereInput[]
    NOT?: PromocaoWhereInput | PromocaoWhereInput[]
    id?: StringFilter<"Promocao"> | string
    descricao?: StringFilter<"Promocao"> | string
    desconto?: FloatFilter<"Promocao"> | number
    servicoId?: StringNullableFilter<"Promocao"> | string | null
    servico?: XOR<ServicoNullableRelationFilter, ServicoWhereInput> | null
    notificacoes?: NotificacaoListRelationFilter
  }

  export type PromocaoOrderByWithRelationInput = {
    id?: SortOrder
    descricao?: SortOrder
    desconto?: SortOrder
    servicoId?: SortOrderInput | SortOrder
    servico?: ServicoOrderByWithRelationInput
    notificacoes?: NotificacaoOrderByRelationAggregateInput
  }

  export type PromocaoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PromocaoWhereInput | PromocaoWhereInput[]
    OR?: PromocaoWhereInput[]
    NOT?: PromocaoWhereInput | PromocaoWhereInput[]
    descricao?: StringFilter<"Promocao"> | string
    desconto?: FloatFilter<"Promocao"> | number
    servicoId?: StringNullableFilter<"Promocao"> | string | null
    servico?: XOR<ServicoNullableRelationFilter, ServicoWhereInput> | null
    notificacoes?: NotificacaoListRelationFilter
  }, "id">

  export type PromocaoOrderByWithAggregationInput = {
    id?: SortOrder
    descricao?: SortOrder
    desconto?: SortOrder
    servicoId?: SortOrderInput | SortOrder
    _count?: PromocaoCountOrderByAggregateInput
    _avg?: PromocaoAvgOrderByAggregateInput
    _max?: PromocaoMaxOrderByAggregateInput
    _min?: PromocaoMinOrderByAggregateInput
    _sum?: PromocaoSumOrderByAggregateInput
  }

  export type PromocaoScalarWhereWithAggregatesInput = {
    AND?: PromocaoScalarWhereWithAggregatesInput | PromocaoScalarWhereWithAggregatesInput[]
    OR?: PromocaoScalarWhereWithAggregatesInput[]
    NOT?: PromocaoScalarWhereWithAggregatesInput | PromocaoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Promocao"> | string
    descricao?: StringWithAggregatesFilter<"Promocao"> | string
    desconto?: FloatWithAggregatesFilter<"Promocao"> | number
    servicoId?: StringNullableWithAggregatesFilter<"Promocao"> | string | null
  }

  export type ClienteCreateInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    carros?: CarroCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoCreateNestedManyWithoutClienteInput
    criadoPor?: FuncionarioCreateNestedOneWithoutClientesCriadosInput
    funcionariosExecutores?: FuncionarioCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    criadoPorId?: string | null
    carros?: CarroUncheckedCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoUncheckedCreateNestedManyWithoutClienteInput
    funcionariosExecutores?: FuncionarioUncheckedCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUpdateManyWithoutClienteNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutClientesCriadosNestedInput
    funcionariosExecutores?: FuncionarioUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUncheckedUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUncheckedUpdateManyWithoutClienteNestedInput
    funcionariosExecutores?: FuncionarioUncheckedUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteCreateManyInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    criadoPorId?: string | null
  }

  export type ClienteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClienteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FuncionarioCreateInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    clientesCriados?: ClienteCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueCreateNestedManyWithoutAprovadoPorInput
    criadoPor?: FuncionarioCreateNestedOneWithoutFuncionariosCriadosInput
    funcionariosCriados?: FuncionarioCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioUncheckedCreateInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId?: string | null
    clientesCriados?: ClienteUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaUncheckedCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteUncheckedCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueUncheckedCreateNestedManyWithoutAprovadoPorInput
    funcionariosCriados?: FuncionarioUncheckedCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    clientesCriados?: ClienteUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUpdateManyWithoutAprovadoPorNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutFuncionariosCriadosNestedInput
    funcionariosCriados?: FuncionarioUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    clientesCriados?: ClienteUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUncheckedUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorNestedInput
    funcionariosCriados?: FuncionarioUncheckedUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioCreateManyInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId?: string | null
  }

  export type FuncionarioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
  }

  export type FuncionarioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CarroCreateInput = {
    id?: string
    placa: string
    modelo: string
    ano: number
    cliente: ClienteCreateNestedOneWithoutCarrosInput
    revisoes?: RevisaoCreateNestedManyWithoutCarroInput
  }

  export type CarroUncheckedCreateInput = {
    id?: string
    placa: string
    modelo: string
    ano: number
    clienteId: string
    revisoes?: RevisaoUncheckedCreateNestedManyWithoutCarroInput
  }

  export type CarroUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    cliente?: ClienteUpdateOneRequiredWithoutCarrosNestedInput
    revisoes?: RevisaoUpdateManyWithoutCarroNestedInput
  }

  export type CarroUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    clienteId?: StringFieldUpdateOperationsInput | string
    revisoes?: RevisaoUncheckedUpdateManyWithoutCarroNestedInput
  }

  export type CarroCreateManyInput = {
    id?: string
    placa: string
    modelo: string
    ano: number
    clienteId: string
  }

  export type CarroUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
  }

  export type CarroUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    clienteId?: StringFieldUpdateOperationsInput | string
  }

  export type ServicoCreateInput = {
    id?: string
    tipoDeServico: string
    valor: Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutServicoInput
    Promocao?: PromocaoCreateNestedManyWithoutServicoInput
  }

  export type ServicoUncheckedCreateInput = {
    id?: string
    tipoDeServico: string
    valor: Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutServicoInput
    Promocao?: PromocaoUncheckedCreateNestedManyWithoutServicoInput
  }

  export type ServicoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeServico?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutServicoNestedInput
    Promocao?: PromocaoUpdateManyWithoutServicoNestedInput
  }

  export type ServicoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeServico?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutServicoNestedInput
    Promocao?: PromocaoUncheckedUpdateManyWithoutServicoNestedInput
  }

  export type ServicoCreateManyInput = {
    id?: string
    tipoDeServico: string
    valor: Decimal | DecimalJsLike | number | string
  }

  export type ServicoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeServico?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ServicoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeServico?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type PecaCreateInput = {
    id?: string
    nome: string
    tipo: string
    valor: Decimal | DecimalJsLike | number | string
    quantidade: number
    criadoPor: FuncionarioCreateNestedOneWithoutPecasCriadasInput
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutPecasUsadasInput
  }

  export type PecaUncheckedCreateInput = {
    id?: string
    nome: string
    tipo: string
    valor: Decimal | DecimalJsLike | number | string
    quantidade: number
    criadoPorId: string
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutPecasUsadasInput
  }

  export type PecaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
    criadoPor?: FuncionarioUpdateOneRequiredWithoutPecasCriadasNestedInput
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutPecasUsadasNestedInput
  }

  export type PecaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
    criadoPorId?: StringFieldUpdateOperationsInput | string
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutPecasUsadasNestedInput
  }

  export type PecaCreateManyInput = {
    id?: string
    nome: string
    tipo: string
    valor: Decimal | DecimalJsLike | number | string
    quantidade: number
    criadoPorId: string
  }

  export type PecaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
  }

  export type PecaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
    criadoPorId?: StringFieldUpdateOperationsInput | string
  }

  export type OrdemDeServicoCreateInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    aprovado?: boolean
    cliente: ClienteCreateNestedOneWithoutOrdensDeServicoInput
    criadoPor: FuncionarioCreateNestedOneWithoutOrdensCriadasInput
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensAprovadasInput
    pecasUsadas?: PecaCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoCreateNestedManyWithoutOrdemDeServicoInput
    servico?: ServicoCreateNestedOneWithoutOrdensDeServicoInput
    ordemDeEstoque?: OrdemEstoqueCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoUncheckedCreateInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
    pecasUsadas?: PecaUncheckedCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoUncheckedCreateNestedManyWithoutOrdemDeServicoInput
    ordemDeEstoque?: OrdemEstoqueUncheckedCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClienteUpdateOneRequiredWithoutOrdensDeServicoNestedInput
    criadoPor?: FuncionarioUpdateOneRequiredWithoutOrdensCriadasNestedInput
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensAprovadasNestedInput
    pecasUsadas?: PecaUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUpdateManyWithoutOrdemDeServicoNestedInput
    servico?: ServicoUpdateOneWithoutOrdensDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecasUsadas?: PecaUncheckedUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUncheckedUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoCreateManyInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
  }

  export type OrdemDeServicoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrdemDeServicoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemEstoqueCreateInput = {
    id?: string
    pecaAprovada?: boolean
    mensagem?: string | null
    ordemDeServico?: OrdemDeServicoCreateNestedOneWithoutOrdemDeEstoqueInput
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensDeEstoqueInput
  }

  export type OrdemEstoqueUncheckedCreateInput = {
    id?: string
    ordemDeServicoId?: string | null
    pecaAprovada?: boolean
    mensagem?: string | null
    aprovadoPorId?: string | null
  }

  export type OrdemEstoqueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pecaAprovada?: BoolFieldUpdateOperationsInput | boolean
    mensagem?: NullableStringFieldUpdateOperationsInput | string | null
    ordemDeServico?: OrdemDeServicoUpdateOneWithoutOrdemDeEstoqueNestedInput
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensDeEstoqueNestedInput
  }

  export type OrdemEstoqueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecaAprovada?: BoolFieldUpdateOperationsInput | boolean
    mensagem?: NullableStringFieldUpdateOperationsInput | string | null
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemEstoqueCreateManyInput = {
    id?: string
    ordemDeServicoId?: string | null
    pecaAprovada?: boolean
    mensagem?: string | null
    aprovadoPorId?: string | null
  }

  export type OrdemEstoqueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    pecaAprovada?: BoolFieldUpdateOperationsInput | boolean
    mensagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemEstoqueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecaAprovada?: BoolFieldUpdateOperationsInput | boolean
    mensagem?: NullableStringFieldUpdateOperationsInput | string | null
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RevisaoCreateInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    carro: CarroCreateNestedOneWithoutRevisoesInput
    cliente?: ClienteCreateNestedOneWithoutRevisoesInput
    Notificacao?: NotificacaoCreateNestedManyWithoutRevisaoInput
  }

  export type RevisaoUncheckedCreateInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    carroId: string
    clienteId?: string | null
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutRevisaoInput
  }

  export type RevisaoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    carro?: CarroUpdateOneRequiredWithoutRevisoesNestedInput
    cliente?: ClienteUpdateOneWithoutRevisoesNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutRevisaoNestedInput
  }

  export type RevisaoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    carroId?: StringFieldUpdateOperationsInput | string
    clienteId?: NullableStringFieldUpdateOperationsInput | string | null
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutRevisaoNestedInput
  }

  export type RevisaoCreateManyInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    carroId: string
    clienteId?: string | null
  }

  export type RevisaoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RevisaoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    carroId?: StringFieldUpdateOperationsInput | string
    clienteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PagamentoCreateInput = {
    id?: string
    formaDePagamento: $Enums.FormaPagamento
    ordens?: OrdemServicoPagamentoCreateNestedManyWithoutPagamentoInput
  }

  export type PagamentoUncheckedCreateInput = {
    id?: string
    formaDePagamento: $Enums.FormaPagamento
    ordens?: OrdemServicoPagamentoUncheckedCreateNestedManyWithoutPagamentoInput
  }

  export type PagamentoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    formaDePagamento?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
    ordens?: OrdemServicoPagamentoUpdateManyWithoutPagamentoNestedInput
  }

  export type PagamentoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    formaDePagamento?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
    ordens?: OrdemServicoPagamentoUncheckedUpdateManyWithoutPagamentoNestedInput
  }

  export type PagamentoCreateManyInput = {
    id?: string
    formaDePagamento: $Enums.FormaPagamento
  }

  export type PagamentoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    formaDePagamento?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
  }

  export type PagamentoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    formaDePagamento?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
  }

  export type OrdemServicoPagamentoCreateInput = {
    id?: string
    ordemDeServico: OrdemDeServicoCreateNestedOneWithoutPagamentosInput
    pagamento: PagamentoCreateNestedOneWithoutOrdensInput
  }

  export type OrdemServicoPagamentoUncheckedCreateInput = {
    id?: string
    ordemDeServicoId: string
    pagamentoId: string
  }

  export type OrdemServicoPagamentoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServico?: OrdemDeServicoUpdateOneRequiredWithoutPagamentosNestedInput
    pagamento?: PagamentoUpdateOneRequiredWithoutOrdensNestedInput
  }

  export type OrdemServicoPagamentoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServicoId?: StringFieldUpdateOperationsInput | string
    pagamentoId?: StringFieldUpdateOperationsInput | string
  }

  export type OrdemServicoPagamentoCreateManyInput = {
    id?: string
    ordemDeServicoId: string
    pagamentoId: string
  }

  export type OrdemServicoPagamentoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type OrdemServicoPagamentoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServicoId?: StringFieldUpdateOperationsInput | string
    pagamentoId?: StringFieldUpdateOperationsInput | string
  }

  export type NotificacaoCreateInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    cliente: ClienteCreateNestedOneWithoutNotificacoesInput
    promocao?: PromocaoCreateNestedOneWithoutNotificacoesInput
    revisao?: RevisaoCreateNestedOneWithoutNotificacaoInput
    ordemServico?: OrdemDeServicoCreateNestedOneWithoutNotificacaoInput
  }

  export type NotificacaoUncheckedCreateInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    clienteId: string
    revisaoId?: string | null
    ordemServicoId?: string | null
    promocaoId?: string | null
  }

  export type NotificacaoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutNotificacoesNestedInput
    promocao?: PromocaoUpdateOneWithoutNotificacoesNestedInput
    revisao?: RevisaoUpdateOneWithoutNotificacaoNestedInput
    ordemServico?: OrdemDeServicoUpdateOneWithoutNotificacaoNestedInput
  }

  export type NotificacaoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: StringFieldUpdateOperationsInput | string
    revisaoId?: NullableStringFieldUpdateOperationsInput | string | null
    ordemServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    promocaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificacaoCreateManyInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    clienteId: string
    revisaoId?: string | null
    ordemServicoId?: string | null
    promocaoId?: string | null
  }

  export type NotificacaoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: StringFieldUpdateOperationsInput | string
    revisaoId?: NullableStringFieldUpdateOperationsInput | string | null
    ordemServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    promocaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromocaoCreateInput = {
    id?: string
    descricao: string
    desconto: number
    servico?: ServicoCreateNestedOneWithoutPromocaoInput
    notificacoes?: NotificacaoCreateNestedManyWithoutPromocaoInput
  }

  export type PromocaoUncheckedCreateInput = {
    id?: string
    descricao: string
    desconto: number
    servicoId?: string | null
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutPromocaoInput
  }

  export type PromocaoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    servico?: ServicoUpdateOneWithoutPromocaoNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutPromocaoNestedInput
  }

  export type PromocaoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutPromocaoNestedInput
  }

  export type PromocaoCreateManyInput = {
    id?: string
    descricao: string
    desconto: number
    servicoId?: string | null
  }

  export type PromocaoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
  }

  export type PromocaoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumTipoClienteFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCliente | EnumTipoClienteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoClienteFilter<$PrismaModel> | $Enums.TipoCliente
  }

  export type CarroListRelationFilter = {
    every?: CarroWhereInput
    some?: CarroWhereInput
    none?: CarroWhereInput
  }

  export type OrdemDeServicoListRelationFilter = {
    every?: OrdemDeServicoWhereInput
    some?: OrdemDeServicoWhereInput
    none?: OrdemDeServicoWhereInput
  }

  export type RevisaoListRelationFilter = {
    every?: RevisaoWhereInput
    some?: RevisaoWhereInput
    none?: RevisaoWhereInput
  }

  export type FuncionarioNullableRelationFilter = {
    is?: FuncionarioWhereInput | null
    isNot?: FuncionarioWhereInput | null
  }

  export type FuncionarioListRelationFilter = {
    every?: FuncionarioWhereInput
    some?: FuncionarioWhereInput
    none?: FuncionarioWhereInput
  }

  export type NotificacaoListRelationFilter = {
    every?: NotificacaoWhereInput
    some?: NotificacaoWhereInput
    none?: NotificacaoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CarroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrdemDeServicoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RevisaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FuncionarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClienteCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    cnpj?: SortOrder
    dataDeNascimento?: SortOrder
    password?: SortOrder
    tipo?: SortOrder
    clienteCadastrador?: SortOrder
    criadoPorId?: SortOrder
  }

  export type ClienteMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    cnpj?: SortOrder
    dataDeNascimento?: SortOrder
    password?: SortOrder
    tipo?: SortOrder
    clienteCadastrador?: SortOrder
    criadoPorId?: SortOrder
  }

  export type ClienteMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    cnpj?: SortOrder
    dataDeNascimento?: SortOrder
    password?: SortOrder
    tipo?: SortOrder
    clienteCadastrador?: SortOrder
    criadoPorId?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumTipoClienteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCliente | EnumTipoClienteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoClienteWithAggregatesFilter<$PrismaModel> | $Enums.TipoCliente
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoClienteFilter<$PrismaModel>
    _max?: NestedEnumTipoClienteFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumTipoFuncionarioFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoFuncionario | EnumTipoFuncionarioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoFuncionario[] | ListEnumTipoFuncionarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoFuncionario[] | ListEnumTipoFuncionarioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoFuncionarioFilter<$PrismaModel> | $Enums.TipoFuncionario
  }

  export type ClienteListRelationFilter = {
    every?: ClienteWhereInput
    some?: ClienteWhereInput
    none?: ClienteWhereInput
  }

  export type PecaListRelationFilter = {
    every?: PecaWhereInput
    some?: PecaWhereInput
    none?: PecaWhereInput
  }

  export type OrdemEstoqueListRelationFilter = {
    every?: OrdemEstoqueWhereInput
    some?: OrdemEstoqueWhereInput
    none?: OrdemEstoqueWhereInput
  }

  export type ClienteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PecaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrdemEstoqueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FuncionarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    username?: SortOrder
    cpf?: SortOrder
    dataDeNascimento?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    tipo?: SortOrder
    criadoPorId?: SortOrder
  }

  export type FuncionarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    username?: SortOrder
    cpf?: SortOrder
    dataDeNascimento?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    tipo?: SortOrder
    criadoPorId?: SortOrder
  }

  export type FuncionarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    username?: SortOrder
    cpf?: SortOrder
    dataDeNascimento?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    tipo?: SortOrder
    criadoPorId?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumTipoFuncionarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoFuncionario | EnumTipoFuncionarioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoFuncionario[] | ListEnumTipoFuncionarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoFuncionario[] | ListEnumTipoFuncionarioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoFuncionarioWithAggregatesFilter<$PrismaModel> | $Enums.TipoFuncionario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoFuncionarioFilter<$PrismaModel>
    _max?: NestedEnumTipoFuncionarioFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type ClienteRelationFilter = {
    is?: ClienteWhereInput
    isNot?: ClienteWhereInput
  }

  export type CarroCountOrderByAggregateInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    clienteId?: SortOrder
  }

  export type CarroAvgOrderByAggregateInput = {
    ano?: SortOrder
  }

  export type CarroMaxOrderByAggregateInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    clienteId?: SortOrder
  }

  export type CarroMinOrderByAggregateInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    clienteId?: SortOrder
  }

  export type CarroSumOrderByAggregateInput = {
    ano?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type PromocaoListRelationFilter = {
    every?: PromocaoWhereInput
    some?: PromocaoWhereInput
    none?: PromocaoWhereInput
  }

  export type PromocaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServicoCountOrderByAggregateInput = {
    id?: SortOrder
    tipoDeServico?: SortOrder
    valor?: SortOrder
  }

  export type ServicoAvgOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type ServicoMaxOrderByAggregateInput = {
    id?: SortOrder
    tipoDeServico?: SortOrder
    valor?: SortOrder
  }

  export type ServicoMinOrderByAggregateInput = {
    id?: SortOrder
    tipoDeServico?: SortOrder
    valor?: SortOrder
  }

  export type ServicoSumOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type FuncionarioRelationFilter = {
    is?: FuncionarioWhereInput
    isNot?: FuncionarioWhereInput
  }

  export type PecaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    quantidade?: SortOrder
    criadoPorId?: SortOrder
  }

  export type PecaAvgOrderByAggregateInput = {
    valor?: SortOrder
    quantidade?: SortOrder
  }

  export type PecaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    quantidade?: SortOrder
    criadoPorId?: SortOrder
  }

  export type PecaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    quantidade?: SortOrder
    criadoPorId?: SortOrder
  }

  export type PecaSumOrderByAggregateInput = {
    valor?: SortOrder
    quantidade?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumStatusOrdemFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusOrdem | EnumStatusOrdemFieldRefInput<$PrismaModel>
    in?: $Enums.StatusOrdem[] | ListEnumStatusOrdemFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusOrdem[] | ListEnumStatusOrdemFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusOrdemFilter<$PrismaModel> | $Enums.StatusOrdem
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type OrdemServicoPagamentoListRelationFilter = {
    every?: OrdemServicoPagamentoWhereInput
    some?: OrdemServicoPagamentoWhereInput
    none?: OrdemServicoPagamentoWhereInput
  }

  export type ServicoNullableRelationFilter = {
    is?: ServicoWhereInput | null
    isNot?: ServicoWhereInput | null
  }

  export type OrdemEstoqueNullableRelationFilter = {
    is?: OrdemEstoqueWhereInput | null
    isNot?: OrdemEstoqueWhereInput | null
  }

  export type OrdemServicoPagamentoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrdemDeServicoCountOrderByAggregateInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    servicosPrestados?: SortOrder
    cpf?: SortOrder
    valorTotal?: SortOrder
    dataDeRealizacao?: SortOrder
    dataDeVencimento?: SortOrder
    status?: SortOrder
    clienteId?: SortOrder
    criadoPorId?: SortOrder
    aprovado?: SortOrder
    aprovadoPorId?: SortOrder
    servicoId?: SortOrder
  }

  export type OrdemDeServicoAvgOrderByAggregateInput = {
    valorTotal?: SortOrder
  }

  export type OrdemDeServicoMaxOrderByAggregateInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    servicosPrestados?: SortOrder
    cpf?: SortOrder
    valorTotal?: SortOrder
    dataDeRealizacao?: SortOrder
    dataDeVencimento?: SortOrder
    status?: SortOrder
    clienteId?: SortOrder
    criadoPorId?: SortOrder
    aprovado?: SortOrder
    aprovadoPorId?: SortOrder
    servicoId?: SortOrder
  }

  export type OrdemDeServicoMinOrderByAggregateInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    servicosPrestados?: SortOrder
    cpf?: SortOrder
    valorTotal?: SortOrder
    dataDeRealizacao?: SortOrder
    dataDeVencimento?: SortOrder
    status?: SortOrder
    clienteId?: SortOrder
    criadoPorId?: SortOrder
    aprovado?: SortOrder
    aprovadoPorId?: SortOrder
    servicoId?: SortOrder
  }

  export type OrdemDeServicoSumOrderByAggregateInput = {
    valorTotal?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumStatusOrdemWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusOrdem | EnumStatusOrdemFieldRefInput<$PrismaModel>
    in?: $Enums.StatusOrdem[] | ListEnumStatusOrdemFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusOrdem[] | ListEnumStatusOrdemFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusOrdemWithAggregatesFilter<$PrismaModel> | $Enums.StatusOrdem
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusOrdemFilter<$PrismaModel>
    _max?: NestedEnumStatusOrdemFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type OrdemDeServicoNullableRelationFilter = {
    is?: OrdemDeServicoWhereInput | null
    isNot?: OrdemDeServicoWhereInput | null
  }

  export type OrdemEstoqueCountOrderByAggregateInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrder
    pecaAprovada?: SortOrder
    mensagem?: SortOrder
    aprovadoPorId?: SortOrder
  }

  export type OrdemEstoqueMaxOrderByAggregateInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrder
    pecaAprovada?: SortOrder
    mensagem?: SortOrder
    aprovadoPorId?: SortOrder
  }

  export type OrdemEstoqueMinOrderByAggregateInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrder
    pecaAprovada?: SortOrder
    mensagem?: SortOrder
    aprovadoPorId?: SortOrder
  }

  export type CarroRelationFilter = {
    is?: CarroWhereInput
    isNot?: CarroWhereInput
  }

  export type ClienteNullableRelationFilter = {
    is?: ClienteWhereInput | null
    isNot?: ClienteWhereInput | null
  }

  export type RevisaoCountOrderByAggregateInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    dataDaRevisao?: SortOrder
    dataDaProximaRevisao?: SortOrder
    mensagemPredefinida?: SortOrder
    carroId?: SortOrder
    clienteId?: SortOrder
  }

  export type RevisaoMaxOrderByAggregateInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    dataDaRevisao?: SortOrder
    dataDaProximaRevisao?: SortOrder
    mensagemPredefinida?: SortOrder
    carroId?: SortOrder
    clienteId?: SortOrder
  }

  export type RevisaoMinOrderByAggregateInput = {
    id?: SortOrder
    placaDoCarro?: SortOrder
    dataDaRevisao?: SortOrder
    dataDaProximaRevisao?: SortOrder
    mensagemPredefinida?: SortOrder
    carroId?: SortOrder
    clienteId?: SortOrder
  }

  export type EnumFormaPagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.FormaPagamento | EnumFormaPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumFormaPagamentoFilter<$PrismaModel> | $Enums.FormaPagamento
  }

  export type PagamentoCountOrderByAggregateInput = {
    id?: SortOrder
    formaDePagamento?: SortOrder
  }

  export type PagamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    formaDePagamento?: SortOrder
  }

  export type PagamentoMinOrderByAggregateInput = {
    id?: SortOrder
    formaDePagamento?: SortOrder
  }

  export type EnumFormaPagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FormaPagamento | EnumFormaPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumFormaPagamentoWithAggregatesFilter<$PrismaModel> | $Enums.FormaPagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFormaPagamentoFilter<$PrismaModel>
    _max?: NestedEnumFormaPagamentoFilter<$PrismaModel>
  }

  export type OrdemDeServicoRelationFilter = {
    is?: OrdemDeServicoWhereInput
    isNot?: OrdemDeServicoWhereInput
  }

  export type PagamentoRelationFilter = {
    is?: PagamentoWhereInput
    isNot?: PagamentoWhereInput
  }

  export type OrdemServicoPagamentoCountOrderByAggregateInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrder
    pagamentoId?: SortOrder
  }

  export type OrdemServicoPagamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrder
    pagamentoId?: SortOrder
  }

  export type OrdemServicoPagamentoMinOrderByAggregateInput = {
    id?: SortOrder
    ordemDeServicoId?: SortOrder
    pagamentoId?: SortOrder
  }

  export type EnumTipoNotificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoNotificacao | EnumTipoNotificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoNotificacao[] | ListEnumTipoNotificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoNotificacao[] | ListEnumTipoNotificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoNotificacaoFilter<$PrismaModel> | $Enums.TipoNotificacao
  }

  export type PromocaoNullableRelationFilter = {
    is?: PromocaoWhereInput | null
    isNot?: PromocaoWhereInput | null
  }

  export type RevisaoNullableRelationFilter = {
    is?: RevisaoWhereInput | null
    isNot?: RevisaoWhereInput | null
  }

  export type NotificacaoCountOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    mensagem?: SortOrder
    enviadoEm?: SortOrder
    clienteId?: SortOrder
    revisaoId?: SortOrder
    ordemServicoId?: SortOrder
    promocaoId?: SortOrder
  }

  export type NotificacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    mensagem?: SortOrder
    enviadoEm?: SortOrder
    clienteId?: SortOrder
    revisaoId?: SortOrder
    ordemServicoId?: SortOrder
    promocaoId?: SortOrder
  }

  export type NotificacaoMinOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    mensagem?: SortOrder
    enviadoEm?: SortOrder
    clienteId?: SortOrder
    revisaoId?: SortOrder
    ordemServicoId?: SortOrder
    promocaoId?: SortOrder
  }

  export type EnumTipoNotificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoNotificacao | EnumTipoNotificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoNotificacao[] | ListEnumTipoNotificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoNotificacao[] | ListEnumTipoNotificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoNotificacaoWithAggregatesFilter<$PrismaModel> | $Enums.TipoNotificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoNotificacaoFilter<$PrismaModel>
    _max?: NestedEnumTipoNotificacaoFilter<$PrismaModel>
  }

  export type PromocaoCountOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    desconto?: SortOrder
    servicoId?: SortOrder
  }

  export type PromocaoAvgOrderByAggregateInput = {
    desconto?: SortOrder
  }

  export type PromocaoMaxOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    desconto?: SortOrder
    servicoId?: SortOrder
  }

  export type PromocaoMinOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    desconto?: SortOrder
    servicoId?: SortOrder
  }

  export type PromocaoSumOrderByAggregateInput = {
    desconto?: SortOrder
  }

  export type CarroCreateNestedManyWithoutClienteInput = {
    create?: XOR<CarroCreateWithoutClienteInput, CarroUncheckedCreateWithoutClienteInput> | CarroCreateWithoutClienteInput[] | CarroUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: CarroCreateOrConnectWithoutClienteInput | CarroCreateOrConnectWithoutClienteInput[]
    createMany?: CarroCreateManyClienteInputEnvelope
    connect?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
  }

  export type OrdemDeServicoCreateNestedManyWithoutClienteInput = {
    create?: XOR<OrdemDeServicoCreateWithoutClienteInput, OrdemDeServicoUncheckedCreateWithoutClienteInput> | OrdemDeServicoCreateWithoutClienteInput[] | OrdemDeServicoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutClienteInput | OrdemDeServicoCreateOrConnectWithoutClienteInput[]
    createMany?: OrdemDeServicoCreateManyClienteInputEnvelope
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type RevisaoCreateNestedManyWithoutClienteInput = {
    create?: XOR<RevisaoCreateWithoutClienteInput, RevisaoUncheckedCreateWithoutClienteInput> | RevisaoCreateWithoutClienteInput[] | RevisaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: RevisaoCreateOrConnectWithoutClienteInput | RevisaoCreateOrConnectWithoutClienteInput[]
    createMany?: RevisaoCreateManyClienteInputEnvelope
    connect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
  }

  export type FuncionarioCreateNestedOneWithoutClientesCriadosInput = {
    create?: XOR<FuncionarioCreateWithoutClientesCriadosInput, FuncionarioUncheckedCreateWithoutClientesCriadosInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutClientesCriadosInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type FuncionarioCreateNestedManyWithoutServicosExecutadosInput = {
    create?: XOR<FuncionarioCreateWithoutServicosExecutadosInput, FuncionarioUncheckedCreateWithoutServicosExecutadosInput> | FuncionarioCreateWithoutServicosExecutadosInput[] | FuncionarioUncheckedCreateWithoutServicosExecutadosInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutServicosExecutadosInput | FuncionarioCreateOrConnectWithoutServicosExecutadosInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type NotificacaoCreateNestedManyWithoutClienteInput = {
    create?: XOR<NotificacaoCreateWithoutClienteInput, NotificacaoUncheckedCreateWithoutClienteInput> | NotificacaoCreateWithoutClienteInput[] | NotificacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutClienteInput | NotificacaoCreateOrConnectWithoutClienteInput[]
    createMany?: NotificacaoCreateManyClienteInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type CarroUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<CarroCreateWithoutClienteInput, CarroUncheckedCreateWithoutClienteInput> | CarroCreateWithoutClienteInput[] | CarroUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: CarroCreateOrConnectWithoutClienteInput | CarroCreateOrConnectWithoutClienteInput[]
    createMany?: CarroCreateManyClienteInputEnvelope
    connect?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
  }

  export type OrdemDeServicoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<OrdemDeServicoCreateWithoutClienteInput, OrdemDeServicoUncheckedCreateWithoutClienteInput> | OrdemDeServicoCreateWithoutClienteInput[] | OrdemDeServicoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutClienteInput | OrdemDeServicoCreateOrConnectWithoutClienteInput[]
    createMany?: OrdemDeServicoCreateManyClienteInputEnvelope
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type RevisaoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<RevisaoCreateWithoutClienteInput, RevisaoUncheckedCreateWithoutClienteInput> | RevisaoCreateWithoutClienteInput[] | RevisaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: RevisaoCreateOrConnectWithoutClienteInput | RevisaoCreateOrConnectWithoutClienteInput[]
    createMany?: RevisaoCreateManyClienteInputEnvelope
    connect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
  }

  export type FuncionarioUncheckedCreateNestedManyWithoutServicosExecutadosInput = {
    create?: XOR<FuncionarioCreateWithoutServicosExecutadosInput, FuncionarioUncheckedCreateWithoutServicosExecutadosInput> | FuncionarioCreateWithoutServicosExecutadosInput[] | FuncionarioUncheckedCreateWithoutServicosExecutadosInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutServicosExecutadosInput | FuncionarioCreateOrConnectWithoutServicosExecutadosInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type NotificacaoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<NotificacaoCreateWithoutClienteInput, NotificacaoUncheckedCreateWithoutClienteInput> | NotificacaoCreateWithoutClienteInput[] | NotificacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutClienteInput | NotificacaoCreateOrConnectWithoutClienteInput[]
    createMany?: NotificacaoCreateManyClienteInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumTipoClienteFieldUpdateOperationsInput = {
    set?: $Enums.TipoCliente
  }

  export type CarroUpdateManyWithoutClienteNestedInput = {
    create?: XOR<CarroCreateWithoutClienteInput, CarroUncheckedCreateWithoutClienteInput> | CarroCreateWithoutClienteInput[] | CarroUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: CarroCreateOrConnectWithoutClienteInput | CarroCreateOrConnectWithoutClienteInput[]
    upsert?: CarroUpsertWithWhereUniqueWithoutClienteInput | CarroUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: CarroCreateManyClienteInputEnvelope
    set?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
    disconnect?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
    delete?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
    connect?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
    update?: CarroUpdateWithWhereUniqueWithoutClienteInput | CarroUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: CarroUpdateManyWithWhereWithoutClienteInput | CarroUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: CarroScalarWhereInput | CarroScalarWhereInput[]
  }

  export type OrdemDeServicoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutClienteInput, OrdemDeServicoUncheckedCreateWithoutClienteInput> | OrdemDeServicoCreateWithoutClienteInput[] | OrdemDeServicoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutClienteInput | OrdemDeServicoCreateOrConnectWithoutClienteInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutClienteInput | OrdemDeServicoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: OrdemDeServicoCreateManyClienteInputEnvelope
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutClienteInput | OrdemDeServicoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutClienteInput | OrdemDeServicoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type RevisaoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<RevisaoCreateWithoutClienteInput, RevisaoUncheckedCreateWithoutClienteInput> | RevisaoCreateWithoutClienteInput[] | RevisaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: RevisaoCreateOrConnectWithoutClienteInput | RevisaoCreateOrConnectWithoutClienteInput[]
    upsert?: RevisaoUpsertWithWhereUniqueWithoutClienteInput | RevisaoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: RevisaoCreateManyClienteInputEnvelope
    set?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    disconnect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    delete?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    connect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    update?: RevisaoUpdateWithWhereUniqueWithoutClienteInput | RevisaoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: RevisaoUpdateManyWithWhereWithoutClienteInput | RevisaoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: RevisaoScalarWhereInput | RevisaoScalarWhereInput[]
  }

  export type FuncionarioUpdateOneWithoutClientesCriadosNestedInput = {
    create?: XOR<FuncionarioCreateWithoutClientesCriadosInput, FuncionarioUncheckedCreateWithoutClientesCriadosInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutClientesCriadosInput
    upsert?: FuncionarioUpsertWithoutClientesCriadosInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutClientesCriadosInput, FuncionarioUpdateWithoutClientesCriadosInput>, FuncionarioUncheckedUpdateWithoutClientesCriadosInput>
  }

  export type FuncionarioUpdateManyWithoutServicosExecutadosNestedInput = {
    create?: XOR<FuncionarioCreateWithoutServicosExecutadosInput, FuncionarioUncheckedCreateWithoutServicosExecutadosInput> | FuncionarioCreateWithoutServicosExecutadosInput[] | FuncionarioUncheckedCreateWithoutServicosExecutadosInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutServicosExecutadosInput | FuncionarioCreateOrConnectWithoutServicosExecutadosInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutServicosExecutadosInput | FuncionarioUpsertWithWhereUniqueWithoutServicosExecutadosInput[]
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutServicosExecutadosInput | FuncionarioUpdateWithWhereUniqueWithoutServicosExecutadosInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutServicosExecutadosInput | FuncionarioUpdateManyWithWhereWithoutServicosExecutadosInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type NotificacaoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<NotificacaoCreateWithoutClienteInput, NotificacaoUncheckedCreateWithoutClienteInput> | NotificacaoCreateWithoutClienteInput[] | NotificacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutClienteInput | NotificacaoCreateOrConnectWithoutClienteInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutClienteInput | NotificacaoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: NotificacaoCreateManyClienteInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutClienteInput | NotificacaoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutClienteInput | NotificacaoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type CarroUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<CarroCreateWithoutClienteInput, CarroUncheckedCreateWithoutClienteInput> | CarroCreateWithoutClienteInput[] | CarroUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: CarroCreateOrConnectWithoutClienteInput | CarroCreateOrConnectWithoutClienteInput[]
    upsert?: CarroUpsertWithWhereUniqueWithoutClienteInput | CarroUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: CarroCreateManyClienteInputEnvelope
    set?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
    disconnect?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
    delete?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
    connect?: CarroWhereUniqueInput | CarroWhereUniqueInput[]
    update?: CarroUpdateWithWhereUniqueWithoutClienteInput | CarroUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: CarroUpdateManyWithWhereWithoutClienteInput | CarroUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: CarroScalarWhereInput | CarroScalarWhereInput[]
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutClienteInput, OrdemDeServicoUncheckedCreateWithoutClienteInput> | OrdemDeServicoCreateWithoutClienteInput[] | OrdemDeServicoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutClienteInput | OrdemDeServicoCreateOrConnectWithoutClienteInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutClienteInput | OrdemDeServicoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: OrdemDeServicoCreateManyClienteInputEnvelope
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutClienteInput | OrdemDeServicoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutClienteInput | OrdemDeServicoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type RevisaoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<RevisaoCreateWithoutClienteInput, RevisaoUncheckedCreateWithoutClienteInput> | RevisaoCreateWithoutClienteInput[] | RevisaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: RevisaoCreateOrConnectWithoutClienteInput | RevisaoCreateOrConnectWithoutClienteInput[]
    upsert?: RevisaoUpsertWithWhereUniqueWithoutClienteInput | RevisaoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: RevisaoCreateManyClienteInputEnvelope
    set?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    disconnect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    delete?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    connect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    update?: RevisaoUpdateWithWhereUniqueWithoutClienteInput | RevisaoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: RevisaoUpdateManyWithWhereWithoutClienteInput | RevisaoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: RevisaoScalarWhereInput | RevisaoScalarWhereInput[]
  }

  export type FuncionarioUncheckedUpdateManyWithoutServicosExecutadosNestedInput = {
    create?: XOR<FuncionarioCreateWithoutServicosExecutadosInput, FuncionarioUncheckedCreateWithoutServicosExecutadosInput> | FuncionarioCreateWithoutServicosExecutadosInput[] | FuncionarioUncheckedCreateWithoutServicosExecutadosInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutServicosExecutadosInput | FuncionarioCreateOrConnectWithoutServicosExecutadosInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutServicosExecutadosInput | FuncionarioUpsertWithWhereUniqueWithoutServicosExecutadosInput[]
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutServicosExecutadosInput | FuncionarioUpdateWithWhereUniqueWithoutServicosExecutadosInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutServicosExecutadosInput | FuncionarioUpdateManyWithWhereWithoutServicosExecutadosInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type NotificacaoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<NotificacaoCreateWithoutClienteInput, NotificacaoUncheckedCreateWithoutClienteInput> | NotificacaoCreateWithoutClienteInput[] | NotificacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutClienteInput | NotificacaoCreateOrConnectWithoutClienteInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutClienteInput | NotificacaoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: NotificacaoCreateManyClienteInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutClienteInput | NotificacaoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutClienteInput | NotificacaoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type ClienteCreateNestedManyWithoutCriadoPorInput = {
    create?: XOR<ClienteCreateWithoutCriadoPorInput, ClienteUncheckedCreateWithoutCriadoPorInput> | ClienteCreateWithoutCriadoPorInput[] | ClienteUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutCriadoPorInput | ClienteCreateOrConnectWithoutCriadoPorInput[]
    createMany?: ClienteCreateManyCriadoPorInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type OrdemDeServicoCreateNestedManyWithoutCriadoPorInput = {
    create?: XOR<OrdemDeServicoCreateWithoutCriadoPorInput, OrdemDeServicoUncheckedCreateWithoutCriadoPorInput> | OrdemDeServicoCreateWithoutCriadoPorInput[] | OrdemDeServicoUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutCriadoPorInput | OrdemDeServicoCreateOrConnectWithoutCriadoPorInput[]
    createMany?: OrdemDeServicoCreateManyCriadoPorInputEnvelope
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type OrdemDeServicoCreateNestedManyWithoutAprovadoPorInput = {
    create?: XOR<OrdemDeServicoCreateWithoutAprovadoPorInput, OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput> | OrdemDeServicoCreateWithoutAprovadoPorInput[] | OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutAprovadoPorInput | OrdemDeServicoCreateOrConnectWithoutAprovadoPorInput[]
    createMany?: OrdemDeServicoCreateManyAprovadoPorInputEnvelope
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type PecaCreateNestedManyWithoutCriadoPorInput = {
    create?: XOR<PecaCreateWithoutCriadoPorInput, PecaUncheckedCreateWithoutCriadoPorInput> | PecaCreateWithoutCriadoPorInput[] | PecaUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: PecaCreateOrConnectWithoutCriadoPorInput | PecaCreateOrConnectWithoutCriadoPorInput[]
    createMany?: PecaCreateManyCriadoPorInputEnvelope
    connect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
  }

  export type ClienteCreateNestedManyWithoutFuncionariosExecutoresInput = {
    create?: XOR<ClienteCreateWithoutFuncionariosExecutoresInput, ClienteUncheckedCreateWithoutFuncionariosExecutoresInput> | ClienteCreateWithoutFuncionariosExecutoresInput[] | ClienteUncheckedCreateWithoutFuncionariosExecutoresInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutFuncionariosExecutoresInput | ClienteCreateOrConnectWithoutFuncionariosExecutoresInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type OrdemEstoqueCreateNestedManyWithoutAprovadoPorInput = {
    create?: XOR<OrdemEstoqueCreateWithoutAprovadoPorInput, OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput> | OrdemEstoqueCreateWithoutAprovadoPorInput[] | OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput[]
    connectOrCreate?: OrdemEstoqueCreateOrConnectWithoutAprovadoPorInput | OrdemEstoqueCreateOrConnectWithoutAprovadoPorInput[]
    createMany?: OrdemEstoqueCreateManyAprovadoPorInputEnvelope
    connect?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
  }

  export type FuncionarioCreateNestedOneWithoutFuncionariosCriadosInput = {
    create?: XOR<FuncionarioCreateWithoutFuncionariosCriadosInput, FuncionarioUncheckedCreateWithoutFuncionariosCriadosInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFuncionariosCriadosInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type FuncionarioCreateNestedManyWithoutCriadoPorInput = {
    create?: XOR<FuncionarioCreateWithoutCriadoPorInput, FuncionarioUncheckedCreateWithoutCriadoPorInput> | FuncionarioCreateWithoutCriadoPorInput[] | FuncionarioUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutCriadoPorInput | FuncionarioCreateOrConnectWithoutCriadoPorInput[]
    createMany?: FuncionarioCreateManyCriadoPorInputEnvelope
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type ClienteUncheckedCreateNestedManyWithoutCriadoPorInput = {
    create?: XOR<ClienteCreateWithoutCriadoPorInput, ClienteUncheckedCreateWithoutCriadoPorInput> | ClienteCreateWithoutCriadoPorInput[] | ClienteUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutCriadoPorInput | ClienteCreateOrConnectWithoutCriadoPorInput[]
    createMany?: ClienteCreateManyCriadoPorInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type OrdemDeServicoUncheckedCreateNestedManyWithoutCriadoPorInput = {
    create?: XOR<OrdemDeServicoCreateWithoutCriadoPorInput, OrdemDeServicoUncheckedCreateWithoutCriadoPorInput> | OrdemDeServicoCreateWithoutCriadoPorInput[] | OrdemDeServicoUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutCriadoPorInput | OrdemDeServicoCreateOrConnectWithoutCriadoPorInput[]
    createMany?: OrdemDeServicoCreateManyCriadoPorInputEnvelope
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type OrdemDeServicoUncheckedCreateNestedManyWithoutAprovadoPorInput = {
    create?: XOR<OrdemDeServicoCreateWithoutAprovadoPorInput, OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput> | OrdemDeServicoCreateWithoutAprovadoPorInput[] | OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutAprovadoPorInput | OrdemDeServicoCreateOrConnectWithoutAprovadoPorInput[]
    createMany?: OrdemDeServicoCreateManyAprovadoPorInputEnvelope
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type PecaUncheckedCreateNestedManyWithoutCriadoPorInput = {
    create?: XOR<PecaCreateWithoutCriadoPorInput, PecaUncheckedCreateWithoutCriadoPorInput> | PecaCreateWithoutCriadoPorInput[] | PecaUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: PecaCreateOrConnectWithoutCriadoPorInput | PecaCreateOrConnectWithoutCriadoPorInput[]
    createMany?: PecaCreateManyCriadoPorInputEnvelope
    connect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
  }

  export type ClienteUncheckedCreateNestedManyWithoutFuncionariosExecutoresInput = {
    create?: XOR<ClienteCreateWithoutFuncionariosExecutoresInput, ClienteUncheckedCreateWithoutFuncionariosExecutoresInput> | ClienteCreateWithoutFuncionariosExecutoresInput[] | ClienteUncheckedCreateWithoutFuncionariosExecutoresInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutFuncionariosExecutoresInput | ClienteCreateOrConnectWithoutFuncionariosExecutoresInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type OrdemEstoqueUncheckedCreateNestedManyWithoutAprovadoPorInput = {
    create?: XOR<OrdemEstoqueCreateWithoutAprovadoPorInput, OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput> | OrdemEstoqueCreateWithoutAprovadoPorInput[] | OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput[]
    connectOrCreate?: OrdemEstoqueCreateOrConnectWithoutAprovadoPorInput | OrdemEstoqueCreateOrConnectWithoutAprovadoPorInput[]
    createMany?: OrdemEstoqueCreateManyAprovadoPorInputEnvelope
    connect?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
  }

  export type FuncionarioUncheckedCreateNestedManyWithoutCriadoPorInput = {
    create?: XOR<FuncionarioCreateWithoutCriadoPorInput, FuncionarioUncheckedCreateWithoutCriadoPorInput> | FuncionarioCreateWithoutCriadoPorInput[] | FuncionarioUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutCriadoPorInput | FuncionarioCreateOrConnectWithoutCriadoPorInput[]
    createMany?: FuncionarioCreateManyCriadoPorInputEnvelope
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EnumTipoFuncionarioFieldUpdateOperationsInput = {
    set?: $Enums.TipoFuncionario
  }

  export type ClienteUpdateManyWithoutCriadoPorNestedInput = {
    create?: XOR<ClienteCreateWithoutCriadoPorInput, ClienteUncheckedCreateWithoutCriadoPorInput> | ClienteCreateWithoutCriadoPorInput[] | ClienteUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutCriadoPorInput | ClienteCreateOrConnectWithoutCriadoPorInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutCriadoPorInput | ClienteUpsertWithWhereUniqueWithoutCriadoPorInput[]
    createMany?: ClienteCreateManyCriadoPorInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutCriadoPorInput | ClienteUpdateWithWhereUniqueWithoutCriadoPorInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutCriadoPorInput | ClienteUpdateManyWithWhereWithoutCriadoPorInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type OrdemDeServicoUpdateManyWithoutCriadoPorNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutCriadoPorInput, OrdemDeServicoUncheckedCreateWithoutCriadoPorInput> | OrdemDeServicoCreateWithoutCriadoPorInput[] | OrdemDeServicoUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutCriadoPorInput | OrdemDeServicoCreateOrConnectWithoutCriadoPorInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutCriadoPorInput | OrdemDeServicoUpsertWithWhereUniqueWithoutCriadoPorInput[]
    createMany?: OrdemDeServicoCreateManyCriadoPorInputEnvelope
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutCriadoPorInput | OrdemDeServicoUpdateWithWhereUniqueWithoutCriadoPorInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutCriadoPorInput | OrdemDeServicoUpdateManyWithWhereWithoutCriadoPorInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type OrdemDeServicoUpdateManyWithoutAprovadoPorNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutAprovadoPorInput, OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput> | OrdemDeServicoCreateWithoutAprovadoPorInput[] | OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutAprovadoPorInput | OrdemDeServicoCreateOrConnectWithoutAprovadoPorInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutAprovadoPorInput | OrdemDeServicoUpsertWithWhereUniqueWithoutAprovadoPorInput[]
    createMany?: OrdemDeServicoCreateManyAprovadoPorInputEnvelope
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutAprovadoPorInput | OrdemDeServicoUpdateWithWhereUniqueWithoutAprovadoPorInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutAprovadoPorInput | OrdemDeServicoUpdateManyWithWhereWithoutAprovadoPorInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type PecaUpdateManyWithoutCriadoPorNestedInput = {
    create?: XOR<PecaCreateWithoutCriadoPorInput, PecaUncheckedCreateWithoutCriadoPorInput> | PecaCreateWithoutCriadoPorInput[] | PecaUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: PecaCreateOrConnectWithoutCriadoPorInput | PecaCreateOrConnectWithoutCriadoPorInput[]
    upsert?: PecaUpsertWithWhereUniqueWithoutCriadoPorInput | PecaUpsertWithWhereUniqueWithoutCriadoPorInput[]
    createMany?: PecaCreateManyCriadoPorInputEnvelope
    set?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    disconnect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    delete?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    connect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    update?: PecaUpdateWithWhereUniqueWithoutCriadoPorInput | PecaUpdateWithWhereUniqueWithoutCriadoPorInput[]
    updateMany?: PecaUpdateManyWithWhereWithoutCriadoPorInput | PecaUpdateManyWithWhereWithoutCriadoPorInput[]
    deleteMany?: PecaScalarWhereInput | PecaScalarWhereInput[]
  }

  export type ClienteUpdateManyWithoutFuncionariosExecutoresNestedInput = {
    create?: XOR<ClienteCreateWithoutFuncionariosExecutoresInput, ClienteUncheckedCreateWithoutFuncionariosExecutoresInput> | ClienteCreateWithoutFuncionariosExecutoresInput[] | ClienteUncheckedCreateWithoutFuncionariosExecutoresInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutFuncionariosExecutoresInput | ClienteCreateOrConnectWithoutFuncionariosExecutoresInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutFuncionariosExecutoresInput | ClienteUpsertWithWhereUniqueWithoutFuncionariosExecutoresInput[]
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutFuncionariosExecutoresInput | ClienteUpdateWithWhereUniqueWithoutFuncionariosExecutoresInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutFuncionariosExecutoresInput | ClienteUpdateManyWithWhereWithoutFuncionariosExecutoresInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type OrdemEstoqueUpdateManyWithoutAprovadoPorNestedInput = {
    create?: XOR<OrdemEstoqueCreateWithoutAprovadoPorInput, OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput> | OrdemEstoqueCreateWithoutAprovadoPorInput[] | OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput[]
    connectOrCreate?: OrdemEstoqueCreateOrConnectWithoutAprovadoPorInput | OrdemEstoqueCreateOrConnectWithoutAprovadoPorInput[]
    upsert?: OrdemEstoqueUpsertWithWhereUniqueWithoutAprovadoPorInput | OrdemEstoqueUpsertWithWhereUniqueWithoutAprovadoPorInput[]
    createMany?: OrdemEstoqueCreateManyAprovadoPorInputEnvelope
    set?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
    disconnect?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
    delete?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
    connect?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
    update?: OrdemEstoqueUpdateWithWhereUniqueWithoutAprovadoPorInput | OrdemEstoqueUpdateWithWhereUniqueWithoutAprovadoPorInput[]
    updateMany?: OrdemEstoqueUpdateManyWithWhereWithoutAprovadoPorInput | OrdemEstoqueUpdateManyWithWhereWithoutAprovadoPorInput[]
    deleteMany?: OrdemEstoqueScalarWhereInput | OrdemEstoqueScalarWhereInput[]
  }

  export type FuncionarioUpdateOneWithoutFuncionariosCriadosNestedInput = {
    create?: XOR<FuncionarioCreateWithoutFuncionariosCriadosInput, FuncionarioUncheckedCreateWithoutFuncionariosCriadosInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFuncionariosCriadosInput
    upsert?: FuncionarioUpsertWithoutFuncionariosCriadosInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutFuncionariosCriadosInput, FuncionarioUpdateWithoutFuncionariosCriadosInput>, FuncionarioUncheckedUpdateWithoutFuncionariosCriadosInput>
  }

  export type FuncionarioUpdateManyWithoutCriadoPorNestedInput = {
    create?: XOR<FuncionarioCreateWithoutCriadoPorInput, FuncionarioUncheckedCreateWithoutCriadoPorInput> | FuncionarioCreateWithoutCriadoPorInput[] | FuncionarioUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutCriadoPorInput | FuncionarioCreateOrConnectWithoutCriadoPorInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutCriadoPorInput | FuncionarioUpsertWithWhereUniqueWithoutCriadoPorInput[]
    createMany?: FuncionarioCreateManyCriadoPorInputEnvelope
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutCriadoPorInput | FuncionarioUpdateWithWhereUniqueWithoutCriadoPorInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutCriadoPorInput | FuncionarioUpdateManyWithWhereWithoutCriadoPorInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type ClienteUncheckedUpdateManyWithoutCriadoPorNestedInput = {
    create?: XOR<ClienteCreateWithoutCriadoPorInput, ClienteUncheckedCreateWithoutCriadoPorInput> | ClienteCreateWithoutCriadoPorInput[] | ClienteUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutCriadoPorInput | ClienteCreateOrConnectWithoutCriadoPorInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutCriadoPorInput | ClienteUpsertWithWhereUniqueWithoutCriadoPorInput[]
    createMany?: ClienteCreateManyCriadoPorInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutCriadoPorInput | ClienteUpdateWithWhereUniqueWithoutCriadoPorInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutCriadoPorInput | ClienteUpdateManyWithWhereWithoutCriadoPorInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutCriadoPorInput, OrdemDeServicoUncheckedCreateWithoutCriadoPorInput> | OrdemDeServicoCreateWithoutCriadoPorInput[] | OrdemDeServicoUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutCriadoPorInput | OrdemDeServicoCreateOrConnectWithoutCriadoPorInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutCriadoPorInput | OrdemDeServicoUpsertWithWhereUniqueWithoutCriadoPorInput[]
    createMany?: OrdemDeServicoCreateManyCriadoPorInputEnvelope
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutCriadoPorInput | OrdemDeServicoUpdateWithWhereUniqueWithoutCriadoPorInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutCriadoPorInput | OrdemDeServicoUpdateManyWithWhereWithoutCriadoPorInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutAprovadoPorInput, OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput> | OrdemDeServicoCreateWithoutAprovadoPorInput[] | OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutAprovadoPorInput | OrdemDeServicoCreateOrConnectWithoutAprovadoPorInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutAprovadoPorInput | OrdemDeServicoUpsertWithWhereUniqueWithoutAprovadoPorInput[]
    createMany?: OrdemDeServicoCreateManyAprovadoPorInputEnvelope
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutAprovadoPorInput | OrdemDeServicoUpdateWithWhereUniqueWithoutAprovadoPorInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutAprovadoPorInput | OrdemDeServicoUpdateManyWithWhereWithoutAprovadoPorInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type PecaUncheckedUpdateManyWithoutCriadoPorNestedInput = {
    create?: XOR<PecaCreateWithoutCriadoPorInput, PecaUncheckedCreateWithoutCriadoPorInput> | PecaCreateWithoutCriadoPorInput[] | PecaUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: PecaCreateOrConnectWithoutCriadoPorInput | PecaCreateOrConnectWithoutCriadoPorInput[]
    upsert?: PecaUpsertWithWhereUniqueWithoutCriadoPorInput | PecaUpsertWithWhereUniqueWithoutCriadoPorInput[]
    createMany?: PecaCreateManyCriadoPorInputEnvelope
    set?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    disconnect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    delete?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    connect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    update?: PecaUpdateWithWhereUniqueWithoutCriadoPorInput | PecaUpdateWithWhereUniqueWithoutCriadoPorInput[]
    updateMany?: PecaUpdateManyWithWhereWithoutCriadoPorInput | PecaUpdateManyWithWhereWithoutCriadoPorInput[]
    deleteMany?: PecaScalarWhereInput | PecaScalarWhereInput[]
  }

  export type ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresNestedInput = {
    create?: XOR<ClienteCreateWithoutFuncionariosExecutoresInput, ClienteUncheckedCreateWithoutFuncionariosExecutoresInput> | ClienteCreateWithoutFuncionariosExecutoresInput[] | ClienteUncheckedCreateWithoutFuncionariosExecutoresInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutFuncionariosExecutoresInput | ClienteCreateOrConnectWithoutFuncionariosExecutoresInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutFuncionariosExecutoresInput | ClienteUpsertWithWhereUniqueWithoutFuncionariosExecutoresInput[]
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutFuncionariosExecutoresInput | ClienteUpdateWithWhereUniqueWithoutFuncionariosExecutoresInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutFuncionariosExecutoresInput | ClienteUpdateManyWithWhereWithoutFuncionariosExecutoresInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorNestedInput = {
    create?: XOR<OrdemEstoqueCreateWithoutAprovadoPorInput, OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput> | OrdemEstoqueCreateWithoutAprovadoPorInput[] | OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput[]
    connectOrCreate?: OrdemEstoqueCreateOrConnectWithoutAprovadoPorInput | OrdemEstoqueCreateOrConnectWithoutAprovadoPorInput[]
    upsert?: OrdemEstoqueUpsertWithWhereUniqueWithoutAprovadoPorInput | OrdemEstoqueUpsertWithWhereUniqueWithoutAprovadoPorInput[]
    createMany?: OrdemEstoqueCreateManyAprovadoPorInputEnvelope
    set?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
    disconnect?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
    delete?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
    connect?: OrdemEstoqueWhereUniqueInput | OrdemEstoqueWhereUniqueInput[]
    update?: OrdemEstoqueUpdateWithWhereUniqueWithoutAprovadoPorInput | OrdemEstoqueUpdateWithWhereUniqueWithoutAprovadoPorInput[]
    updateMany?: OrdemEstoqueUpdateManyWithWhereWithoutAprovadoPorInput | OrdemEstoqueUpdateManyWithWhereWithoutAprovadoPorInput[]
    deleteMany?: OrdemEstoqueScalarWhereInput | OrdemEstoqueScalarWhereInput[]
  }

  export type FuncionarioUncheckedUpdateManyWithoutCriadoPorNestedInput = {
    create?: XOR<FuncionarioCreateWithoutCriadoPorInput, FuncionarioUncheckedCreateWithoutCriadoPorInput> | FuncionarioCreateWithoutCriadoPorInput[] | FuncionarioUncheckedCreateWithoutCriadoPorInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutCriadoPorInput | FuncionarioCreateOrConnectWithoutCriadoPorInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutCriadoPorInput | FuncionarioUpsertWithWhereUniqueWithoutCriadoPorInput[]
    createMany?: FuncionarioCreateManyCriadoPorInputEnvelope
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutCriadoPorInput | FuncionarioUpdateWithWhereUniqueWithoutCriadoPorInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutCriadoPorInput | FuncionarioUpdateManyWithWhereWithoutCriadoPorInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type ClienteCreateNestedOneWithoutCarrosInput = {
    create?: XOR<ClienteCreateWithoutCarrosInput, ClienteUncheckedCreateWithoutCarrosInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutCarrosInput
    connect?: ClienteWhereUniqueInput
  }

  export type RevisaoCreateNestedManyWithoutCarroInput = {
    create?: XOR<RevisaoCreateWithoutCarroInput, RevisaoUncheckedCreateWithoutCarroInput> | RevisaoCreateWithoutCarroInput[] | RevisaoUncheckedCreateWithoutCarroInput[]
    connectOrCreate?: RevisaoCreateOrConnectWithoutCarroInput | RevisaoCreateOrConnectWithoutCarroInput[]
    createMany?: RevisaoCreateManyCarroInputEnvelope
    connect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
  }

  export type RevisaoUncheckedCreateNestedManyWithoutCarroInput = {
    create?: XOR<RevisaoCreateWithoutCarroInput, RevisaoUncheckedCreateWithoutCarroInput> | RevisaoCreateWithoutCarroInput[] | RevisaoUncheckedCreateWithoutCarroInput[]
    connectOrCreate?: RevisaoCreateOrConnectWithoutCarroInput | RevisaoCreateOrConnectWithoutCarroInput[]
    createMany?: RevisaoCreateManyCarroInputEnvelope
    connect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ClienteUpdateOneRequiredWithoutCarrosNestedInput = {
    create?: XOR<ClienteCreateWithoutCarrosInput, ClienteUncheckedCreateWithoutCarrosInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutCarrosInput
    upsert?: ClienteUpsertWithoutCarrosInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutCarrosInput, ClienteUpdateWithoutCarrosInput>, ClienteUncheckedUpdateWithoutCarrosInput>
  }

  export type RevisaoUpdateManyWithoutCarroNestedInput = {
    create?: XOR<RevisaoCreateWithoutCarroInput, RevisaoUncheckedCreateWithoutCarroInput> | RevisaoCreateWithoutCarroInput[] | RevisaoUncheckedCreateWithoutCarroInput[]
    connectOrCreate?: RevisaoCreateOrConnectWithoutCarroInput | RevisaoCreateOrConnectWithoutCarroInput[]
    upsert?: RevisaoUpsertWithWhereUniqueWithoutCarroInput | RevisaoUpsertWithWhereUniqueWithoutCarroInput[]
    createMany?: RevisaoCreateManyCarroInputEnvelope
    set?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    disconnect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    delete?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    connect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    update?: RevisaoUpdateWithWhereUniqueWithoutCarroInput | RevisaoUpdateWithWhereUniqueWithoutCarroInput[]
    updateMany?: RevisaoUpdateManyWithWhereWithoutCarroInput | RevisaoUpdateManyWithWhereWithoutCarroInput[]
    deleteMany?: RevisaoScalarWhereInput | RevisaoScalarWhereInput[]
  }

  export type RevisaoUncheckedUpdateManyWithoutCarroNestedInput = {
    create?: XOR<RevisaoCreateWithoutCarroInput, RevisaoUncheckedCreateWithoutCarroInput> | RevisaoCreateWithoutCarroInput[] | RevisaoUncheckedCreateWithoutCarroInput[]
    connectOrCreate?: RevisaoCreateOrConnectWithoutCarroInput | RevisaoCreateOrConnectWithoutCarroInput[]
    upsert?: RevisaoUpsertWithWhereUniqueWithoutCarroInput | RevisaoUpsertWithWhereUniqueWithoutCarroInput[]
    createMany?: RevisaoCreateManyCarroInputEnvelope
    set?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    disconnect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    delete?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    connect?: RevisaoWhereUniqueInput | RevisaoWhereUniqueInput[]
    update?: RevisaoUpdateWithWhereUniqueWithoutCarroInput | RevisaoUpdateWithWhereUniqueWithoutCarroInput[]
    updateMany?: RevisaoUpdateManyWithWhereWithoutCarroInput | RevisaoUpdateManyWithWhereWithoutCarroInput[]
    deleteMany?: RevisaoScalarWhereInput | RevisaoScalarWhereInput[]
  }

  export type OrdemDeServicoCreateNestedManyWithoutServicoInput = {
    create?: XOR<OrdemDeServicoCreateWithoutServicoInput, OrdemDeServicoUncheckedCreateWithoutServicoInput> | OrdemDeServicoCreateWithoutServicoInput[] | OrdemDeServicoUncheckedCreateWithoutServicoInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutServicoInput | OrdemDeServicoCreateOrConnectWithoutServicoInput[]
    createMany?: OrdemDeServicoCreateManyServicoInputEnvelope
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type PromocaoCreateNestedManyWithoutServicoInput = {
    create?: XOR<PromocaoCreateWithoutServicoInput, PromocaoUncheckedCreateWithoutServicoInput> | PromocaoCreateWithoutServicoInput[] | PromocaoUncheckedCreateWithoutServicoInput[]
    connectOrCreate?: PromocaoCreateOrConnectWithoutServicoInput | PromocaoCreateOrConnectWithoutServicoInput[]
    createMany?: PromocaoCreateManyServicoInputEnvelope
    connect?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
  }

  export type OrdemDeServicoUncheckedCreateNestedManyWithoutServicoInput = {
    create?: XOR<OrdemDeServicoCreateWithoutServicoInput, OrdemDeServicoUncheckedCreateWithoutServicoInput> | OrdemDeServicoCreateWithoutServicoInput[] | OrdemDeServicoUncheckedCreateWithoutServicoInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutServicoInput | OrdemDeServicoCreateOrConnectWithoutServicoInput[]
    createMany?: OrdemDeServicoCreateManyServicoInputEnvelope
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type PromocaoUncheckedCreateNestedManyWithoutServicoInput = {
    create?: XOR<PromocaoCreateWithoutServicoInput, PromocaoUncheckedCreateWithoutServicoInput> | PromocaoCreateWithoutServicoInput[] | PromocaoUncheckedCreateWithoutServicoInput[]
    connectOrCreate?: PromocaoCreateOrConnectWithoutServicoInput | PromocaoCreateOrConnectWithoutServicoInput[]
    createMany?: PromocaoCreateManyServicoInputEnvelope
    connect?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type OrdemDeServicoUpdateManyWithoutServicoNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutServicoInput, OrdemDeServicoUncheckedCreateWithoutServicoInput> | OrdemDeServicoCreateWithoutServicoInput[] | OrdemDeServicoUncheckedCreateWithoutServicoInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutServicoInput | OrdemDeServicoCreateOrConnectWithoutServicoInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutServicoInput | OrdemDeServicoUpsertWithWhereUniqueWithoutServicoInput[]
    createMany?: OrdemDeServicoCreateManyServicoInputEnvelope
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutServicoInput | OrdemDeServicoUpdateWithWhereUniqueWithoutServicoInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutServicoInput | OrdemDeServicoUpdateManyWithWhereWithoutServicoInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type PromocaoUpdateManyWithoutServicoNestedInput = {
    create?: XOR<PromocaoCreateWithoutServicoInput, PromocaoUncheckedCreateWithoutServicoInput> | PromocaoCreateWithoutServicoInput[] | PromocaoUncheckedCreateWithoutServicoInput[]
    connectOrCreate?: PromocaoCreateOrConnectWithoutServicoInput | PromocaoCreateOrConnectWithoutServicoInput[]
    upsert?: PromocaoUpsertWithWhereUniqueWithoutServicoInput | PromocaoUpsertWithWhereUniqueWithoutServicoInput[]
    createMany?: PromocaoCreateManyServicoInputEnvelope
    set?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
    disconnect?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
    delete?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
    connect?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
    update?: PromocaoUpdateWithWhereUniqueWithoutServicoInput | PromocaoUpdateWithWhereUniqueWithoutServicoInput[]
    updateMany?: PromocaoUpdateManyWithWhereWithoutServicoInput | PromocaoUpdateManyWithWhereWithoutServicoInput[]
    deleteMany?: PromocaoScalarWhereInput | PromocaoScalarWhereInput[]
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutServicoNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutServicoInput, OrdemDeServicoUncheckedCreateWithoutServicoInput> | OrdemDeServicoCreateWithoutServicoInput[] | OrdemDeServicoUncheckedCreateWithoutServicoInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutServicoInput | OrdemDeServicoCreateOrConnectWithoutServicoInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutServicoInput | OrdemDeServicoUpsertWithWhereUniqueWithoutServicoInput[]
    createMany?: OrdemDeServicoCreateManyServicoInputEnvelope
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutServicoInput | OrdemDeServicoUpdateWithWhereUniqueWithoutServicoInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutServicoInput | OrdemDeServicoUpdateManyWithWhereWithoutServicoInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type PromocaoUncheckedUpdateManyWithoutServicoNestedInput = {
    create?: XOR<PromocaoCreateWithoutServicoInput, PromocaoUncheckedCreateWithoutServicoInput> | PromocaoCreateWithoutServicoInput[] | PromocaoUncheckedCreateWithoutServicoInput[]
    connectOrCreate?: PromocaoCreateOrConnectWithoutServicoInput | PromocaoCreateOrConnectWithoutServicoInput[]
    upsert?: PromocaoUpsertWithWhereUniqueWithoutServicoInput | PromocaoUpsertWithWhereUniqueWithoutServicoInput[]
    createMany?: PromocaoCreateManyServicoInputEnvelope
    set?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
    disconnect?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
    delete?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
    connect?: PromocaoWhereUniqueInput | PromocaoWhereUniqueInput[]
    update?: PromocaoUpdateWithWhereUniqueWithoutServicoInput | PromocaoUpdateWithWhereUniqueWithoutServicoInput[]
    updateMany?: PromocaoUpdateManyWithWhereWithoutServicoInput | PromocaoUpdateManyWithWhereWithoutServicoInput[]
    deleteMany?: PromocaoScalarWhereInput | PromocaoScalarWhereInput[]
  }

  export type FuncionarioCreateNestedOneWithoutPecasCriadasInput = {
    create?: XOR<FuncionarioCreateWithoutPecasCriadasInput, FuncionarioUncheckedCreateWithoutPecasCriadasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutPecasCriadasInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type OrdemDeServicoCreateNestedManyWithoutPecasUsadasInput = {
    create?: XOR<OrdemDeServicoCreateWithoutPecasUsadasInput, OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput> | OrdemDeServicoCreateWithoutPecasUsadasInput[] | OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutPecasUsadasInput | OrdemDeServicoCreateOrConnectWithoutPecasUsadasInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type OrdemDeServicoUncheckedCreateNestedManyWithoutPecasUsadasInput = {
    create?: XOR<OrdemDeServicoCreateWithoutPecasUsadasInput, OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput> | OrdemDeServicoCreateWithoutPecasUsadasInput[] | OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutPecasUsadasInput | OrdemDeServicoCreateOrConnectWithoutPecasUsadasInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
  }

  export type FuncionarioUpdateOneRequiredWithoutPecasCriadasNestedInput = {
    create?: XOR<FuncionarioCreateWithoutPecasCriadasInput, FuncionarioUncheckedCreateWithoutPecasCriadasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutPecasCriadasInput
    upsert?: FuncionarioUpsertWithoutPecasCriadasInput
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutPecasCriadasInput, FuncionarioUpdateWithoutPecasCriadasInput>, FuncionarioUncheckedUpdateWithoutPecasCriadasInput>
  }

  export type OrdemDeServicoUpdateManyWithoutPecasUsadasNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutPecasUsadasInput, OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput> | OrdemDeServicoCreateWithoutPecasUsadasInput[] | OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutPecasUsadasInput | OrdemDeServicoCreateOrConnectWithoutPecasUsadasInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutPecasUsadasInput | OrdemDeServicoUpsertWithWhereUniqueWithoutPecasUsadasInput[]
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutPecasUsadasInput | OrdemDeServicoUpdateWithWhereUniqueWithoutPecasUsadasInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutPecasUsadasInput | OrdemDeServicoUpdateManyWithWhereWithoutPecasUsadasInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutPecasUsadasNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutPecasUsadasInput, OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput> | OrdemDeServicoCreateWithoutPecasUsadasInput[] | OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput[]
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutPecasUsadasInput | OrdemDeServicoCreateOrConnectWithoutPecasUsadasInput[]
    upsert?: OrdemDeServicoUpsertWithWhereUniqueWithoutPecasUsadasInput | OrdemDeServicoUpsertWithWhereUniqueWithoutPecasUsadasInput[]
    set?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    disconnect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    delete?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    connect?: OrdemDeServicoWhereUniqueInput | OrdemDeServicoWhereUniqueInput[]
    update?: OrdemDeServicoUpdateWithWhereUniqueWithoutPecasUsadasInput | OrdemDeServicoUpdateWithWhereUniqueWithoutPecasUsadasInput[]
    updateMany?: OrdemDeServicoUpdateManyWithWhereWithoutPecasUsadasInput | OrdemDeServicoUpdateManyWithWhereWithoutPecasUsadasInput[]
    deleteMany?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
  }

  export type ClienteCreateNestedOneWithoutOrdensDeServicoInput = {
    create?: XOR<ClienteCreateWithoutOrdensDeServicoInput, ClienteUncheckedCreateWithoutOrdensDeServicoInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutOrdensDeServicoInput
    connect?: ClienteWhereUniqueInput
  }

  export type FuncionarioCreateNestedOneWithoutOrdensCriadasInput = {
    create?: XOR<FuncionarioCreateWithoutOrdensCriadasInput, FuncionarioUncheckedCreateWithoutOrdensCriadasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutOrdensCriadasInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type FuncionarioCreateNestedOneWithoutOrdensAprovadasInput = {
    create?: XOR<FuncionarioCreateWithoutOrdensAprovadasInput, FuncionarioUncheckedCreateWithoutOrdensAprovadasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutOrdensAprovadasInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type PecaCreateNestedManyWithoutOrdensDeServicoInput = {
    create?: XOR<PecaCreateWithoutOrdensDeServicoInput, PecaUncheckedCreateWithoutOrdensDeServicoInput> | PecaCreateWithoutOrdensDeServicoInput[] | PecaUncheckedCreateWithoutOrdensDeServicoInput[]
    connectOrCreate?: PecaCreateOrConnectWithoutOrdensDeServicoInput | PecaCreateOrConnectWithoutOrdensDeServicoInput[]
    connect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
  }

  export type OrdemServicoPagamentoCreateNestedManyWithoutOrdemDeServicoInput = {
    create?: XOR<OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput, OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput> | OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput[] | OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput[]
    connectOrCreate?: OrdemServicoPagamentoCreateOrConnectWithoutOrdemDeServicoInput | OrdemServicoPagamentoCreateOrConnectWithoutOrdemDeServicoInput[]
    createMany?: OrdemServicoPagamentoCreateManyOrdemDeServicoInputEnvelope
    connect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
  }

  export type ServicoCreateNestedOneWithoutOrdensDeServicoInput = {
    create?: XOR<ServicoCreateWithoutOrdensDeServicoInput, ServicoUncheckedCreateWithoutOrdensDeServicoInput>
    connectOrCreate?: ServicoCreateOrConnectWithoutOrdensDeServicoInput
    connect?: ServicoWhereUniqueInput
  }

  export type OrdemEstoqueCreateNestedOneWithoutOrdemDeServicoInput = {
    create?: XOR<OrdemEstoqueCreateWithoutOrdemDeServicoInput, OrdemEstoqueUncheckedCreateWithoutOrdemDeServicoInput>
    connectOrCreate?: OrdemEstoqueCreateOrConnectWithoutOrdemDeServicoInput
    connect?: OrdemEstoqueWhereUniqueInput
  }

  export type NotificacaoCreateNestedManyWithoutOrdemServicoInput = {
    create?: XOR<NotificacaoCreateWithoutOrdemServicoInput, NotificacaoUncheckedCreateWithoutOrdemServicoInput> | NotificacaoCreateWithoutOrdemServicoInput[] | NotificacaoUncheckedCreateWithoutOrdemServicoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutOrdemServicoInput | NotificacaoCreateOrConnectWithoutOrdemServicoInput[]
    createMany?: NotificacaoCreateManyOrdemServicoInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type PecaUncheckedCreateNestedManyWithoutOrdensDeServicoInput = {
    create?: XOR<PecaCreateWithoutOrdensDeServicoInput, PecaUncheckedCreateWithoutOrdensDeServicoInput> | PecaCreateWithoutOrdensDeServicoInput[] | PecaUncheckedCreateWithoutOrdensDeServicoInput[]
    connectOrCreate?: PecaCreateOrConnectWithoutOrdensDeServicoInput | PecaCreateOrConnectWithoutOrdensDeServicoInput[]
    connect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
  }

  export type OrdemServicoPagamentoUncheckedCreateNestedManyWithoutOrdemDeServicoInput = {
    create?: XOR<OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput, OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput> | OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput[] | OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput[]
    connectOrCreate?: OrdemServicoPagamentoCreateOrConnectWithoutOrdemDeServicoInput | OrdemServicoPagamentoCreateOrConnectWithoutOrdemDeServicoInput[]
    createMany?: OrdemServicoPagamentoCreateManyOrdemDeServicoInputEnvelope
    connect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
  }

  export type OrdemEstoqueUncheckedCreateNestedOneWithoutOrdemDeServicoInput = {
    create?: XOR<OrdemEstoqueCreateWithoutOrdemDeServicoInput, OrdemEstoqueUncheckedCreateWithoutOrdemDeServicoInput>
    connectOrCreate?: OrdemEstoqueCreateOrConnectWithoutOrdemDeServicoInput
    connect?: OrdemEstoqueWhereUniqueInput
  }

  export type NotificacaoUncheckedCreateNestedManyWithoutOrdemServicoInput = {
    create?: XOR<NotificacaoCreateWithoutOrdemServicoInput, NotificacaoUncheckedCreateWithoutOrdemServicoInput> | NotificacaoCreateWithoutOrdemServicoInput[] | NotificacaoUncheckedCreateWithoutOrdemServicoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutOrdemServicoInput | NotificacaoCreateOrConnectWithoutOrdemServicoInput[]
    createMany?: NotificacaoCreateManyOrdemServicoInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumStatusOrdemFieldUpdateOperationsInput = {
    set?: $Enums.StatusOrdem
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ClienteUpdateOneRequiredWithoutOrdensDeServicoNestedInput = {
    create?: XOR<ClienteCreateWithoutOrdensDeServicoInput, ClienteUncheckedCreateWithoutOrdensDeServicoInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutOrdensDeServicoInput
    upsert?: ClienteUpsertWithoutOrdensDeServicoInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutOrdensDeServicoInput, ClienteUpdateWithoutOrdensDeServicoInput>, ClienteUncheckedUpdateWithoutOrdensDeServicoInput>
  }

  export type FuncionarioUpdateOneRequiredWithoutOrdensCriadasNestedInput = {
    create?: XOR<FuncionarioCreateWithoutOrdensCriadasInput, FuncionarioUncheckedCreateWithoutOrdensCriadasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutOrdensCriadasInput
    upsert?: FuncionarioUpsertWithoutOrdensCriadasInput
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutOrdensCriadasInput, FuncionarioUpdateWithoutOrdensCriadasInput>, FuncionarioUncheckedUpdateWithoutOrdensCriadasInput>
  }

  export type FuncionarioUpdateOneWithoutOrdensAprovadasNestedInput = {
    create?: XOR<FuncionarioCreateWithoutOrdensAprovadasInput, FuncionarioUncheckedCreateWithoutOrdensAprovadasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutOrdensAprovadasInput
    upsert?: FuncionarioUpsertWithoutOrdensAprovadasInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutOrdensAprovadasInput, FuncionarioUpdateWithoutOrdensAprovadasInput>, FuncionarioUncheckedUpdateWithoutOrdensAprovadasInput>
  }

  export type PecaUpdateManyWithoutOrdensDeServicoNestedInput = {
    create?: XOR<PecaCreateWithoutOrdensDeServicoInput, PecaUncheckedCreateWithoutOrdensDeServicoInput> | PecaCreateWithoutOrdensDeServicoInput[] | PecaUncheckedCreateWithoutOrdensDeServicoInput[]
    connectOrCreate?: PecaCreateOrConnectWithoutOrdensDeServicoInput | PecaCreateOrConnectWithoutOrdensDeServicoInput[]
    upsert?: PecaUpsertWithWhereUniqueWithoutOrdensDeServicoInput | PecaUpsertWithWhereUniqueWithoutOrdensDeServicoInput[]
    set?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    disconnect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    delete?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    connect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    update?: PecaUpdateWithWhereUniqueWithoutOrdensDeServicoInput | PecaUpdateWithWhereUniqueWithoutOrdensDeServicoInput[]
    updateMany?: PecaUpdateManyWithWhereWithoutOrdensDeServicoInput | PecaUpdateManyWithWhereWithoutOrdensDeServicoInput[]
    deleteMany?: PecaScalarWhereInput | PecaScalarWhereInput[]
  }

  export type OrdemServicoPagamentoUpdateManyWithoutOrdemDeServicoNestedInput = {
    create?: XOR<OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput, OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput> | OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput[] | OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput[]
    connectOrCreate?: OrdemServicoPagamentoCreateOrConnectWithoutOrdemDeServicoInput | OrdemServicoPagamentoCreateOrConnectWithoutOrdemDeServicoInput[]
    upsert?: OrdemServicoPagamentoUpsertWithWhereUniqueWithoutOrdemDeServicoInput | OrdemServicoPagamentoUpsertWithWhereUniqueWithoutOrdemDeServicoInput[]
    createMany?: OrdemServicoPagamentoCreateManyOrdemDeServicoInputEnvelope
    set?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    disconnect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    delete?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    connect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    update?: OrdemServicoPagamentoUpdateWithWhereUniqueWithoutOrdemDeServicoInput | OrdemServicoPagamentoUpdateWithWhereUniqueWithoutOrdemDeServicoInput[]
    updateMany?: OrdemServicoPagamentoUpdateManyWithWhereWithoutOrdemDeServicoInput | OrdemServicoPagamentoUpdateManyWithWhereWithoutOrdemDeServicoInput[]
    deleteMany?: OrdemServicoPagamentoScalarWhereInput | OrdemServicoPagamentoScalarWhereInput[]
  }

  export type ServicoUpdateOneWithoutOrdensDeServicoNestedInput = {
    create?: XOR<ServicoCreateWithoutOrdensDeServicoInput, ServicoUncheckedCreateWithoutOrdensDeServicoInput>
    connectOrCreate?: ServicoCreateOrConnectWithoutOrdensDeServicoInput
    upsert?: ServicoUpsertWithoutOrdensDeServicoInput
    disconnect?: ServicoWhereInput | boolean
    delete?: ServicoWhereInput | boolean
    connect?: ServicoWhereUniqueInput
    update?: XOR<XOR<ServicoUpdateToOneWithWhereWithoutOrdensDeServicoInput, ServicoUpdateWithoutOrdensDeServicoInput>, ServicoUncheckedUpdateWithoutOrdensDeServicoInput>
  }

  export type OrdemEstoqueUpdateOneWithoutOrdemDeServicoNestedInput = {
    create?: XOR<OrdemEstoqueCreateWithoutOrdemDeServicoInput, OrdemEstoqueUncheckedCreateWithoutOrdemDeServicoInput>
    connectOrCreate?: OrdemEstoqueCreateOrConnectWithoutOrdemDeServicoInput
    upsert?: OrdemEstoqueUpsertWithoutOrdemDeServicoInput
    disconnect?: OrdemEstoqueWhereInput | boolean
    delete?: OrdemEstoqueWhereInput | boolean
    connect?: OrdemEstoqueWhereUniqueInput
    update?: XOR<XOR<OrdemEstoqueUpdateToOneWithWhereWithoutOrdemDeServicoInput, OrdemEstoqueUpdateWithoutOrdemDeServicoInput>, OrdemEstoqueUncheckedUpdateWithoutOrdemDeServicoInput>
  }

  export type NotificacaoUpdateManyWithoutOrdemServicoNestedInput = {
    create?: XOR<NotificacaoCreateWithoutOrdemServicoInput, NotificacaoUncheckedCreateWithoutOrdemServicoInput> | NotificacaoCreateWithoutOrdemServicoInput[] | NotificacaoUncheckedCreateWithoutOrdemServicoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutOrdemServicoInput | NotificacaoCreateOrConnectWithoutOrdemServicoInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutOrdemServicoInput | NotificacaoUpsertWithWhereUniqueWithoutOrdemServicoInput[]
    createMany?: NotificacaoCreateManyOrdemServicoInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutOrdemServicoInput | NotificacaoUpdateWithWhereUniqueWithoutOrdemServicoInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutOrdemServicoInput | NotificacaoUpdateManyWithWhereWithoutOrdemServicoInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type PecaUncheckedUpdateManyWithoutOrdensDeServicoNestedInput = {
    create?: XOR<PecaCreateWithoutOrdensDeServicoInput, PecaUncheckedCreateWithoutOrdensDeServicoInput> | PecaCreateWithoutOrdensDeServicoInput[] | PecaUncheckedCreateWithoutOrdensDeServicoInput[]
    connectOrCreate?: PecaCreateOrConnectWithoutOrdensDeServicoInput | PecaCreateOrConnectWithoutOrdensDeServicoInput[]
    upsert?: PecaUpsertWithWhereUniqueWithoutOrdensDeServicoInput | PecaUpsertWithWhereUniqueWithoutOrdensDeServicoInput[]
    set?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    disconnect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    delete?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    connect?: PecaWhereUniqueInput | PecaWhereUniqueInput[]
    update?: PecaUpdateWithWhereUniqueWithoutOrdensDeServicoInput | PecaUpdateWithWhereUniqueWithoutOrdensDeServicoInput[]
    updateMany?: PecaUpdateManyWithWhereWithoutOrdensDeServicoInput | PecaUpdateManyWithWhereWithoutOrdensDeServicoInput[]
    deleteMany?: PecaScalarWhereInput | PecaScalarWhereInput[]
  }

  export type OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoNestedInput = {
    create?: XOR<OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput, OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput> | OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput[] | OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput[]
    connectOrCreate?: OrdemServicoPagamentoCreateOrConnectWithoutOrdemDeServicoInput | OrdemServicoPagamentoCreateOrConnectWithoutOrdemDeServicoInput[]
    upsert?: OrdemServicoPagamentoUpsertWithWhereUniqueWithoutOrdemDeServicoInput | OrdemServicoPagamentoUpsertWithWhereUniqueWithoutOrdemDeServicoInput[]
    createMany?: OrdemServicoPagamentoCreateManyOrdemDeServicoInputEnvelope
    set?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    disconnect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    delete?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    connect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    update?: OrdemServicoPagamentoUpdateWithWhereUniqueWithoutOrdemDeServicoInput | OrdemServicoPagamentoUpdateWithWhereUniqueWithoutOrdemDeServicoInput[]
    updateMany?: OrdemServicoPagamentoUpdateManyWithWhereWithoutOrdemDeServicoInput | OrdemServicoPagamentoUpdateManyWithWhereWithoutOrdemDeServicoInput[]
    deleteMany?: OrdemServicoPagamentoScalarWhereInput | OrdemServicoPagamentoScalarWhereInput[]
  }

  export type OrdemEstoqueUncheckedUpdateOneWithoutOrdemDeServicoNestedInput = {
    create?: XOR<OrdemEstoqueCreateWithoutOrdemDeServicoInput, OrdemEstoqueUncheckedCreateWithoutOrdemDeServicoInput>
    connectOrCreate?: OrdemEstoqueCreateOrConnectWithoutOrdemDeServicoInput
    upsert?: OrdemEstoqueUpsertWithoutOrdemDeServicoInput
    disconnect?: OrdemEstoqueWhereInput | boolean
    delete?: OrdemEstoqueWhereInput | boolean
    connect?: OrdemEstoqueWhereUniqueInput
    update?: XOR<XOR<OrdemEstoqueUpdateToOneWithWhereWithoutOrdemDeServicoInput, OrdemEstoqueUpdateWithoutOrdemDeServicoInput>, OrdemEstoqueUncheckedUpdateWithoutOrdemDeServicoInput>
  }

  export type NotificacaoUncheckedUpdateManyWithoutOrdemServicoNestedInput = {
    create?: XOR<NotificacaoCreateWithoutOrdemServicoInput, NotificacaoUncheckedCreateWithoutOrdemServicoInput> | NotificacaoCreateWithoutOrdemServicoInput[] | NotificacaoUncheckedCreateWithoutOrdemServicoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutOrdemServicoInput | NotificacaoCreateOrConnectWithoutOrdemServicoInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutOrdemServicoInput | NotificacaoUpsertWithWhereUniqueWithoutOrdemServicoInput[]
    createMany?: NotificacaoCreateManyOrdemServicoInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutOrdemServicoInput | NotificacaoUpdateWithWhereUniqueWithoutOrdemServicoInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutOrdemServicoInput | NotificacaoUpdateManyWithWhereWithoutOrdemServicoInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type OrdemDeServicoCreateNestedOneWithoutOrdemDeEstoqueInput = {
    create?: XOR<OrdemDeServicoCreateWithoutOrdemDeEstoqueInput, OrdemDeServicoUncheckedCreateWithoutOrdemDeEstoqueInput>
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutOrdemDeEstoqueInput
    connect?: OrdemDeServicoWhereUniqueInput
  }

  export type FuncionarioCreateNestedOneWithoutOrdensDeEstoqueInput = {
    create?: XOR<FuncionarioCreateWithoutOrdensDeEstoqueInput, FuncionarioUncheckedCreateWithoutOrdensDeEstoqueInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutOrdensDeEstoqueInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type OrdemDeServicoUpdateOneWithoutOrdemDeEstoqueNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutOrdemDeEstoqueInput, OrdemDeServicoUncheckedCreateWithoutOrdemDeEstoqueInput>
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutOrdemDeEstoqueInput
    upsert?: OrdemDeServicoUpsertWithoutOrdemDeEstoqueInput
    disconnect?: OrdemDeServicoWhereInput | boolean
    delete?: OrdemDeServicoWhereInput | boolean
    connect?: OrdemDeServicoWhereUniqueInput
    update?: XOR<XOR<OrdemDeServicoUpdateToOneWithWhereWithoutOrdemDeEstoqueInput, OrdemDeServicoUpdateWithoutOrdemDeEstoqueInput>, OrdemDeServicoUncheckedUpdateWithoutOrdemDeEstoqueInput>
  }

  export type FuncionarioUpdateOneWithoutOrdensDeEstoqueNestedInput = {
    create?: XOR<FuncionarioCreateWithoutOrdensDeEstoqueInput, FuncionarioUncheckedCreateWithoutOrdensDeEstoqueInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutOrdensDeEstoqueInput
    upsert?: FuncionarioUpsertWithoutOrdensDeEstoqueInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutOrdensDeEstoqueInput, FuncionarioUpdateWithoutOrdensDeEstoqueInput>, FuncionarioUncheckedUpdateWithoutOrdensDeEstoqueInput>
  }

  export type CarroCreateNestedOneWithoutRevisoesInput = {
    create?: XOR<CarroCreateWithoutRevisoesInput, CarroUncheckedCreateWithoutRevisoesInput>
    connectOrCreate?: CarroCreateOrConnectWithoutRevisoesInput
    connect?: CarroWhereUniqueInput
  }

  export type ClienteCreateNestedOneWithoutRevisoesInput = {
    create?: XOR<ClienteCreateWithoutRevisoesInput, ClienteUncheckedCreateWithoutRevisoesInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutRevisoesInput
    connect?: ClienteWhereUniqueInput
  }

  export type NotificacaoCreateNestedManyWithoutRevisaoInput = {
    create?: XOR<NotificacaoCreateWithoutRevisaoInput, NotificacaoUncheckedCreateWithoutRevisaoInput> | NotificacaoCreateWithoutRevisaoInput[] | NotificacaoUncheckedCreateWithoutRevisaoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutRevisaoInput | NotificacaoCreateOrConnectWithoutRevisaoInput[]
    createMany?: NotificacaoCreateManyRevisaoInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type NotificacaoUncheckedCreateNestedManyWithoutRevisaoInput = {
    create?: XOR<NotificacaoCreateWithoutRevisaoInput, NotificacaoUncheckedCreateWithoutRevisaoInput> | NotificacaoCreateWithoutRevisaoInput[] | NotificacaoUncheckedCreateWithoutRevisaoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutRevisaoInput | NotificacaoCreateOrConnectWithoutRevisaoInput[]
    createMany?: NotificacaoCreateManyRevisaoInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type CarroUpdateOneRequiredWithoutRevisoesNestedInput = {
    create?: XOR<CarroCreateWithoutRevisoesInput, CarroUncheckedCreateWithoutRevisoesInput>
    connectOrCreate?: CarroCreateOrConnectWithoutRevisoesInput
    upsert?: CarroUpsertWithoutRevisoesInput
    connect?: CarroWhereUniqueInput
    update?: XOR<XOR<CarroUpdateToOneWithWhereWithoutRevisoesInput, CarroUpdateWithoutRevisoesInput>, CarroUncheckedUpdateWithoutRevisoesInput>
  }

  export type ClienteUpdateOneWithoutRevisoesNestedInput = {
    create?: XOR<ClienteCreateWithoutRevisoesInput, ClienteUncheckedCreateWithoutRevisoesInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutRevisoesInput
    upsert?: ClienteUpsertWithoutRevisoesInput
    disconnect?: ClienteWhereInput | boolean
    delete?: ClienteWhereInput | boolean
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutRevisoesInput, ClienteUpdateWithoutRevisoesInput>, ClienteUncheckedUpdateWithoutRevisoesInput>
  }

  export type NotificacaoUpdateManyWithoutRevisaoNestedInput = {
    create?: XOR<NotificacaoCreateWithoutRevisaoInput, NotificacaoUncheckedCreateWithoutRevisaoInput> | NotificacaoCreateWithoutRevisaoInput[] | NotificacaoUncheckedCreateWithoutRevisaoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutRevisaoInput | NotificacaoCreateOrConnectWithoutRevisaoInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutRevisaoInput | NotificacaoUpsertWithWhereUniqueWithoutRevisaoInput[]
    createMany?: NotificacaoCreateManyRevisaoInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutRevisaoInput | NotificacaoUpdateWithWhereUniqueWithoutRevisaoInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutRevisaoInput | NotificacaoUpdateManyWithWhereWithoutRevisaoInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type NotificacaoUncheckedUpdateManyWithoutRevisaoNestedInput = {
    create?: XOR<NotificacaoCreateWithoutRevisaoInput, NotificacaoUncheckedCreateWithoutRevisaoInput> | NotificacaoCreateWithoutRevisaoInput[] | NotificacaoUncheckedCreateWithoutRevisaoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutRevisaoInput | NotificacaoCreateOrConnectWithoutRevisaoInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutRevisaoInput | NotificacaoUpsertWithWhereUniqueWithoutRevisaoInput[]
    createMany?: NotificacaoCreateManyRevisaoInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutRevisaoInput | NotificacaoUpdateWithWhereUniqueWithoutRevisaoInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutRevisaoInput | NotificacaoUpdateManyWithWhereWithoutRevisaoInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type OrdemServicoPagamentoCreateNestedManyWithoutPagamentoInput = {
    create?: XOR<OrdemServicoPagamentoCreateWithoutPagamentoInput, OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput> | OrdemServicoPagamentoCreateWithoutPagamentoInput[] | OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput[]
    connectOrCreate?: OrdemServicoPagamentoCreateOrConnectWithoutPagamentoInput | OrdemServicoPagamentoCreateOrConnectWithoutPagamentoInput[]
    createMany?: OrdemServicoPagamentoCreateManyPagamentoInputEnvelope
    connect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
  }

  export type OrdemServicoPagamentoUncheckedCreateNestedManyWithoutPagamentoInput = {
    create?: XOR<OrdemServicoPagamentoCreateWithoutPagamentoInput, OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput> | OrdemServicoPagamentoCreateWithoutPagamentoInput[] | OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput[]
    connectOrCreate?: OrdemServicoPagamentoCreateOrConnectWithoutPagamentoInput | OrdemServicoPagamentoCreateOrConnectWithoutPagamentoInput[]
    createMany?: OrdemServicoPagamentoCreateManyPagamentoInputEnvelope
    connect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
  }

  export type EnumFormaPagamentoFieldUpdateOperationsInput = {
    set?: $Enums.FormaPagamento
  }

  export type OrdemServicoPagamentoUpdateManyWithoutPagamentoNestedInput = {
    create?: XOR<OrdemServicoPagamentoCreateWithoutPagamentoInput, OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput> | OrdemServicoPagamentoCreateWithoutPagamentoInput[] | OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput[]
    connectOrCreate?: OrdemServicoPagamentoCreateOrConnectWithoutPagamentoInput | OrdemServicoPagamentoCreateOrConnectWithoutPagamentoInput[]
    upsert?: OrdemServicoPagamentoUpsertWithWhereUniqueWithoutPagamentoInput | OrdemServicoPagamentoUpsertWithWhereUniqueWithoutPagamentoInput[]
    createMany?: OrdemServicoPagamentoCreateManyPagamentoInputEnvelope
    set?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    disconnect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    delete?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    connect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    update?: OrdemServicoPagamentoUpdateWithWhereUniqueWithoutPagamentoInput | OrdemServicoPagamentoUpdateWithWhereUniqueWithoutPagamentoInput[]
    updateMany?: OrdemServicoPagamentoUpdateManyWithWhereWithoutPagamentoInput | OrdemServicoPagamentoUpdateManyWithWhereWithoutPagamentoInput[]
    deleteMany?: OrdemServicoPagamentoScalarWhereInput | OrdemServicoPagamentoScalarWhereInput[]
  }

  export type OrdemServicoPagamentoUncheckedUpdateManyWithoutPagamentoNestedInput = {
    create?: XOR<OrdemServicoPagamentoCreateWithoutPagamentoInput, OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput> | OrdemServicoPagamentoCreateWithoutPagamentoInput[] | OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput[]
    connectOrCreate?: OrdemServicoPagamentoCreateOrConnectWithoutPagamentoInput | OrdemServicoPagamentoCreateOrConnectWithoutPagamentoInput[]
    upsert?: OrdemServicoPagamentoUpsertWithWhereUniqueWithoutPagamentoInput | OrdemServicoPagamentoUpsertWithWhereUniqueWithoutPagamentoInput[]
    createMany?: OrdemServicoPagamentoCreateManyPagamentoInputEnvelope
    set?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    disconnect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    delete?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    connect?: OrdemServicoPagamentoWhereUniqueInput | OrdemServicoPagamentoWhereUniqueInput[]
    update?: OrdemServicoPagamentoUpdateWithWhereUniqueWithoutPagamentoInput | OrdemServicoPagamentoUpdateWithWhereUniqueWithoutPagamentoInput[]
    updateMany?: OrdemServicoPagamentoUpdateManyWithWhereWithoutPagamentoInput | OrdemServicoPagamentoUpdateManyWithWhereWithoutPagamentoInput[]
    deleteMany?: OrdemServicoPagamentoScalarWhereInput | OrdemServicoPagamentoScalarWhereInput[]
  }

  export type OrdemDeServicoCreateNestedOneWithoutPagamentosInput = {
    create?: XOR<OrdemDeServicoCreateWithoutPagamentosInput, OrdemDeServicoUncheckedCreateWithoutPagamentosInput>
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutPagamentosInput
    connect?: OrdemDeServicoWhereUniqueInput
  }

  export type PagamentoCreateNestedOneWithoutOrdensInput = {
    create?: XOR<PagamentoCreateWithoutOrdensInput, PagamentoUncheckedCreateWithoutOrdensInput>
    connectOrCreate?: PagamentoCreateOrConnectWithoutOrdensInput
    connect?: PagamentoWhereUniqueInput
  }

  export type OrdemDeServicoUpdateOneRequiredWithoutPagamentosNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutPagamentosInput, OrdemDeServicoUncheckedCreateWithoutPagamentosInput>
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutPagamentosInput
    upsert?: OrdemDeServicoUpsertWithoutPagamentosInput
    connect?: OrdemDeServicoWhereUniqueInput
    update?: XOR<XOR<OrdemDeServicoUpdateToOneWithWhereWithoutPagamentosInput, OrdemDeServicoUpdateWithoutPagamentosInput>, OrdemDeServicoUncheckedUpdateWithoutPagamentosInput>
  }

  export type PagamentoUpdateOneRequiredWithoutOrdensNestedInput = {
    create?: XOR<PagamentoCreateWithoutOrdensInput, PagamentoUncheckedCreateWithoutOrdensInput>
    connectOrCreate?: PagamentoCreateOrConnectWithoutOrdensInput
    upsert?: PagamentoUpsertWithoutOrdensInput
    connect?: PagamentoWhereUniqueInput
    update?: XOR<XOR<PagamentoUpdateToOneWithWhereWithoutOrdensInput, PagamentoUpdateWithoutOrdensInput>, PagamentoUncheckedUpdateWithoutOrdensInput>
  }

  export type ClienteCreateNestedOneWithoutNotificacoesInput = {
    create?: XOR<ClienteCreateWithoutNotificacoesInput, ClienteUncheckedCreateWithoutNotificacoesInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutNotificacoesInput
    connect?: ClienteWhereUniqueInput
  }

  export type PromocaoCreateNestedOneWithoutNotificacoesInput = {
    create?: XOR<PromocaoCreateWithoutNotificacoesInput, PromocaoUncheckedCreateWithoutNotificacoesInput>
    connectOrCreate?: PromocaoCreateOrConnectWithoutNotificacoesInput
    connect?: PromocaoWhereUniqueInput
  }

  export type RevisaoCreateNestedOneWithoutNotificacaoInput = {
    create?: XOR<RevisaoCreateWithoutNotificacaoInput, RevisaoUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: RevisaoCreateOrConnectWithoutNotificacaoInput
    connect?: RevisaoWhereUniqueInput
  }

  export type OrdemDeServicoCreateNestedOneWithoutNotificacaoInput = {
    create?: XOR<OrdemDeServicoCreateWithoutNotificacaoInput, OrdemDeServicoUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutNotificacaoInput
    connect?: OrdemDeServicoWhereUniqueInput
  }

  export type EnumTipoNotificacaoFieldUpdateOperationsInput = {
    set?: $Enums.TipoNotificacao
  }

  export type ClienteUpdateOneRequiredWithoutNotificacoesNestedInput = {
    create?: XOR<ClienteCreateWithoutNotificacoesInput, ClienteUncheckedCreateWithoutNotificacoesInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutNotificacoesInput
    upsert?: ClienteUpsertWithoutNotificacoesInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutNotificacoesInput, ClienteUpdateWithoutNotificacoesInput>, ClienteUncheckedUpdateWithoutNotificacoesInput>
  }

  export type PromocaoUpdateOneWithoutNotificacoesNestedInput = {
    create?: XOR<PromocaoCreateWithoutNotificacoesInput, PromocaoUncheckedCreateWithoutNotificacoesInput>
    connectOrCreate?: PromocaoCreateOrConnectWithoutNotificacoesInput
    upsert?: PromocaoUpsertWithoutNotificacoesInput
    disconnect?: PromocaoWhereInput | boolean
    delete?: PromocaoWhereInput | boolean
    connect?: PromocaoWhereUniqueInput
    update?: XOR<XOR<PromocaoUpdateToOneWithWhereWithoutNotificacoesInput, PromocaoUpdateWithoutNotificacoesInput>, PromocaoUncheckedUpdateWithoutNotificacoesInput>
  }

  export type RevisaoUpdateOneWithoutNotificacaoNestedInput = {
    create?: XOR<RevisaoCreateWithoutNotificacaoInput, RevisaoUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: RevisaoCreateOrConnectWithoutNotificacaoInput
    upsert?: RevisaoUpsertWithoutNotificacaoInput
    disconnect?: RevisaoWhereInput | boolean
    delete?: RevisaoWhereInput | boolean
    connect?: RevisaoWhereUniqueInput
    update?: XOR<XOR<RevisaoUpdateToOneWithWhereWithoutNotificacaoInput, RevisaoUpdateWithoutNotificacaoInput>, RevisaoUncheckedUpdateWithoutNotificacaoInput>
  }

  export type OrdemDeServicoUpdateOneWithoutNotificacaoNestedInput = {
    create?: XOR<OrdemDeServicoCreateWithoutNotificacaoInput, OrdemDeServicoUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: OrdemDeServicoCreateOrConnectWithoutNotificacaoInput
    upsert?: OrdemDeServicoUpsertWithoutNotificacaoInput
    disconnect?: OrdemDeServicoWhereInput | boolean
    delete?: OrdemDeServicoWhereInput | boolean
    connect?: OrdemDeServicoWhereUniqueInput
    update?: XOR<XOR<OrdemDeServicoUpdateToOneWithWhereWithoutNotificacaoInput, OrdemDeServicoUpdateWithoutNotificacaoInput>, OrdemDeServicoUncheckedUpdateWithoutNotificacaoInput>
  }

  export type ServicoCreateNestedOneWithoutPromocaoInput = {
    create?: XOR<ServicoCreateWithoutPromocaoInput, ServicoUncheckedCreateWithoutPromocaoInput>
    connectOrCreate?: ServicoCreateOrConnectWithoutPromocaoInput
    connect?: ServicoWhereUniqueInput
  }

  export type NotificacaoCreateNestedManyWithoutPromocaoInput = {
    create?: XOR<NotificacaoCreateWithoutPromocaoInput, NotificacaoUncheckedCreateWithoutPromocaoInput> | NotificacaoCreateWithoutPromocaoInput[] | NotificacaoUncheckedCreateWithoutPromocaoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutPromocaoInput | NotificacaoCreateOrConnectWithoutPromocaoInput[]
    createMany?: NotificacaoCreateManyPromocaoInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type NotificacaoUncheckedCreateNestedManyWithoutPromocaoInput = {
    create?: XOR<NotificacaoCreateWithoutPromocaoInput, NotificacaoUncheckedCreateWithoutPromocaoInput> | NotificacaoCreateWithoutPromocaoInput[] | NotificacaoUncheckedCreateWithoutPromocaoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutPromocaoInput | NotificacaoCreateOrConnectWithoutPromocaoInput[]
    createMany?: NotificacaoCreateManyPromocaoInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type ServicoUpdateOneWithoutPromocaoNestedInput = {
    create?: XOR<ServicoCreateWithoutPromocaoInput, ServicoUncheckedCreateWithoutPromocaoInput>
    connectOrCreate?: ServicoCreateOrConnectWithoutPromocaoInput
    upsert?: ServicoUpsertWithoutPromocaoInput
    disconnect?: ServicoWhereInput | boolean
    delete?: ServicoWhereInput | boolean
    connect?: ServicoWhereUniqueInput
    update?: XOR<XOR<ServicoUpdateToOneWithWhereWithoutPromocaoInput, ServicoUpdateWithoutPromocaoInput>, ServicoUncheckedUpdateWithoutPromocaoInput>
  }

  export type NotificacaoUpdateManyWithoutPromocaoNestedInput = {
    create?: XOR<NotificacaoCreateWithoutPromocaoInput, NotificacaoUncheckedCreateWithoutPromocaoInput> | NotificacaoCreateWithoutPromocaoInput[] | NotificacaoUncheckedCreateWithoutPromocaoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutPromocaoInput | NotificacaoCreateOrConnectWithoutPromocaoInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutPromocaoInput | NotificacaoUpsertWithWhereUniqueWithoutPromocaoInput[]
    createMany?: NotificacaoCreateManyPromocaoInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutPromocaoInput | NotificacaoUpdateWithWhereUniqueWithoutPromocaoInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutPromocaoInput | NotificacaoUpdateManyWithWhereWithoutPromocaoInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type NotificacaoUncheckedUpdateManyWithoutPromocaoNestedInput = {
    create?: XOR<NotificacaoCreateWithoutPromocaoInput, NotificacaoUncheckedCreateWithoutPromocaoInput> | NotificacaoCreateWithoutPromocaoInput[] | NotificacaoUncheckedCreateWithoutPromocaoInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutPromocaoInput | NotificacaoCreateOrConnectWithoutPromocaoInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutPromocaoInput | NotificacaoUpsertWithWhereUniqueWithoutPromocaoInput[]
    createMany?: NotificacaoCreateManyPromocaoInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutPromocaoInput | NotificacaoUpdateWithWhereUniqueWithoutPromocaoInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutPromocaoInput | NotificacaoUpdateManyWithWhereWithoutPromocaoInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumTipoClienteFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCliente | EnumTipoClienteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoClienteFilter<$PrismaModel> | $Enums.TipoCliente
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumTipoClienteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCliente | EnumTipoClienteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoClienteWithAggregatesFilter<$PrismaModel> | $Enums.TipoCliente
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoClienteFilter<$PrismaModel>
    _max?: NestedEnumTipoClienteFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumTipoFuncionarioFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoFuncionario | EnumTipoFuncionarioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoFuncionario[] | ListEnumTipoFuncionarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoFuncionario[] | ListEnumTipoFuncionarioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoFuncionarioFilter<$PrismaModel> | $Enums.TipoFuncionario
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumTipoFuncionarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoFuncionario | EnumTipoFuncionarioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoFuncionario[] | ListEnumTipoFuncionarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoFuncionario[] | ListEnumTipoFuncionarioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoFuncionarioWithAggregatesFilter<$PrismaModel> | $Enums.TipoFuncionario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoFuncionarioFilter<$PrismaModel>
    _max?: NestedEnumTipoFuncionarioFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumStatusOrdemFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusOrdem | EnumStatusOrdemFieldRefInput<$PrismaModel>
    in?: $Enums.StatusOrdem[] | ListEnumStatusOrdemFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusOrdem[] | ListEnumStatusOrdemFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusOrdemFilter<$PrismaModel> | $Enums.StatusOrdem
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumStatusOrdemWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusOrdem | EnumStatusOrdemFieldRefInput<$PrismaModel>
    in?: $Enums.StatusOrdem[] | ListEnumStatusOrdemFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusOrdem[] | ListEnumStatusOrdemFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusOrdemWithAggregatesFilter<$PrismaModel> | $Enums.StatusOrdem
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusOrdemFilter<$PrismaModel>
    _max?: NestedEnumStatusOrdemFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumFormaPagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.FormaPagamento | EnumFormaPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumFormaPagamentoFilter<$PrismaModel> | $Enums.FormaPagamento
  }

  export type NestedEnumFormaPagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FormaPagamento | EnumFormaPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumFormaPagamentoWithAggregatesFilter<$PrismaModel> | $Enums.FormaPagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFormaPagamentoFilter<$PrismaModel>
    _max?: NestedEnumFormaPagamentoFilter<$PrismaModel>
  }

  export type NestedEnumTipoNotificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoNotificacao | EnumTipoNotificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoNotificacao[] | ListEnumTipoNotificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoNotificacao[] | ListEnumTipoNotificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoNotificacaoFilter<$PrismaModel> | $Enums.TipoNotificacao
  }

  export type NestedEnumTipoNotificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoNotificacao | EnumTipoNotificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoNotificacao[] | ListEnumTipoNotificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoNotificacao[] | ListEnumTipoNotificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoNotificacaoWithAggregatesFilter<$PrismaModel> | $Enums.TipoNotificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoNotificacaoFilter<$PrismaModel>
    _max?: NestedEnumTipoNotificacaoFilter<$PrismaModel>
  }

  export type CarroCreateWithoutClienteInput = {
    id?: string
    placa: string
    modelo: string
    ano: number
    revisoes?: RevisaoCreateNestedManyWithoutCarroInput
  }

  export type CarroUncheckedCreateWithoutClienteInput = {
    id?: string
    placa: string
    modelo: string
    ano: number
    revisoes?: RevisaoUncheckedCreateNestedManyWithoutCarroInput
  }

  export type CarroCreateOrConnectWithoutClienteInput = {
    where: CarroWhereUniqueInput
    create: XOR<CarroCreateWithoutClienteInput, CarroUncheckedCreateWithoutClienteInput>
  }

  export type CarroCreateManyClienteInputEnvelope = {
    data: CarroCreateManyClienteInput | CarroCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type OrdemDeServicoCreateWithoutClienteInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    aprovado?: boolean
    criadoPor: FuncionarioCreateNestedOneWithoutOrdensCriadasInput
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensAprovadasInput
    pecasUsadas?: PecaCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoCreateNestedManyWithoutOrdemDeServicoInput
    servico?: ServicoCreateNestedOneWithoutOrdensDeServicoInput
    ordemDeEstoque?: OrdemEstoqueCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoUncheckedCreateWithoutClienteInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
    pecasUsadas?: PecaUncheckedCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoUncheckedCreateNestedManyWithoutOrdemDeServicoInput
    ordemDeEstoque?: OrdemEstoqueUncheckedCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoCreateOrConnectWithoutClienteInput = {
    where: OrdemDeServicoWhereUniqueInput
    create: XOR<OrdemDeServicoCreateWithoutClienteInput, OrdemDeServicoUncheckedCreateWithoutClienteInput>
  }

  export type OrdemDeServicoCreateManyClienteInputEnvelope = {
    data: OrdemDeServicoCreateManyClienteInput | OrdemDeServicoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type RevisaoCreateWithoutClienteInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    carro: CarroCreateNestedOneWithoutRevisoesInput
    Notificacao?: NotificacaoCreateNestedManyWithoutRevisaoInput
  }

  export type RevisaoUncheckedCreateWithoutClienteInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    carroId: string
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutRevisaoInput
  }

  export type RevisaoCreateOrConnectWithoutClienteInput = {
    where: RevisaoWhereUniqueInput
    create: XOR<RevisaoCreateWithoutClienteInput, RevisaoUncheckedCreateWithoutClienteInput>
  }

  export type RevisaoCreateManyClienteInputEnvelope = {
    data: RevisaoCreateManyClienteInput | RevisaoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioCreateWithoutClientesCriadosInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    ordensCriadas?: OrdemDeServicoCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueCreateNestedManyWithoutAprovadoPorInput
    criadoPor?: FuncionarioCreateNestedOneWithoutFuncionariosCriadosInput
    funcionariosCriados?: FuncionarioCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioUncheckedCreateWithoutClientesCriadosInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId?: string | null
    ordensCriadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaUncheckedCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteUncheckedCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueUncheckedCreateNestedManyWithoutAprovadoPorInput
    funcionariosCriados?: FuncionarioUncheckedCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioCreateOrConnectWithoutClientesCriadosInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutClientesCriadosInput, FuncionarioUncheckedCreateWithoutClientesCriadosInput>
  }

  export type FuncionarioCreateWithoutServicosExecutadosInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    clientesCriados?: ClienteCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaCreateNestedManyWithoutCriadoPorInput
    ordensDeEstoque?: OrdemEstoqueCreateNestedManyWithoutAprovadoPorInput
    criadoPor?: FuncionarioCreateNestedOneWithoutFuncionariosCriadosInput
    funcionariosCriados?: FuncionarioCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioUncheckedCreateWithoutServicosExecutadosInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId?: string | null
    clientesCriados?: ClienteUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensDeEstoque?: OrdemEstoqueUncheckedCreateNestedManyWithoutAprovadoPorInput
    funcionariosCriados?: FuncionarioUncheckedCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioCreateOrConnectWithoutServicosExecutadosInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutServicosExecutadosInput, FuncionarioUncheckedCreateWithoutServicosExecutadosInput>
  }

  export type NotificacaoCreateWithoutClienteInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    promocao?: PromocaoCreateNestedOneWithoutNotificacoesInput
    revisao?: RevisaoCreateNestedOneWithoutNotificacaoInput
    ordemServico?: OrdemDeServicoCreateNestedOneWithoutNotificacaoInput
  }

  export type NotificacaoUncheckedCreateWithoutClienteInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    revisaoId?: string | null
    ordemServicoId?: string | null
    promocaoId?: string | null
  }

  export type NotificacaoCreateOrConnectWithoutClienteInput = {
    where: NotificacaoWhereUniqueInput
    create: XOR<NotificacaoCreateWithoutClienteInput, NotificacaoUncheckedCreateWithoutClienteInput>
  }

  export type NotificacaoCreateManyClienteInputEnvelope = {
    data: NotificacaoCreateManyClienteInput | NotificacaoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type CarroUpsertWithWhereUniqueWithoutClienteInput = {
    where: CarroWhereUniqueInput
    update: XOR<CarroUpdateWithoutClienteInput, CarroUncheckedUpdateWithoutClienteInput>
    create: XOR<CarroCreateWithoutClienteInput, CarroUncheckedCreateWithoutClienteInput>
  }

  export type CarroUpdateWithWhereUniqueWithoutClienteInput = {
    where: CarroWhereUniqueInput
    data: XOR<CarroUpdateWithoutClienteInput, CarroUncheckedUpdateWithoutClienteInput>
  }

  export type CarroUpdateManyWithWhereWithoutClienteInput = {
    where: CarroScalarWhereInput
    data: XOR<CarroUpdateManyMutationInput, CarroUncheckedUpdateManyWithoutClienteInput>
  }

  export type CarroScalarWhereInput = {
    AND?: CarroScalarWhereInput | CarroScalarWhereInput[]
    OR?: CarroScalarWhereInput[]
    NOT?: CarroScalarWhereInput | CarroScalarWhereInput[]
    id?: StringFilter<"Carro"> | string
    placa?: StringFilter<"Carro"> | string
    modelo?: StringFilter<"Carro"> | string
    ano?: IntFilter<"Carro"> | number
    clienteId?: StringFilter<"Carro"> | string
  }

  export type OrdemDeServicoUpsertWithWhereUniqueWithoutClienteInput = {
    where: OrdemDeServicoWhereUniqueInput
    update: XOR<OrdemDeServicoUpdateWithoutClienteInput, OrdemDeServicoUncheckedUpdateWithoutClienteInput>
    create: XOR<OrdemDeServicoCreateWithoutClienteInput, OrdemDeServicoUncheckedCreateWithoutClienteInput>
  }

  export type OrdemDeServicoUpdateWithWhereUniqueWithoutClienteInput = {
    where: OrdemDeServicoWhereUniqueInput
    data: XOR<OrdemDeServicoUpdateWithoutClienteInput, OrdemDeServicoUncheckedUpdateWithoutClienteInput>
  }

  export type OrdemDeServicoUpdateManyWithWhereWithoutClienteInput = {
    where: OrdemDeServicoScalarWhereInput
    data: XOR<OrdemDeServicoUpdateManyMutationInput, OrdemDeServicoUncheckedUpdateManyWithoutClienteInput>
  }

  export type OrdemDeServicoScalarWhereInput = {
    AND?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
    OR?: OrdemDeServicoScalarWhereInput[]
    NOT?: OrdemDeServicoScalarWhereInput | OrdemDeServicoScalarWhereInput[]
    id?: StringFilter<"OrdemDeServico"> | string
    placaDoCarro?: StringFilter<"OrdemDeServico"> | string
    servicosPrestados?: StringFilter<"OrdemDeServico"> | string
    cpf?: StringFilter<"OrdemDeServico"> | string
    valorTotal?: FloatFilter<"OrdemDeServico"> | number
    dataDeRealizacao?: DateTimeFilter<"OrdemDeServico"> | Date | string
    dataDeVencimento?: DateTimeFilter<"OrdemDeServico"> | Date | string
    status?: EnumStatusOrdemFilter<"OrdemDeServico"> | $Enums.StatusOrdem
    clienteId?: StringFilter<"OrdemDeServico"> | string
    criadoPorId?: StringFilter<"OrdemDeServico"> | string
    aprovado?: BoolFilter<"OrdemDeServico"> | boolean
    aprovadoPorId?: StringNullableFilter<"OrdemDeServico"> | string | null
    servicoId?: StringNullableFilter<"OrdemDeServico"> | string | null
  }

  export type RevisaoUpsertWithWhereUniqueWithoutClienteInput = {
    where: RevisaoWhereUniqueInput
    update: XOR<RevisaoUpdateWithoutClienteInput, RevisaoUncheckedUpdateWithoutClienteInput>
    create: XOR<RevisaoCreateWithoutClienteInput, RevisaoUncheckedCreateWithoutClienteInput>
  }

  export type RevisaoUpdateWithWhereUniqueWithoutClienteInput = {
    where: RevisaoWhereUniqueInput
    data: XOR<RevisaoUpdateWithoutClienteInput, RevisaoUncheckedUpdateWithoutClienteInput>
  }

  export type RevisaoUpdateManyWithWhereWithoutClienteInput = {
    where: RevisaoScalarWhereInput
    data: XOR<RevisaoUpdateManyMutationInput, RevisaoUncheckedUpdateManyWithoutClienteInput>
  }

  export type RevisaoScalarWhereInput = {
    AND?: RevisaoScalarWhereInput | RevisaoScalarWhereInput[]
    OR?: RevisaoScalarWhereInput[]
    NOT?: RevisaoScalarWhereInput | RevisaoScalarWhereInput[]
    id?: StringFilter<"Revisao"> | string
    placaDoCarro?: StringFilter<"Revisao"> | string
    dataDaRevisao?: DateTimeFilter<"Revisao"> | Date | string
    dataDaProximaRevisao?: DateTimeNullableFilter<"Revisao"> | Date | string | null
    mensagemPredefinida?: StringNullableFilter<"Revisao"> | string | null
    carroId?: StringFilter<"Revisao"> | string
    clienteId?: StringNullableFilter<"Revisao"> | string | null
  }

  export type FuncionarioUpsertWithoutClientesCriadosInput = {
    update: XOR<FuncionarioUpdateWithoutClientesCriadosInput, FuncionarioUncheckedUpdateWithoutClientesCriadosInput>
    create: XOR<FuncionarioCreateWithoutClientesCriadosInput, FuncionarioUncheckedCreateWithoutClientesCriadosInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutClientesCriadosInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutClientesCriadosInput, FuncionarioUncheckedUpdateWithoutClientesCriadosInput>
  }

  export type FuncionarioUpdateWithoutClientesCriadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    ordensCriadas?: OrdemDeServicoUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUpdateManyWithoutAprovadoPorNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutFuncionariosCriadosNestedInput
    funcionariosCriados?: FuncionarioUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutClientesCriadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    ordensCriadas?: OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUncheckedUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorNestedInput
    funcionariosCriados?: FuncionarioUncheckedUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUpsertWithWhereUniqueWithoutServicosExecutadosInput = {
    where: FuncionarioWhereUniqueInput
    update: XOR<FuncionarioUpdateWithoutServicosExecutadosInput, FuncionarioUncheckedUpdateWithoutServicosExecutadosInput>
    create: XOR<FuncionarioCreateWithoutServicosExecutadosInput, FuncionarioUncheckedCreateWithoutServicosExecutadosInput>
  }

  export type FuncionarioUpdateWithWhereUniqueWithoutServicosExecutadosInput = {
    where: FuncionarioWhereUniqueInput
    data: XOR<FuncionarioUpdateWithoutServicosExecutadosInput, FuncionarioUncheckedUpdateWithoutServicosExecutadosInput>
  }

  export type FuncionarioUpdateManyWithWhereWithoutServicosExecutadosInput = {
    where: FuncionarioScalarWhereInput
    data: XOR<FuncionarioUpdateManyMutationInput, FuncionarioUncheckedUpdateManyWithoutServicosExecutadosInput>
  }

  export type FuncionarioScalarWhereInput = {
    AND?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
    OR?: FuncionarioScalarWhereInput[]
    NOT?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
    id?: StringFilter<"Funcionario"> | string
    nome?: StringFilter<"Funcionario"> | string
    username?: StringFilter<"Funcionario"> | string
    cpf?: StringFilter<"Funcionario"> | string
    dataDeNascimento?: DateTimeFilter<"Funcionario"> | Date | string
    email?: StringFilter<"Funcionario"> | string
    senha?: StringFilter<"Funcionario"> | string
    telefone?: StringNullableFilter<"Funcionario"> | string | null
    tipo?: EnumTipoFuncionarioFilter<"Funcionario"> | $Enums.TipoFuncionario
    criadoPorId?: StringNullableFilter<"Funcionario"> | string | null
  }

  export type NotificacaoUpsertWithWhereUniqueWithoutClienteInput = {
    where: NotificacaoWhereUniqueInput
    update: XOR<NotificacaoUpdateWithoutClienteInput, NotificacaoUncheckedUpdateWithoutClienteInput>
    create: XOR<NotificacaoCreateWithoutClienteInput, NotificacaoUncheckedCreateWithoutClienteInput>
  }

  export type NotificacaoUpdateWithWhereUniqueWithoutClienteInput = {
    where: NotificacaoWhereUniqueInput
    data: XOR<NotificacaoUpdateWithoutClienteInput, NotificacaoUncheckedUpdateWithoutClienteInput>
  }

  export type NotificacaoUpdateManyWithWhereWithoutClienteInput = {
    where: NotificacaoScalarWhereInput
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyWithoutClienteInput>
  }

  export type NotificacaoScalarWhereInput = {
    AND?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
    OR?: NotificacaoScalarWhereInput[]
    NOT?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
    id?: StringFilter<"Notificacao"> | string
    tipo?: EnumTipoNotificacaoFilter<"Notificacao"> | $Enums.TipoNotificacao
    mensagem?: StringFilter<"Notificacao"> | string
    enviadoEm?: DateTimeFilter<"Notificacao"> | Date | string
    clienteId?: StringFilter<"Notificacao"> | string
    revisaoId?: StringNullableFilter<"Notificacao"> | string | null
    ordemServicoId?: StringNullableFilter<"Notificacao"> | string | null
    promocaoId?: StringNullableFilter<"Notificacao"> | string | null
  }

  export type ClienteCreateWithoutCriadoPorInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    carros?: CarroCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoCreateNestedManyWithoutClienteInput
    funcionariosExecutores?: FuncionarioCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutCriadoPorInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    carros?: CarroUncheckedCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoUncheckedCreateNestedManyWithoutClienteInput
    funcionariosExecutores?: FuncionarioUncheckedCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutCriadoPorInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutCriadoPorInput, ClienteUncheckedCreateWithoutCriadoPorInput>
  }

  export type ClienteCreateManyCriadoPorInputEnvelope = {
    data: ClienteCreateManyCriadoPorInput | ClienteCreateManyCriadoPorInput[]
    skipDuplicates?: boolean
  }

  export type OrdemDeServicoCreateWithoutCriadoPorInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    aprovado?: boolean
    cliente: ClienteCreateNestedOneWithoutOrdensDeServicoInput
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensAprovadasInput
    pecasUsadas?: PecaCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoCreateNestedManyWithoutOrdemDeServicoInput
    servico?: ServicoCreateNestedOneWithoutOrdensDeServicoInput
    ordemDeEstoque?: OrdemEstoqueCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoUncheckedCreateWithoutCriadoPorInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
    pecasUsadas?: PecaUncheckedCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoUncheckedCreateNestedManyWithoutOrdemDeServicoInput
    ordemDeEstoque?: OrdemEstoqueUncheckedCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoCreateOrConnectWithoutCriadoPorInput = {
    where: OrdemDeServicoWhereUniqueInput
    create: XOR<OrdemDeServicoCreateWithoutCriadoPorInput, OrdemDeServicoUncheckedCreateWithoutCriadoPorInput>
  }

  export type OrdemDeServicoCreateManyCriadoPorInputEnvelope = {
    data: OrdemDeServicoCreateManyCriadoPorInput | OrdemDeServicoCreateManyCriadoPorInput[]
    skipDuplicates?: boolean
  }

  export type OrdemDeServicoCreateWithoutAprovadoPorInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    aprovado?: boolean
    cliente: ClienteCreateNestedOneWithoutOrdensDeServicoInput
    criadoPor: FuncionarioCreateNestedOneWithoutOrdensCriadasInput
    pecasUsadas?: PecaCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoCreateNestedManyWithoutOrdemDeServicoInput
    servico?: ServicoCreateNestedOneWithoutOrdensDeServicoInput
    ordemDeEstoque?: OrdemEstoqueCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    servicoId?: string | null
    pecasUsadas?: PecaUncheckedCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoUncheckedCreateNestedManyWithoutOrdemDeServicoInput
    ordemDeEstoque?: OrdemEstoqueUncheckedCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoCreateOrConnectWithoutAprovadoPorInput = {
    where: OrdemDeServicoWhereUniqueInput
    create: XOR<OrdemDeServicoCreateWithoutAprovadoPorInput, OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput>
  }

  export type OrdemDeServicoCreateManyAprovadoPorInputEnvelope = {
    data: OrdemDeServicoCreateManyAprovadoPorInput | OrdemDeServicoCreateManyAprovadoPorInput[]
    skipDuplicates?: boolean
  }

  export type PecaCreateWithoutCriadoPorInput = {
    id?: string
    nome: string
    tipo: string
    valor: Decimal | DecimalJsLike | number | string
    quantidade: number
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutPecasUsadasInput
  }

  export type PecaUncheckedCreateWithoutCriadoPorInput = {
    id?: string
    nome: string
    tipo: string
    valor: Decimal | DecimalJsLike | number | string
    quantidade: number
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutPecasUsadasInput
  }

  export type PecaCreateOrConnectWithoutCriadoPorInput = {
    where: PecaWhereUniqueInput
    create: XOR<PecaCreateWithoutCriadoPorInput, PecaUncheckedCreateWithoutCriadoPorInput>
  }

  export type PecaCreateManyCriadoPorInputEnvelope = {
    data: PecaCreateManyCriadoPorInput | PecaCreateManyCriadoPorInput[]
    skipDuplicates?: boolean
  }

  export type ClienteCreateWithoutFuncionariosExecutoresInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    carros?: CarroCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoCreateNestedManyWithoutClienteInput
    criadoPor?: FuncionarioCreateNestedOneWithoutClientesCriadosInput
    notificacoes?: NotificacaoCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutFuncionariosExecutoresInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    criadoPorId?: string | null
    carros?: CarroUncheckedCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoUncheckedCreateNestedManyWithoutClienteInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutFuncionariosExecutoresInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutFuncionariosExecutoresInput, ClienteUncheckedCreateWithoutFuncionariosExecutoresInput>
  }

  export type OrdemEstoqueCreateWithoutAprovadoPorInput = {
    id?: string
    pecaAprovada?: boolean
    mensagem?: string | null
    ordemDeServico?: OrdemDeServicoCreateNestedOneWithoutOrdemDeEstoqueInput
  }

  export type OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput = {
    id?: string
    ordemDeServicoId?: string | null
    pecaAprovada?: boolean
    mensagem?: string | null
  }

  export type OrdemEstoqueCreateOrConnectWithoutAprovadoPorInput = {
    where: OrdemEstoqueWhereUniqueInput
    create: XOR<OrdemEstoqueCreateWithoutAprovadoPorInput, OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput>
  }

  export type OrdemEstoqueCreateManyAprovadoPorInputEnvelope = {
    data: OrdemEstoqueCreateManyAprovadoPorInput | OrdemEstoqueCreateManyAprovadoPorInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioCreateWithoutFuncionariosCriadosInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    clientesCriados?: ClienteCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueCreateNestedManyWithoutAprovadoPorInput
    criadoPor?: FuncionarioCreateNestedOneWithoutFuncionariosCriadosInput
  }

  export type FuncionarioUncheckedCreateWithoutFuncionariosCriadosInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId?: string | null
    clientesCriados?: ClienteUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaUncheckedCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteUncheckedCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueUncheckedCreateNestedManyWithoutAprovadoPorInput
  }

  export type FuncionarioCreateOrConnectWithoutFuncionariosCriadosInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutFuncionariosCriadosInput, FuncionarioUncheckedCreateWithoutFuncionariosCriadosInput>
  }

  export type FuncionarioCreateWithoutCriadoPorInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    clientesCriados?: ClienteCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueCreateNestedManyWithoutAprovadoPorInput
    funcionariosCriados?: FuncionarioCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioUncheckedCreateWithoutCriadoPorInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    clientesCriados?: ClienteUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaUncheckedCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteUncheckedCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueUncheckedCreateNestedManyWithoutAprovadoPorInput
    funcionariosCriados?: FuncionarioUncheckedCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioCreateOrConnectWithoutCriadoPorInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutCriadoPorInput, FuncionarioUncheckedCreateWithoutCriadoPorInput>
  }

  export type FuncionarioCreateManyCriadoPorInputEnvelope = {
    data: FuncionarioCreateManyCriadoPorInput | FuncionarioCreateManyCriadoPorInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithWhereUniqueWithoutCriadoPorInput = {
    where: ClienteWhereUniqueInput
    update: XOR<ClienteUpdateWithoutCriadoPorInput, ClienteUncheckedUpdateWithoutCriadoPorInput>
    create: XOR<ClienteCreateWithoutCriadoPorInput, ClienteUncheckedCreateWithoutCriadoPorInput>
  }

  export type ClienteUpdateWithWhereUniqueWithoutCriadoPorInput = {
    where: ClienteWhereUniqueInput
    data: XOR<ClienteUpdateWithoutCriadoPorInput, ClienteUncheckedUpdateWithoutCriadoPorInput>
  }

  export type ClienteUpdateManyWithWhereWithoutCriadoPorInput = {
    where: ClienteScalarWhereInput
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyWithoutCriadoPorInput>
  }

  export type ClienteScalarWhereInput = {
    AND?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    OR?: ClienteScalarWhereInput[]
    NOT?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    id?: StringFilter<"Cliente"> | string
    nome?: StringFilter<"Cliente"> | string
    telefone?: StringNullableFilter<"Cliente"> | string | null
    email?: StringFilter<"Cliente"> | string
    cpf?: StringNullableFilter<"Cliente"> | string | null
    cnpj?: StringNullableFilter<"Cliente"> | string | null
    dataDeNascimento?: DateTimeNullableFilter<"Cliente"> | Date | string | null
    password?: StringFilter<"Cliente"> | string
    tipo?: EnumTipoClienteFilter<"Cliente"> | $Enums.TipoCliente
    clienteCadastrador?: StringNullableFilter<"Cliente"> | string | null
    criadoPorId?: StringNullableFilter<"Cliente"> | string | null
  }

  export type OrdemDeServicoUpsertWithWhereUniqueWithoutCriadoPorInput = {
    where: OrdemDeServicoWhereUniqueInput
    update: XOR<OrdemDeServicoUpdateWithoutCriadoPorInput, OrdemDeServicoUncheckedUpdateWithoutCriadoPorInput>
    create: XOR<OrdemDeServicoCreateWithoutCriadoPorInput, OrdemDeServicoUncheckedCreateWithoutCriadoPorInput>
  }

  export type OrdemDeServicoUpdateWithWhereUniqueWithoutCriadoPorInput = {
    where: OrdemDeServicoWhereUniqueInput
    data: XOR<OrdemDeServicoUpdateWithoutCriadoPorInput, OrdemDeServicoUncheckedUpdateWithoutCriadoPorInput>
  }

  export type OrdemDeServicoUpdateManyWithWhereWithoutCriadoPorInput = {
    where: OrdemDeServicoScalarWhereInput
    data: XOR<OrdemDeServicoUpdateManyMutationInput, OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorInput>
  }

  export type OrdemDeServicoUpsertWithWhereUniqueWithoutAprovadoPorInput = {
    where: OrdemDeServicoWhereUniqueInput
    update: XOR<OrdemDeServicoUpdateWithoutAprovadoPorInput, OrdemDeServicoUncheckedUpdateWithoutAprovadoPorInput>
    create: XOR<OrdemDeServicoCreateWithoutAprovadoPorInput, OrdemDeServicoUncheckedCreateWithoutAprovadoPorInput>
  }

  export type OrdemDeServicoUpdateWithWhereUniqueWithoutAprovadoPorInput = {
    where: OrdemDeServicoWhereUniqueInput
    data: XOR<OrdemDeServicoUpdateWithoutAprovadoPorInput, OrdemDeServicoUncheckedUpdateWithoutAprovadoPorInput>
  }

  export type OrdemDeServicoUpdateManyWithWhereWithoutAprovadoPorInput = {
    where: OrdemDeServicoScalarWhereInput
    data: XOR<OrdemDeServicoUpdateManyMutationInput, OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorInput>
  }

  export type PecaUpsertWithWhereUniqueWithoutCriadoPorInput = {
    where: PecaWhereUniqueInput
    update: XOR<PecaUpdateWithoutCriadoPorInput, PecaUncheckedUpdateWithoutCriadoPorInput>
    create: XOR<PecaCreateWithoutCriadoPorInput, PecaUncheckedCreateWithoutCriadoPorInput>
  }

  export type PecaUpdateWithWhereUniqueWithoutCriadoPorInput = {
    where: PecaWhereUniqueInput
    data: XOR<PecaUpdateWithoutCriadoPorInput, PecaUncheckedUpdateWithoutCriadoPorInput>
  }

  export type PecaUpdateManyWithWhereWithoutCriadoPorInput = {
    where: PecaScalarWhereInput
    data: XOR<PecaUpdateManyMutationInput, PecaUncheckedUpdateManyWithoutCriadoPorInput>
  }

  export type PecaScalarWhereInput = {
    AND?: PecaScalarWhereInput | PecaScalarWhereInput[]
    OR?: PecaScalarWhereInput[]
    NOT?: PecaScalarWhereInput | PecaScalarWhereInput[]
    id?: StringFilter<"Peca"> | string
    nome?: StringFilter<"Peca"> | string
    tipo?: StringFilter<"Peca"> | string
    valor?: DecimalFilter<"Peca"> | Decimal | DecimalJsLike | number | string
    quantidade?: IntFilter<"Peca"> | number
    criadoPorId?: StringFilter<"Peca"> | string
  }

  export type ClienteUpsertWithWhereUniqueWithoutFuncionariosExecutoresInput = {
    where: ClienteWhereUniqueInput
    update: XOR<ClienteUpdateWithoutFuncionariosExecutoresInput, ClienteUncheckedUpdateWithoutFuncionariosExecutoresInput>
    create: XOR<ClienteCreateWithoutFuncionariosExecutoresInput, ClienteUncheckedCreateWithoutFuncionariosExecutoresInput>
  }

  export type ClienteUpdateWithWhereUniqueWithoutFuncionariosExecutoresInput = {
    where: ClienteWhereUniqueInput
    data: XOR<ClienteUpdateWithoutFuncionariosExecutoresInput, ClienteUncheckedUpdateWithoutFuncionariosExecutoresInput>
  }

  export type ClienteUpdateManyWithWhereWithoutFuncionariosExecutoresInput = {
    where: ClienteScalarWhereInput
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresInput>
  }

  export type OrdemEstoqueUpsertWithWhereUniqueWithoutAprovadoPorInput = {
    where: OrdemEstoqueWhereUniqueInput
    update: XOR<OrdemEstoqueUpdateWithoutAprovadoPorInput, OrdemEstoqueUncheckedUpdateWithoutAprovadoPorInput>
    create: XOR<OrdemEstoqueCreateWithoutAprovadoPorInput, OrdemEstoqueUncheckedCreateWithoutAprovadoPorInput>
  }

  export type OrdemEstoqueUpdateWithWhereUniqueWithoutAprovadoPorInput = {
    where: OrdemEstoqueWhereUniqueInput
    data: XOR<OrdemEstoqueUpdateWithoutAprovadoPorInput, OrdemEstoqueUncheckedUpdateWithoutAprovadoPorInput>
  }

  export type OrdemEstoqueUpdateManyWithWhereWithoutAprovadoPorInput = {
    where: OrdemEstoqueScalarWhereInput
    data: XOR<OrdemEstoqueUpdateManyMutationInput, OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorInput>
  }

  export type OrdemEstoqueScalarWhereInput = {
    AND?: OrdemEstoqueScalarWhereInput | OrdemEstoqueScalarWhereInput[]
    OR?: OrdemEstoqueScalarWhereInput[]
    NOT?: OrdemEstoqueScalarWhereInput | OrdemEstoqueScalarWhereInput[]
    id?: StringFilter<"OrdemEstoque"> | string
    ordemDeServicoId?: StringNullableFilter<"OrdemEstoque"> | string | null
    pecaAprovada?: BoolFilter<"OrdemEstoque"> | boolean
    mensagem?: StringNullableFilter<"OrdemEstoque"> | string | null
    aprovadoPorId?: StringNullableFilter<"OrdemEstoque"> | string | null
  }

  export type FuncionarioUpsertWithoutFuncionariosCriadosInput = {
    update: XOR<FuncionarioUpdateWithoutFuncionariosCriadosInput, FuncionarioUncheckedUpdateWithoutFuncionariosCriadosInput>
    create: XOR<FuncionarioCreateWithoutFuncionariosCriadosInput, FuncionarioUncheckedCreateWithoutFuncionariosCriadosInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutFuncionariosCriadosInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutFuncionariosCriadosInput, FuncionarioUncheckedUpdateWithoutFuncionariosCriadosInput>
  }

  export type FuncionarioUpdateWithoutFuncionariosCriadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    clientesCriados?: ClienteUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUpdateManyWithoutAprovadoPorNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutFuncionariosCriadosNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutFuncionariosCriadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    clientesCriados?: ClienteUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUncheckedUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorNestedInput
  }

  export type FuncionarioUpsertWithWhereUniqueWithoutCriadoPorInput = {
    where: FuncionarioWhereUniqueInput
    update: XOR<FuncionarioUpdateWithoutCriadoPorInput, FuncionarioUncheckedUpdateWithoutCriadoPorInput>
    create: XOR<FuncionarioCreateWithoutCriadoPorInput, FuncionarioUncheckedCreateWithoutCriadoPorInput>
  }

  export type FuncionarioUpdateWithWhereUniqueWithoutCriadoPorInput = {
    where: FuncionarioWhereUniqueInput
    data: XOR<FuncionarioUpdateWithoutCriadoPorInput, FuncionarioUncheckedUpdateWithoutCriadoPorInput>
  }

  export type FuncionarioUpdateManyWithWhereWithoutCriadoPorInput = {
    where: FuncionarioScalarWhereInput
    data: XOR<FuncionarioUpdateManyMutationInput, FuncionarioUncheckedUpdateManyWithoutCriadoPorInput>
  }

  export type ClienteCreateWithoutCarrosInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoCreateNestedManyWithoutClienteInput
    criadoPor?: FuncionarioCreateNestedOneWithoutClientesCriadosInput
    funcionariosExecutores?: FuncionarioCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutCarrosInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    criadoPorId?: string | null
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoUncheckedCreateNestedManyWithoutClienteInput
    funcionariosExecutores?: FuncionarioUncheckedCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutCarrosInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutCarrosInput, ClienteUncheckedCreateWithoutCarrosInput>
  }

  export type RevisaoCreateWithoutCarroInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    cliente?: ClienteCreateNestedOneWithoutRevisoesInput
    Notificacao?: NotificacaoCreateNestedManyWithoutRevisaoInput
  }

  export type RevisaoUncheckedCreateWithoutCarroInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    clienteId?: string | null
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutRevisaoInput
  }

  export type RevisaoCreateOrConnectWithoutCarroInput = {
    where: RevisaoWhereUniqueInput
    create: XOR<RevisaoCreateWithoutCarroInput, RevisaoUncheckedCreateWithoutCarroInput>
  }

  export type RevisaoCreateManyCarroInputEnvelope = {
    data: RevisaoCreateManyCarroInput | RevisaoCreateManyCarroInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithoutCarrosInput = {
    update: XOR<ClienteUpdateWithoutCarrosInput, ClienteUncheckedUpdateWithoutCarrosInput>
    create: XOR<ClienteCreateWithoutCarrosInput, ClienteUncheckedCreateWithoutCarrosInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutCarrosInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutCarrosInput, ClienteUncheckedUpdateWithoutCarrosInput>
  }

  export type ClienteUpdateWithoutCarrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUpdateManyWithoutClienteNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutClientesCriadosNestedInput
    funcionariosExecutores?: FuncionarioUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutCarrosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUncheckedUpdateManyWithoutClienteNestedInput
    funcionariosExecutores?: FuncionarioUncheckedUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type RevisaoUpsertWithWhereUniqueWithoutCarroInput = {
    where: RevisaoWhereUniqueInput
    update: XOR<RevisaoUpdateWithoutCarroInput, RevisaoUncheckedUpdateWithoutCarroInput>
    create: XOR<RevisaoCreateWithoutCarroInput, RevisaoUncheckedCreateWithoutCarroInput>
  }

  export type RevisaoUpdateWithWhereUniqueWithoutCarroInput = {
    where: RevisaoWhereUniqueInput
    data: XOR<RevisaoUpdateWithoutCarroInput, RevisaoUncheckedUpdateWithoutCarroInput>
  }

  export type RevisaoUpdateManyWithWhereWithoutCarroInput = {
    where: RevisaoScalarWhereInput
    data: XOR<RevisaoUpdateManyMutationInput, RevisaoUncheckedUpdateManyWithoutCarroInput>
  }

  export type OrdemDeServicoCreateWithoutServicoInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    aprovado?: boolean
    cliente: ClienteCreateNestedOneWithoutOrdensDeServicoInput
    criadoPor: FuncionarioCreateNestedOneWithoutOrdensCriadasInput
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensAprovadasInput
    pecasUsadas?: PecaCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoCreateNestedManyWithoutOrdemDeServicoInput
    ordemDeEstoque?: OrdemEstoqueCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoUncheckedCreateWithoutServicoInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    pecasUsadas?: PecaUncheckedCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoUncheckedCreateNestedManyWithoutOrdemDeServicoInput
    ordemDeEstoque?: OrdemEstoqueUncheckedCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoCreateOrConnectWithoutServicoInput = {
    where: OrdemDeServicoWhereUniqueInput
    create: XOR<OrdemDeServicoCreateWithoutServicoInput, OrdemDeServicoUncheckedCreateWithoutServicoInput>
  }

  export type OrdemDeServicoCreateManyServicoInputEnvelope = {
    data: OrdemDeServicoCreateManyServicoInput | OrdemDeServicoCreateManyServicoInput[]
    skipDuplicates?: boolean
  }

  export type PromocaoCreateWithoutServicoInput = {
    id?: string
    descricao: string
    desconto: number
    notificacoes?: NotificacaoCreateNestedManyWithoutPromocaoInput
  }

  export type PromocaoUncheckedCreateWithoutServicoInput = {
    id?: string
    descricao: string
    desconto: number
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutPromocaoInput
  }

  export type PromocaoCreateOrConnectWithoutServicoInput = {
    where: PromocaoWhereUniqueInput
    create: XOR<PromocaoCreateWithoutServicoInput, PromocaoUncheckedCreateWithoutServicoInput>
  }

  export type PromocaoCreateManyServicoInputEnvelope = {
    data: PromocaoCreateManyServicoInput | PromocaoCreateManyServicoInput[]
    skipDuplicates?: boolean
  }

  export type OrdemDeServicoUpsertWithWhereUniqueWithoutServicoInput = {
    where: OrdemDeServicoWhereUniqueInput
    update: XOR<OrdemDeServicoUpdateWithoutServicoInput, OrdemDeServicoUncheckedUpdateWithoutServicoInput>
    create: XOR<OrdemDeServicoCreateWithoutServicoInput, OrdemDeServicoUncheckedCreateWithoutServicoInput>
  }

  export type OrdemDeServicoUpdateWithWhereUniqueWithoutServicoInput = {
    where: OrdemDeServicoWhereUniqueInput
    data: XOR<OrdemDeServicoUpdateWithoutServicoInput, OrdemDeServicoUncheckedUpdateWithoutServicoInput>
  }

  export type OrdemDeServicoUpdateManyWithWhereWithoutServicoInput = {
    where: OrdemDeServicoScalarWhereInput
    data: XOR<OrdemDeServicoUpdateManyMutationInput, OrdemDeServicoUncheckedUpdateManyWithoutServicoInput>
  }

  export type PromocaoUpsertWithWhereUniqueWithoutServicoInput = {
    where: PromocaoWhereUniqueInput
    update: XOR<PromocaoUpdateWithoutServicoInput, PromocaoUncheckedUpdateWithoutServicoInput>
    create: XOR<PromocaoCreateWithoutServicoInput, PromocaoUncheckedCreateWithoutServicoInput>
  }

  export type PromocaoUpdateWithWhereUniqueWithoutServicoInput = {
    where: PromocaoWhereUniqueInput
    data: XOR<PromocaoUpdateWithoutServicoInput, PromocaoUncheckedUpdateWithoutServicoInput>
  }

  export type PromocaoUpdateManyWithWhereWithoutServicoInput = {
    where: PromocaoScalarWhereInput
    data: XOR<PromocaoUpdateManyMutationInput, PromocaoUncheckedUpdateManyWithoutServicoInput>
  }

  export type PromocaoScalarWhereInput = {
    AND?: PromocaoScalarWhereInput | PromocaoScalarWhereInput[]
    OR?: PromocaoScalarWhereInput[]
    NOT?: PromocaoScalarWhereInput | PromocaoScalarWhereInput[]
    id?: StringFilter<"Promocao"> | string
    descricao?: StringFilter<"Promocao"> | string
    desconto?: FloatFilter<"Promocao"> | number
    servicoId?: StringNullableFilter<"Promocao"> | string | null
  }

  export type FuncionarioCreateWithoutPecasCriadasInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    clientesCriados?: ClienteCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoCreateNestedManyWithoutAprovadoPorInput
    servicosExecutados?: ClienteCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueCreateNestedManyWithoutAprovadoPorInput
    criadoPor?: FuncionarioCreateNestedOneWithoutFuncionariosCriadosInput
    funcionariosCriados?: FuncionarioCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioUncheckedCreateWithoutPecasCriadasInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId?: string | null
    clientesCriados?: ClienteUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutAprovadoPorInput
    servicosExecutados?: ClienteUncheckedCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueUncheckedCreateNestedManyWithoutAprovadoPorInput
    funcionariosCriados?: FuncionarioUncheckedCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioCreateOrConnectWithoutPecasCriadasInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutPecasCriadasInput, FuncionarioUncheckedCreateWithoutPecasCriadasInput>
  }

  export type OrdemDeServicoCreateWithoutPecasUsadasInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    aprovado?: boolean
    cliente: ClienteCreateNestedOneWithoutOrdensDeServicoInput
    criadoPor: FuncionarioCreateNestedOneWithoutOrdensCriadasInput
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensAprovadasInput
    pagamentos?: OrdemServicoPagamentoCreateNestedManyWithoutOrdemDeServicoInput
    servico?: ServicoCreateNestedOneWithoutOrdensDeServicoInput
    ordemDeEstoque?: OrdemEstoqueCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
    pagamentos?: OrdemServicoPagamentoUncheckedCreateNestedManyWithoutOrdemDeServicoInput
    ordemDeEstoque?: OrdemEstoqueUncheckedCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoCreateOrConnectWithoutPecasUsadasInput = {
    where: OrdemDeServicoWhereUniqueInput
    create: XOR<OrdemDeServicoCreateWithoutPecasUsadasInput, OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput>
  }

  export type FuncionarioUpsertWithoutPecasCriadasInput = {
    update: XOR<FuncionarioUpdateWithoutPecasCriadasInput, FuncionarioUncheckedUpdateWithoutPecasCriadasInput>
    create: XOR<FuncionarioCreateWithoutPecasCriadasInput, FuncionarioUncheckedCreateWithoutPecasCriadasInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutPecasCriadasInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutPecasCriadasInput, FuncionarioUncheckedUpdateWithoutPecasCriadasInput>
  }

  export type FuncionarioUpdateWithoutPecasCriadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    clientesCriados?: ClienteUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUpdateManyWithoutAprovadoPorNestedInput
    servicosExecutados?: ClienteUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUpdateManyWithoutAprovadoPorNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutFuncionariosCriadosNestedInput
    funcionariosCriados?: FuncionarioUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutPecasCriadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    clientesCriados?: ClienteUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorNestedInput
    servicosExecutados?: ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorNestedInput
    funcionariosCriados?: FuncionarioUncheckedUpdateManyWithoutCriadoPorNestedInput
  }

  export type OrdemDeServicoUpsertWithWhereUniqueWithoutPecasUsadasInput = {
    where: OrdemDeServicoWhereUniqueInput
    update: XOR<OrdemDeServicoUpdateWithoutPecasUsadasInput, OrdemDeServicoUncheckedUpdateWithoutPecasUsadasInput>
    create: XOR<OrdemDeServicoCreateWithoutPecasUsadasInput, OrdemDeServicoUncheckedCreateWithoutPecasUsadasInput>
  }

  export type OrdemDeServicoUpdateWithWhereUniqueWithoutPecasUsadasInput = {
    where: OrdemDeServicoWhereUniqueInput
    data: XOR<OrdemDeServicoUpdateWithoutPecasUsadasInput, OrdemDeServicoUncheckedUpdateWithoutPecasUsadasInput>
  }

  export type OrdemDeServicoUpdateManyWithWhereWithoutPecasUsadasInput = {
    where: OrdemDeServicoScalarWhereInput
    data: XOR<OrdemDeServicoUpdateManyMutationInput, OrdemDeServicoUncheckedUpdateManyWithoutPecasUsadasInput>
  }

  export type ClienteCreateWithoutOrdensDeServicoInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    carros?: CarroCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoCreateNestedManyWithoutClienteInput
    criadoPor?: FuncionarioCreateNestedOneWithoutClientesCriadosInput
    funcionariosExecutores?: FuncionarioCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutOrdensDeServicoInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    criadoPorId?: string | null
    carros?: CarroUncheckedCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoUncheckedCreateNestedManyWithoutClienteInput
    funcionariosExecutores?: FuncionarioUncheckedCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutOrdensDeServicoInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutOrdensDeServicoInput, ClienteUncheckedCreateWithoutOrdensDeServicoInput>
  }

  export type FuncionarioCreateWithoutOrdensCriadasInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    clientesCriados?: ClienteCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueCreateNestedManyWithoutAprovadoPorInput
    criadoPor?: FuncionarioCreateNestedOneWithoutFuncionariosCriadosInput
    funcionariosCriados?: FuncionarioCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioUncheckedCreateWithoutOrdensCriadasInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId?: string | null
    clientesCriados?: ClienteUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaUncheckedCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteUncheckedCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueUncheckedCreateNestedManyWithoutAprovadoPorInput
    funcionariosCriados?: FuncionarioUncheckedCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioCreateOrConnectWithoutOrdensCriadasInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutOrdensCriadasInput, FuncionarioUncheckedCreateWithoutOrdensCriadasInput>
  }

  export type FuncionarioCreateWithoutOrdensAprovadasInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    clientesCriados?: ClienteCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoCreateNestedManyWithoutCriadoPorInput
    pecasCriadas?: PecaCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueCreateNestedManyWithoutAprovadoPorInput
    criadoPor?: FuncionarioCreateNestedOneWithoutFuncionariosCriadosInput
    funcionariosCriados?: FuncionarioCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioUncheckedCreateWithoutOrdensAprovadasInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId?: string | null
    clientesCriados?: ClienteUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutCriadoPorInput
    pecasCriadas?: PecaUncheckedCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteUncheckedCreateNestedManyWithoutFuncionariosExecutoresInput
    ordensDeEstoque?: OrdemEstoqueUncheckedCreateNestedManyWithoutAprovadoPorInput
    funcionariosCriados?: FuncionarioUncheckedCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioCreateOrConnectWithoutOrdensAprovadasInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutOrdensAprovadasInput, FuncionarioUncheckedCreateWithoutOrdensAprovadasInput>
  }

  export type PecaCreateWithoutOrdensDeServicoInput = {
    id?: string
    nome: string
    tipo: string
    valor: Decimal | DecimalJsLike | number | string
    quantidade: number
    criadoPor: FuncionarioCreateNestedOneWithoutPecasCriadasInput
  }

  export type PecaUncheckedCreateWithoutOrdensDeServicoInput = {
    id?: string
    nome: string
    tipo: string
    valor: Decimal | DecimalJsLike | number | string
    quantidade: number
    criadoPorId: string
  }

  export type PecaCreateOrConnectWithoutOrdensDeServicoInput = {
    where: PecaWhereUniqueInput
    create: XOR<PecaCreateWithoutOrdensDeServicoInput, PecaUncheckedCreateWithoutOrdensDeServicoInput>
  }

  export type OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput = {
    id?: string
    pagamento: PagamentoCreateNestedOneWithoutOrdensInput
  }

  export type OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput = {
    id?: string
    pagamentoId: string
  }

  export type OrdemServicoPagamentoCreateOrConnectWithoutOrdemDeServicoInput = {
    where: OrdemServicoPagamentoWhereUniqueInput
    create: XOR<OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput, OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput>
  }

  export type OrdemServicoPagamentoCreateManyOrdemDeServicoInputEnvelope = {
    data: OrdemServicoPagamentoCreateManyOrdemDeServicoInput | OrdemServicoPagamentoCreateManyOrdemDeServicoInput[]
    skipDuplicates?: boolean
  }

  export type ServicoCreateWithoutOrdensDeServicoInput = {
    id?: string
    tipoDeServico: string
    valor: Decimal | DecimalJsLike | number | string
    Promocao?: PromocaoCreateNestedManyWithoutServicoInput
  }

  export type ServicoUncheckedCreateWithoutOrdensDeServicoInput = {
    id?: string
    tipoDeServico: string
    valor: Decimal | DecimalJsLike | number | string
    Promocao?: PromocaoUncheckedCreateNestedManyWithoutServicoInput
  }

  export type ServicoCreateOrConnectWithoutOrdensDeServicoInput = {
    where: ServicoWhereUniqueInput
    create: XOR<ServicoCreateWithoutOrdensDeServicoInput, ServicoUncheckedCreateWithoutOrdensDeServicoInput>
  }

  export type OrdemEstoqueCreateWithoutOrdemDeServicoInput = {
    id?: string
    pecaAprovada?: boolean
    mensagem?: string | null
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensDeEstoqueInput
  }

  export type OrdemEstoqueUncheckedCreateWithoutOrdemDeServicoInput = {
    id?: string
    pecaAprovada?: boolean
    mensagem?: string | null
    aprovadoPorId?: string | null
  }

  export type OrdemEstoqueCreateOrConnectWithoutOrdemDeServicoInput = {
    where: OrdemEstoqueWhereUniqueInput
    create: XOR<OrdemEstoqueCreateWithoutOrdemDeServicoInput, OrdemEstoqueUncheckedCreateWithoutOrdemDeServicoInput>
  }

  export type NotificacaoCreateWithoutOrdemServicoInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    cliente: ClienteCreateNestedOneWithoutNotificacoesInput
    promocao?: PromocaoCreateNestedOneWithoutNotificacoesInput
    revisao?: RevisaoCreateNestedOneWithoutNotificacaoInput
  }

  export type NotificacaoUncheckedCreateWithoutOrdemServicoInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    clienteId: string
    revisaoId?: string | null
    promocaoId?: string | null
  }

  export type NotificacaoCreateOrConnectWithoutOrdemServicoInput = {
    where: NotificacaoWhereUniqueInput
    create: XOR<NotificacaoCreateWithoutOrdemServicoInput, NotificacaoUncheckedCreateWithoutOrdemServicoInput>
  }

  export type NotificacaoCreateManyOrdemServicoInputEnvelope = {
    data: NotificacaoCreateManyOrdemServicoInput | NotificacaoCreateManyOrdemServicoInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithoutOrdensDeServicoInput = {
    update: XOR<ClienteUpdateWithoutOrdensDeServicoInput, ClienteUncheckedUpdateWithoutOrdensDeServicoInput>
    create: XOR<ClienteCreateWithoutOrdensDeServicoInput, ClienteUncheckedCreateWithoutOrdensDeServicoInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutOrdensDeServicoInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutOrdensDeServicoInput, ClienteUncheckedUpdateWithoutOrdensDeServicoInput>
  }

  export type ClienteUpdateWithoutOrdensDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUpdateManyWithoutClienteNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutClientesCriadosNestedInput
    funcionariosExecutores?: FuncionarioUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutOrdensDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUncheckedUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUncheckedUpdateManyWithoutClienteNestedInput
    funcionariosExecutores?: FuncionarioUncheckedUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type FuncionarioUpsertWithoutOrdensCriadasInput = {
    update: XOR<FuncionarioUpdateWithoutOrdensCriadasInput, FuncionarioUncheckedUpdateWithoutOrdensCriadasInput>
    create: XOR<FuncionarioCreateWithoutOrdensCriadasInput, FuncionarioUncheckedCreateWithoutOrdensCriadasInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutOrdensCriadasInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutOrdensCriadasInput, FuncionarioUncheckedUpdateWithoutOrdensCriadasInput>
  }

  export type FuncionarioUpdateWithoutOrdensCriadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    clientesCriados?: ClienteUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUpdateManyWithoutAprovadoPorNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutFuncionariosCriadosNestedInput
    funcionariosCriados?: FuncionarioUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutOrdensCriadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    clientesCriados?: ClienteUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUncheckedUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorNestedInput
    funcionariosCriados?: FuncionarioUncheckedUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUpsertWithoutOrdensAprovadasInput = {
    update: XOR<FuncionarioUpdateWithoutOrdensAprovadasInput, FuncionarioUncheckedUpdateWithoutOrdensAprovadasInput>
    create: XOR<FuncionarioCreateWithoutOrdensAprovadasInput, FuncionarioUncheckedCreateWithoutOrdensAprovadasInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutOrdensAprovadasInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutOrdensAprovadasInput, FuncionarioUncheckedUpdateWithoutOrdensAprovadasInput>
  }

  export type FuncionarioUpdateWithoutOrdensAprovadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    clientesCriados?: ClienteUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUpdateManyWithoutCriadoPorNestedInput
    pecasCriadas?: PecaUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUpdateManyWithoutAprovadoPorNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutFuncionariosCriadosNestedInput
    funcionariosCriados?: FuncionarioUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutOrdensAprovadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    clientesCriados?: ClienteUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorNestedInput
    pecasCriadas?: PecaUncheckedUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorNestedInput
    funcionariosCriados?: FuncionarioUncheckedUpdateManyWithoutCriadoPorNestedInput
  }

  export type PecaUpsertWithWhereUniqueWithoutOrdensDeServicoInput = {
    where: PecaWhereUniqueInput
    update: XOR<PecaUpdateWithoutOrdensDeServicoInput, PecaUncheckedUpdateWithoutOrdensDeServicoInput>
    create: XOR<PecaCreateWithoutOrdensDeServicoInput, PecaUncheckedCreateWithoutOrdensDeServicoInput>
  }

  export type PecaUpdateWithWhereUniqueWithoutOrdensDeServicoInput = {
    where: PecaWhereUniqueInput
    data: XOR<PecaUpdateWithoutOrdensDeServicoInput, PecaUncheckedUpdateWithoutOrdensDeServicoInput>
  }

  export type PecaUpdateManyWithWhereWithoutOrdensDeServicoInput = {
    where: PecaScalarWhereInput
    data: XOR<PecaUpdateManyMutationInput, PecaUncheckedUpdateManyWithoutOrdensDeServicoInput>
  }

  export type OrdemServicoPagamentoUpsertWithWhereUniqueWithoutOrdemDeServicoInput = {
    where: OrdemServicoPagamentoWhereUniqueInput
    update: XOR<OrdemServicoPagamentoUpdateWithoutOrdemDeServicoInput, OrdemServicoPagamentoUncheckedUpdateWithoutOrdemDeServicoInput>
    create: XOR<OrdemServicoPagamentoCreateWithoutOrdemDeServicoInput, OrdemServicoPagamentoUncheckedCreateWithoutOrdemDeServicoInput>
  }

  export type OrdemServicoPagamentoUpdateWithWhereUniqueWithoutOrdemDeServicoInput = {
    where: OrdemServicoPagamentoWhereUniqueInput
    data: XOR<OrdemServicoPagamentoUpdateWithoutOrdemDeServicoInput, OrdemServicoPagamentoUncheckedUpdateWithoutOrdemDeServicoInput>
  }

  export type OrdemServicoPagamentoUpdateManyWithWhereWithoutOrdemDeServicoInput = {
    where: OrdemServicoPagamentoScalarWhereInput
    data: XOR<OrdemServicoPagamentoUpdateManyMutationInput, OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoInput>
  }

  export type OrdemServicoPagamentoScalarWhereInput = {
    AND?: OrdemServicoPagamentoScalarWhereInput | OrdemServicoPagamentoScalarWhereInput[]
    OR?: OrdemServicoPagamentoScalarWhereInput[]
    NOT?: OrdemServicoPagamentoScalarWhereInput | OrdemServicoPagamentoScalarWhereInput[]
    id?: StringFilter<"OrdemServicoPagamento"> | string
    ordemDeServicoId?: StringFilter<"OrdemServicoPagamento"> | string
    pagamentoId?: StringFilter<"OrdemServicoPagamento"> | string
  }

  export type ServicoUpsertWithoutOrdensDeServicoInput = {
    update: XOR<ServicoUpdateWithoutOrdensDeServicoInput, ServicoUncheckedUpdateWithoutOrdensDeServicoInput>
    create: XOR<ServicoCreateWithoutOrdensDeServicoInput, ServicoUncheckedCreateWithoutOrdensDeServicoInput>
    where?: ServicoWhereInput
  }

  export type ServicoUpdateToOneWithWhereWithoutOrdensDeServicoInput = {
    where?: ServicoWhereInput
    data: XOR<ServicoUpdateWithoutOrdensDeServicoInput, ServicoUncheckedUpdateWithoutOrdensDeServicoInput>
  }

  export type ServicoUpdateWithoutOrdensDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeServico?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Promocao?: PromocaoUpdateManyWithoutServicoNestedInput
  }

  export type ServicoUncheckedUpdateWithoutOrdensDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeServico?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Promocao?: PromocaoUncheckedUpdateManyWithoutServicoNestedInput
  }

  export type OrdemEstoqueUpsertWithoutOrdemDeServicoInput = {
    update: XOR<OrdemEstoqueUpdateWithoutOrdemDeServicoInput, OrdemEstoqueUncheckedUpdateWithoutOrdemDeServicoInput>
    create: XOR<OrdemEstoqueCreateWithoutOrdemDeServicoInput, OrdemEstoqueUncheckedCreateWithoutOrdemDeServicoInput>
    where?: OrdemEstoqueWhereInput
  }

  export type OrdemEstoqueUpdateToOneWithWhereWithoutOrdemDeServicoInput = {
    where?: OrdemEstoqueWhereInput
    data: XOR<OrdemEstoqueUpdateWithoutOrdemDeServicoInput, OrdemEstoqueUncheckedUpdateWithoutOrdemDeServicoInput>
  }

  export type OrdemEstoqueUpdateWithoutOrdemDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    pecaAprovada?: BoolFieldUpdateOperationsInput | boolean
    mensagem?: NullableStringFieldUpdateOperationsInput | string | null
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensDeEstoqueNestedInput
  }

  export type OrdemEstoqueUncheckedUpdateWithoutOrdemDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    pecaAprovada?: BoolFieldUpdateOperationsInput | boolean
    mensagem?: NullableStringFieldUpdateOperationsInput | string | null
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificacaoUpsertWithWhereUniqueWithoutOrdemServicoInput = {
    where: NotificacaoWhereUniqueInput
    update: XOR<NotificacaoUpdateWithoutOrdemServicoInput, NotificacaoUncheckedUpdateWithoutOrdemServicoInput>
    create: XOR<NotificacaoCreateWithoutOrdemServicoInput, NotificacaoUncheckedCreateWithoutOrdemServicoInput>
  }

  export type NotificacaoUpdateWithWhereUniqueWithoutOrdemServicoInput = {
    where: NotificacaoWhereUniqueInput
    data: XOR<NotificacaoUpdateWithoutOrdemServicoInput, NotificacaoUncheckedUpdateWithoutOrdemServicoInput>
  }

  export type NotificacaoUpdateManyWithWhereWithoutOrdemServicoInput = {
    where: NotificacaoScalarWhereInput
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyWithoutOrdemServicoInput>
  }

  export type OrdemDeServicoCreateWithoutOrdemDeEstoqueInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    aprovado?: boolean
    cliente: ClienteCreateNestedOneWithoutOrdensDeServicoInput
    criadoPor: FuncionarioCreateNestedOneWithoutOrdensCriadasInput
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensAprovadasInput
    pecasUsadas?: PecaCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoCreateNestedManyWithoutOrdemDeServicoInput
    servico?: ServicoCreateNestedOneWithoutOrdensDeServicoInput
    Notificacao?: NotificacaoCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoUncheckedCreateWithoutOrdemDeEstoqueInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
    pecasUsadas?: PecaUncheckedCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoUncheckedCreateNestedManyWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoCreateOrConnectWithoutOrdemDeEstoqueInput = {
    where: OrdemDeServicoWhereUniqueInput
    create: XOR<OrdemDeServicoCreateWithoutOrdemDeEstoqueInput, OrdemDeServicoUncheckedCreateWithoutOrdemDeEstoqueInput>
  }

  export type FuncionarioCreateWithoutOrdensDeEstoqueInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    clientesCriados?: ClienteCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteCreateNestedManyWithoutFuncionariosExecutoresInput
    criadoPor?: FuncionarioCreateNestedOneWithoutFuncionariosCriadosInput
    funcionariosCriados?: FuncionarioCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioUncheckedCreateWithoutOrdensDeEstoqueInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
    criadoPorId?: string | null
    clientesCriados?: ClienteUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensCriadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutCriadoPorInput
    ordensAprovadas?: OrdemDeServicoUncheckedCreateNestedManyWithoutAprovadoPorInput
    pecasCriadas?: PecaUncheckedCreateNestedManyWithoutCriadoPorInput
    servicosExecutados?: ClienteUncheckedCreateNestedManyWithoutFuncionariosExecutoresInput
    funcionariosCriados?: FuncionarioUncheckedCreateNestedManyWithoutCriadoPorInput
  }

  export type FuncionarioCreateOrConnectWithoutOrdensDeEstoqueInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutOrdensDeEstoqueInput, FuncionarioUncheckedCreateWithoutOrdensDeEstoqueInput>
  }

  export type OrdemDeServicoUpsertWithoutOrdemDeEstoqueInput = {
    update: XOR<OrdemDeServicoUpdateWithoutOrdemDeEstoqueInput, OrdemDeServicoUncheckedUpdateWithoutOrdemDeEstoqueInput>
    create: XOR<OrdemDeServicoCreateWithoutOrdemDeEstoqueInput, OrdemDeServicoUncheckedCreateWithoutOrdemDeEstoqueInput>
    where?: OrdemDeServicoWhereInput
  }

  export type OrdemDeServicoUpdateToOneWithWhereWithoutOrdemDeEstoqueInput = {
    where?: OrdemDeServicoWhereInput
    data: XOR<OrdemDeServicoUpdateWithoutOrdemDeEstoqueInput, OrdemDeServicoUncheckedUpdateWithoutOrdemDeEstoqueInput>
  }

  export type OrdemDeServicoUpdateWithoutOrdemDeEstoqueInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClienteUpdateOneRequiredWithoutOrdensDeServicoNestedInput
    criadoPor?: FuncionarioUpdateOneRequiredWithoutOrdensCriadasNestedInput
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensAprovadasNestedInput
    pecasUsadas?: PecaUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUpdateManyWithoutOrdemDeServicoNestedInput
    servico?: ServicoUpdateOneWithoutOrdensDeServicoNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateWithoutOrdemDeEstoqueInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecasUsadas?: PecaUncheckedUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutOrdemServicoNestedInput
  }

  export type FuncionarioUpsertWithoutOrdensDeEstoqueInput = {
    update: XOR<FuncionarioUpdateWithoutOrdensDeEstoqueInput, FuncionarioUncheckedUpdateWithoutOrdensDeEstoqueInput>
    create: XOR<FuncionarioCreateWithoutOrdensDeEstoqueInput, FuncionarioUncheckedCreateWithoutOrdensDeEstoqueInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutOrdensDeEstoqueInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutOrdensDeEstoqueInput, FuncionarioUncheckedUpdateWithoutOrdensDeEstoqueInput>
  }

  export type FuncionarioUpdateWithoutOrdensDeEstoqueInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    clientesCriados?: ClienteUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUpdateManyWithoutFuncionariosExecutoresNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutFuncionariosCriadosNestedInput
    funcionariosCriados?: FuncionarioUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutOrdensDeEstoqueInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    clientesCriados?: ClienteUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUncheckedUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresNestedInput
    funcionariosCriados?: FuncionarioUncheckedUpdateManyWithoutCriadoPorNestedInput
  }

  export type CarroCreateWithoutRevisoesInput = {
    id?: string
    placa: string
    modelo: string
    ano: number
    cliente: ClienteCreateNestedOneWithoutCarrosInput
  }

  export type CarroUncheckedCreateWithoutRevisoesInput = {
    id?: string
    placa: string
    modelo: string
    ano: number
    clienteId: string
  }

  export type CarroCreateOrConnectWithoutRevisoesInput = {
    where: CarroWhereUniqueInput
    create: XOR<CarroCreateWithoutRevisoesInput, CarroUncheckedCreateWithoutRevisoesInput>
  }

  export type ClienteCreateWithoutRevisoesInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    carros?: CarroCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutClienteInput
    criadoPor?: FuncionarioCreateNestedOneWithoutClientesCriadosInput
    funcionariosExecutores?: FuncionarioCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutRevisoesInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    criadoPorId?: string | null
    carros?: CarroUncheckedCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutClienteInput
    funcionariosExecutores?: FuncionarioUncheckedCreateNestedManyWithoutServicosExecutadosInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutRevisoesInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutRevisoesInput, ClienteUncheckedCreateWithoutRevisoesInput>
  }

  export type NotificacaoCreateWithoutRevisaoInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    cliente: ClienteCreateNestedOneWithoutNotificacoesInput
    promocao?: PromocaoCreateNestedOneWithoutNotificacoesInput
    ordemServico?: OrdemDeServicoCreateNestedOneWithoutNotificacaoInput
  }

  export type NotificacaoUncheckedCreateWithoutRevisaoInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    clienteId: string
    ordemServicoId?: string | null
    promocaoId?: string | null
  }

  export type NotificacaoCreateOrConnectWithoutRevisaoInput = {
    where: NotificacaoWhereUniqueInput
    create: XOR<NotificacaoCreateWithoutRevisaoInput, NotificacaoUncheckedCreateWithoutRevisaoInput>
  }

  export type NotificacaoCreateManyRevisaoInputEnvelope = {
    data: NotificacaoCreateManyRevisaoInput | NotificacaoCreateManyRevisaoInput[]
    skipDuplicates?: boolean
  }

  export type CarroUpsertWithoutRevisoesInput = {
    update: XOR<CarroUpdateWithoutRevisoesInput, CarroUncheckedUpdateWithoutRevisoesInput>
    create: XOR<CarroCreateWithoutRevisoesInput, CarroUncheckedCreateWithoutRevisoesInput>
    where?: CarroWhereInput
  }

  export type CarroUpdateToOneWithWhereWithoutRevisoesInput = {
    where?: CarroWhereInput
    data: XOR<CarroUpdateWithoutRevisoesInput, CarroUncheckedUpdateWithoutRevisoesInput>
  }

  export type CarroUpdateWithoutRevisoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    cliente?: ClienteUpdateOneRequiredWithoutCarrosNestedInput
  }

  export type CarroUncheckedUpdateWithoutRevisoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    clienteId?: StringFieldUpdateOperationsInput | string
  }

  export type ClienteUpsertWithoutRevisoesInput = {
    update: XOR<ClienteUpdateWithoutRevisoesInput, ClienteUncheckedUpdateWithoutRevisoesInput>
    create: XOR<ClienteCreateWithoutRevisoesInput, ClienteUncheckedCreateWithoutRevisoesInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutRevisoesInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutRevisoesInput, ClienteUncheckedUpdateWithoutRevisoesInput>
  }

  export type ClienteUpdateWithoutRevisoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutClienteNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutClientesCriadosNestedInput
    funcionariosExecutores?: FuncionarioUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutRevisoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUncheckedUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutClienteNestedInput
    funcionariosExecutores?: FuncionarioUncheckedUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type NotificacaoUpsertWithWhereUniqueWithoutRevisaoInput = {
    where: NotificacaoWhereUniqueInput
    update: XOR<NotificacaoUpdateWithoutRevisaoInput, NotificacaoUncheckedUpdateWithoutRevisaoInput>
    create: XOR<NotificacaoCreateWithoutRevisaoInput, NotificacaoUncheckedCreateWithoutRevisaoInput>
  }

  export type NotificacaoUpdateWithWhereUniqueWithoutRevisaoInput = {
    where: NotificacaoWhereUniqueInput
    data: XOR<NotificacaoUpdateWithoutRevisaoInput, NotificacaoUncheckedUpdateWithoutRevisaoInput>
  }

  export type NotificacaoUpdateManyWithWhereWithoutRevisaoInput = {
    where: NotificacaoScalarWhereInput
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyWithoutRevisaoInput>
  }

  export type OrdemServicoPagamentoCreateWithoutPagamentoInput = {
    id?: string
    ordemDeServico: OrdemDeServicoCreateNestedOneWithoutPagamentosInput
  }

  export type OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput = {
    id?: string
    ordemDeServicoId: string
  }

  export type OrdemServicoPagamentoCreateOrConnectWithoutPagamentoInput = {
    where: OrdemServicoPagamentoWhereUniqueInput
    create: XOR<OrdemServicoPagamentoCreateWithoutPagamentoInput, OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput>
  }

  export type OrdemServicoPagamentoCreateManyPagamentoInputEnvelope = {
    data: OrdemServicoPagamentoCreateManyPagamentoInput | OrdemServicoPagamentoCreateManyPagamentoInput[]
    skipDuplicates?: boolean
  }

  export type OrdemServicoPagamentoUpsertWithWhereUniqueWithoutPagamentoInput = {
    where: OrdemServicoPagamentoWhereUniqueInput
    update: XOR<OrdemServicoPagamentoUpdateWithoutPagamentoInput, OrdemServicoPagamentoUncheckedUpdateWithoutPagamentoInput>
    create: XOR<OrdemServicoPagamentoCreateWithoutPagamentoInput, OrdemServicoPagamentoUncheckedCreateWithoutPagamentoInput>
  }

  export type OrdemServicoPagamentoUpdateWithWhereUniqueWithoutPagamentoInput = {
    where: OrdemServicoPagamentoWhereUniqueInput
    data: XOR<OrdemServicoPagamentoUpdateWithoutPagamentoInput, OrdemServicoPagamentoUncheckedUpdateWithoutPagamentoInput>
  }

  export type OrdemServicoPagamentoUpdateManyWithWhereWithoutPagamentoInput = {
    where: OrdemServicoPagamentoScalarWhereInput
    data: XOR<OrdemServicoPagamentoUpdateManyMutationInput, OrdemServicoPagamentoUncheckedUpdateManyWithoutPagamentoInput>
  }

  export type OrdemDeServicoCreateWithoutPagamentosInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    aprovado?: boolean
    cliente: ClienteCreateNestedOneWithoutOrdensDeServicoInput
    criadoPor: FuncionarioCreateNestedOneWithoutOrdensCriadasInput
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensAprovadasInput
    pecasUsadas?: PecaCreateNestedManyWithoutOrdensDeServicoInput
    servico?: ServicoCreateNestedOneWithoutOrdensDeServicoInput
    ordemDeEstoque?: OrdemEstoqueCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoUncheckedCreateWithoutPagamentosInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
    pecasUsadas?: PecaUncheckedCreateNestedManyWithoutOrdensDeServicoInput
    ordemDeEstoque?: OrdemEstoqueUncheckedCreateNestedOneWithoutOrdemDeServicoInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutOrdemServicoInput
  }

  export type OrdemDeServicoCreateOrConnectWithoutPagamentosInput = {
    where: OrdemDeServicoWhereUniqueInput
    create: XOR<OrdemDeServicoCreateWithoutPagamentosInput, OrdemDeServicoUncheckedCreateWithoutPagamentosInput>
  }

  export type PagamentoCreateWithoutOrdensInput = {
    id?: string
    formaDePagamento: $Enums.FormaPagamento
  }

  export type PagamentoUncheckedCreateWithoutOrdensInput = {
    id?: string
    formaDePagamento: $Enums.FormaPagamento
  }

  export type PagamentoCreateOrConnectWithoutOrdensInput = {
    where: PagamentoWhereUniqueInput
    create: XOR<PagamentoCreateWithoutOrdensInput, PagamentoUncheckedCreateWithoutOrdensInput>
  }

  export type OrdemDeServicoUpsertWithoutPagamentosInput = {
    update: XOR<OrdemDeServicoUpdateWithoutPagamentosInput, OrdemDeServicoUncheckedUpdateWithoutPagamentosInput>
    create: XOR<OrdemDeServicoCreateWithoutPagamentosInput, OrdemDeServicoUncheckedCreateWithoutPagamentosInput>
    where?: OrdemDeServicoWhereInput
  }

  export type OrdemDeServicoUpdateToOneWithWhereWithoutPagamentosInput = {
    where?: OrdemDeServicoWhereInput
    data: XOR<OrdemDeServicoUpdateWithoutPagamentosInput, OrdemDeServicoUncheckedUpdateWithoutPagamentosInput>
  }

  export type OrdemDeServicoUpdateWithoutPagamentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClienteUpdateOneRequiredWithoutOrdensDeServicoNestedInput
    criadoPor?: FuncionarioUpdateOneRequiredWithoutOrdensCriadasNestedInput
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensAprovadasNestedInput
    pecasUsadas?: PecaUpdateManyWithoutOrdensDeServicoNestedInput
    servico?: ServicoUpdateOneWithoutOrdensDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateWithoutPagamentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecasUsadas?: PecaUncheckedUpdateManyWithoutOrdensDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUncheckedUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutOrdemServicoNestedInput
  }

  export type PagamentoUpsertWithoutOrdensInput = {
    update: XOR<PagamentoUpdateWithoutOrdensInput, PagamentoUncheckedUpdateWithoutOrdensInput>
    create: XOR<PagamentoCreateWithoutOrdensInput, PagamentoUncheckedCreateWithoutOrdensInput>
    where?: PagamentoWhereInput
  }

  export type PagamentoUpdateToOneWithWhereWithoutOrdensInput = {
    where?: PagamentoWhereInput
    data: XOR<PagamentoUpdateWithoutOrdensInput, PagamentoUncheckedUpdateWithoutOrdensInput>
  }

  export type PagamentoUpdateWithoutOrdensInput = {
    id?: StringFieldUpdateOperationsInput | string
    formaDePagamento?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
  }

  export type PagamentoUncheckedUpdateWithoutOrdensInput = {
    id?: StringFieldUpdateOperationsInput | string
    formaDePagamento?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
  }

  export type ClienteCreateWithoutNotificacoesInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    carros?: CarroCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoCreateNestedManyWithoutClienteInput
    criadoPor?: FuncionarioCreateNestedOneWithoutClientesCriadosInput
    funcionariosExecutores?: FuncionarioCreateNestedManyWithoutServicosExecutadosInput
  }

  export type ClienteUncheckedCreateWithoutNotificacoesInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
    criadoPorId?: string | null
    carros?: CarroUncheckedCreateNestedManyWithoutClienteInput
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutClienteInput
    revisoes?: RevisaoUncheckedCreateNestedManyWithoutClienteInput
    funcionariosExecutores?: FuncionarioUncheckedCreateNestedManyWithoutServicosExecutadosInput
  }

  export type ClienteCreateOrConnectWithoutNotificacoesInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutNotificacoesInput, ClienteUncheckedCreateWithoutNotificacoesInput>
  }

  export type PromocaoCreateWithoutNotificacoesInput = {
    id?: string
    descricao: string
    desconto: number
    servico?: ServicoCreateNestedOneWithoutPromocaoInput
  }

  export type PromocaoUncheckedCreateWithoutNotificacoesInput = {
    id?: string
    descricao: string
    desconto: number
    servicoId?: string | null
  }

  export type PromocaoCreateOrConnectWithoutNotificacoesInput = {
    where: PromocaoWhereUniqueInput
    create: XOR<PromocaoCreateWithoutNotificacoesInput, PromocaoUncheckedCreateWithoutNotificacoesInput>
  }

  export type RevisaoCreateWithoutNotificacaoInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    carro: CarroCreateNestedOneWithoutRevisoesInput
    cliente?: ClienteCreateNestedOneWithoutRevisoesInput
  }

  export type RevisaoUncheckedCreateWithoutNotificacaoInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    carroId: string
    clienteId?: string | null
  }

  export type RevisaoCreateOrConnectWithoutNotificacaoInput = {
    where: RevisaoWhereUniqueInput
    create: XOR<RevisaoCreateWithoutNotificacaoInput, RevisaoUncheckedCreateWithoutNotificacaoInput>
  }

  export type OrdemDeServicoCreateWithoutNotificacaoInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    aprovado?: boolean
    cliente: ClienteCreateNestedOneWithoutOrdensDeServicoInput
    criadoPor: FuncionarioCreateNestedOneWithoutOrdensCriadasInput
    aprovadoPor?: FuncionarioCreateNestedOneWithoutOrdensAprovadasInput
    pecasUsadas?: PecaCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoCreateNestedManyWithoutOrdemDeServicoInput
    servico?: ServicoCreateNestedOneWithoutOrdensDeServicoInput
    ordemDeEstoque?: OrdemEstoqueCreateNestedOneWithoutOrdemDeServicoInput
  }

  export type OrdemDeServicoUncheckedCreateWithoutNotificacaoInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
    pecasUsadas?: PecaUncheckedCreateNestedManyWithoutOrdensDeServicoInput
    pagamentos?: OrdemServicoPagamentoUncheckedCreateNestedManyWithoutOrdemDeServicoInput
    ordemDeEstoque?: OrdemEstoqueUncheckedCreateNestedOneWithoutOrdemDeServicoInput
  }

  export type OrdemDeServicoCreateOrConnectWithoutNotificacaoInput = {
    where: OrdemDeServicoWhereUniqueInput
    create: XOR<OrdemDeServicoCreateWithoutNotificacaoInput, OrdemDeServicoUncheckedCreateWithoutNotificacaoInput>
  }

  export type ClienteUpsertWithoutNotificacoesInput = {
    update: XOR<ClienteUpdateWithoutNotificacoesInput, ClienteUncheckedUpdateWithoutNotificacoesInput>
    create: XOR<ClienteCreateWithoutNotificacoesInput, ClienteUncheckedCreateWithoutNotificacoesInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutNotificacoesInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutNotificacoesInput, ClienteUncheckedUpdateWithoutNotificacoesInput>
  }

  export type ClienteUpdateWithoutNotificacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUpdateManyWithoutClienteNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutClientesCriadosNestedInput
    funcionariosExecutores?: FuncionarioUpdateManyWithoutServicosExecutadosNestedInput
  }

  export type ClienteUncheckedUpdateWithoutNotificacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUncheckedUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUncheckedUpdateManyWithoutClienteNestedInput
    funcionariosExecutores?: FuncionarioUncheckedUpdateManyWithoutServicosExecutadosNestedInput
  }

  export type PromocaoUpsertWithoutNotificacoesInput = {
    update: XOR<PromocaoUpdateWithoutNotificacoesInput, PromocaoUncheckedUpdateWithoutNotificacoesInput>
    create: XOR<PromocaoCreateWithoutNotificacoesInput, PromocaoUncheckedCreateWithoutNotificacoesInput>
    where?: PromocaoWhereInput
  }

  export type PromocaoUpdateToOneWithWhereWithoutNotificacoesInput = {
    where?: PromocaoWhereInput
    data: XOR<PromocaoUpdateWithoutNotificacoesInput, PromocaoUncheckedUpdateWithoutNotificacoesInput>
  }

  export type PromocaoUpdateWithoutNotificacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    servico?: ServicoUpdateOneWithoutPromocaoNestedInput
  }

  export type PromocaoUncheckedUpdateWithoutNotificacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RevisaoUpsertWithoutNotificacaoInput = {
    update: XOR<RevisaoUpdateWithoutNotificacaoInput, RevisaoUncheckedUpdateWithoutNotificacaoInput>
    create: XOR<RevisaoCreateWithoutNotificacaoInput, RevisaoUncheckedCreateWithoutNotificacaoInput>
    where?: RevisaoWhereInput
  }

  export type RevisaoUpdateToOneWithWhereWithoutNotificacaoInput = {
    where?: RevisaoWhereInput
    data: XOR<RevisaoUpdateWithoutNotificacaoInput, RevisaoUncheckedUpdateWithoutNotificacaoInput>
  }

  export type RevisaoUpdateWithoutNotificacaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    carro?: CarroUpdateOneRequiredWithoutRevisoesNestedInput
    cliente?: ClienteUpdateOneWithoutRevisoesNestedInput
  }

  export type RevisaoUncheckedUpdateWithoutNotificacaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    carroId?: StringFieldUpdateOperationsInput | string
    clienteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemDeServicoUpsertWithoutNotificacaoInput = {
    update: XOR<OrdemDeServicoUpdateWithoutNotificacaoInput, OrdemDeServicoUncheckedUpdateWithoutNotificacaoInput>
    create: XOR<OrdemDeServicoCreateWithoutNotificacaoInput, OrdemDeServicoUncheckedCreateWithoutNotificacaoInput>
    where?: OrdemDeServicoWhereInput
  }

  export type OrdemDeServicoUpdateToOneWithWhereWithoutNotificacaoInput = {
    where?: OrdemDeServicoWhereInput
    data: XOR<OrdemDeServicoUpdateWithoutNotificacaoInput, OrdemDeServicoUncheckedUpdateWithoutNotificacaoInput>
  }

  export type OrdemDeServicoUpdateWithoutNotificacaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClienteUpdateOneRequiredWithoutOrdensDeServicoNestedInput
    criadoPor?: FuncionarioUpdateOneRequiredWithoutOrdensCriadasNestedInput
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensAprovadasNestedInput
    pecasUsadas?: PecaUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUpdateManyWithoutOrdemDeServicoNestedInput
    servico?: ServicoUpdateOneWithoutOrdensDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUpdateOneWithoutOrdemDeServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateWithoutNotificacaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecasUsadas?: PecaUncheckedUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUncheckedUpdateOneWithoutOrdemDeServicoNestedInput
  }

  export type ServicoCreateWithoutPromocaoInput = {
    id?: string
    tipoDeServico: string
    valor: Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoCreateNestedManyWithoutServicoInput
  }

  export type ServicoUncheckedCreateWithoutPromocaoInput = {
    id?: string
    tipoDeServico: string
    valor: Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoUncheckedCreateNestedManyWithoutServicoInput
  }

  export type ServicoCreateOrConnectWithoutPromocaoInput = {
    where: ServicoWhereUniqueInput
    create: XOR<ServicoCreateWithoutPromocaoInput, ServicoUncheckedCreateWithoutPromocaoInput>
  }

  export type NotificacaoCreateWithoutPromocaoInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    cliente: ClienteCreateNestedOneWithoutNotificacoesInput
    revisao?: RevisaoCreateNestedOneWithoutNotificacaoInput
    ordemServico?: OrdemDeServicoCreateNestedOneWithoutNotificacaoInput
  }

  export type NotificacaoUncheckedCreateWithoutPromocaoInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    clienteId: string
    revisaoId?: string | null
    ordemServicoId?: string | null
  }

  export type NotificacaoCreateOrConnectWithoutPromocaoInput = {
    where: NotificacaoWhereUniqueInput
    create: XOR<NotificacaoCreateWithoutPromocaoInput, NotificacaoUncheckedCreateWithoutPromocaoInput>
  }

  export type NotificacaoCreateManyPromocaoInputEnvelope = {
    data: NotificacaoCreateManyPromocaoInput | NotificacaoCreateManyPromocaoInput[]
    skipDuplicates?: boolean
  }

  export type ServicoUpsertWithoutPromocaoInput = {
    update: XOR<ServicoUpdateWithoutPromocaoInput, ServicoUncheckedUpdateWithoutPromocaoInput>
    create: XOR<ServicoCreateWithoutPromocaoInput, ServicoUncheckedCreateWithoutPromocaoInput>
    where?: ServicoWhereInput
  }

  export type ServicoUpdateToOneWithWhereWithoutPromocaoInput = {
    where?: ServicoWhereInput
    data: XOR<ServicoUpdateWithoutPromocaoInput, ServicoUncheckedUpdateWithoutPromocaoInput>
  }

  export type ServicoUpdateWithoutPromocaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeServico?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutServicoNestedInput
  }

  export type ServicoUncheckedUpdateWithoutPromocaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeServico?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutServicoNestedInput
  }

  export type NotificacaoUpsertWithWhereUniqueWithoutPromocaoInput = {
    where: NotificacaoWhereUniqueInput
    update: XOR<NotificacaoUpdateWithoutPromocaoInput, NotificacaoUncheckedUpdateWithoutPromocaoInput>
    create: XOR<NotificacaoCreateWithoutPromocaoInput, NotificacaoUncheckedCreateWithoutPromocaoInput>
  }

  export type NotificacaoUpdateWithWhereUniqueWithoutPromocaoInput = {
    where: NotificacaoWhereUniqueInput
    data: XOR<NotificacaoUpdateWithoutPromocaoInput, NotificacaoUncheckedUpdateWithoutPromocaoInput>
  }

  export type NotificacaoUpdateManyWithWhereWithoutPromocaoInput = {
    where: NotificacaoScalarWhereInput
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyWithoutPromocaoInput>
  }

  export type CarroCreateManyClienteInput = {
    id?: string
    placa: string
    modelo: string
    ano: number
  }

  export type OrdemDeServicoCreateManyClienteInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
  }

  export type RevisaoCreateManyClienteInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    carroId: string
  }

  export type NotificacaoCreateManyClienteInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    revisaoId?: string | null
    ordemServicoId?: string | null
    promocaoId?: string | null
  }

  export type CarroUpdateWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    revisoes?: RevisaoUpdateManyWithoutCarroNestedInput
  }

  export type CarroUncheckedUpdateWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    revisoes?: RevisaoUncheckedUpdateManyWithoutCarroNestedInput
  }

  export type CarroUncheckedUpdateManyWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
  }

  export type OrdemDeServicoUpdateWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    criadoPor?: FuncionarioUpdateOneRequiredWithoutOrdensCriadasNestedInput
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensAprovadasNestedInput
    pecasUsadas?: PecaUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUpdateManyWithoutOrdemDeServicoNestedInput
    servico?: ServicoUpdateOneWithoutOrdensDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecasUsadas?: PecaUncheckedUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUncheckedUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RevisaoUpdateWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    carro?: CarroUpdateOneRequiredWithoutRevisoesNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutRevisaoNestedInput
  }

  export type RevisaoUncheckedUpdateWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    carroId?: StringFieldUpdateOperationsInput | string
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutRevisaoNestedInput
  }

  export type RevisaoUncheckedUpdateManyWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    carroId?: StringFieldUpdateOperationsInput | string
  }

  export type FuncionarioUpdateWithoutServicosExecutadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    clientesCriados?: ClienteUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUpdateManyWithoutCriadoPorNestedInput
    ordensDeEstoque?: OrdemEstoqueUpdateManyWithoutAprovadoPorNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutFuncionariosCriadosNestedInput
    funcionariosCriados?: FuncionarioUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutServicosExecutadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    clientesCriados?: ClienteUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensDeEstoque?: OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorNestedInput
    funcionariosCriados?: FuncionarioUncheckedUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateManyWithoutServicosExecutadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificacaoUpdateWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    promocao?: PromocaoUpdateOneWithoutNotificacoesNestedInput
    revisao?: RevisaoUpdateOneWithoutNotificacaoNestedInput
    ordemServico?: OrdemDeServicoUpdateOneWithoutNotificacaoNestedInput
  }

  export type NotificacaoUncheckedUpdateWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    revisaoId?: NullableStringFieldUpdateOperationsInput | string | null
    ordemServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    promocaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificacaoUncheckedUpdateManyWithoutClienteInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    revisaoId?: NullableStringFieldUpdateOperationsInput | string | null
    ordemServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    promocaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClienteCreateManyCriadoPorInput = {
    id?: string
    nome: string
    telefone?: string | null
    email: string
    cpf?: string | null
    cnpj?: string | null
    dataDeNascimento?: Date | string | null
    password: string
    tipo?: $Enums.TipoCliente
    clienteCadastrador?: string | null
  }

  export type OrdemDeServicoCreateManyCriadoPorInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
    servicoId?: string | null
  }

  export type OrdemDeServicoCreateManyAprovadoPorInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    servicoId?: string | null
  }

  export type PecaCreateManyCriadoPorInput = {
    id?: string
    nome: string
    tipo: string
    valor: Decimal | DecimalJsLike | number | string
    quantidade: number
  }

  export type OrdemEstoqueCreateManyAprovadoPorInput = {
    id?: string
    ordemDeServicoId?: string | null
    pecaAprovada?: boolean
    mensagem?: string | null
  }

  export type FuncionarioCreateManyCriadoPorInput = {
    id?: string
    nome: string
    username: string
    cpf: string
    dataDeNascimento: Date | string
    email: string
    senha: string
    telefone?: string | null
    tipo: $Enums.TipoFuncionario
  }

  export type ClienteUpdateWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUpdateManyWithoutClienteNestedInput
    funcionariosExecutores?: FuncionarioUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUncheckedUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUncheckedUpdateManyWithoutClienteNestedInput
    funcionariosExecutores?: FuncionarioUncheckedUpdateManyWithoutServicosExecutadosNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateManyWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemDeServicoUpdateWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClienteUpdateOneRequiredWithoutOrdensDeServicoNestedInput
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensAprovadasNestedInput
    pecasUsadas?: PecaUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUpdateManyWithoutOrdemDeServicoNestedInput
    servico?: ServicoUpdateOneWithoutOrdensDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecasUsadas?: PecaUncheckedUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUncheckedUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemDeServicoUpdateWithoutAprovadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClienteUpdateOneRequiredWithoutOrdensDeServicoNestedInput
    criadoPor?: FuncionarioUpdateOneRequiredWithoutOrdensCriadasNestedInput
    pecasUsadas?: PecaUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUpdateManyWithoutOrdemDeServicoNestedInput
    servico?: ServicoUpdateOneWithoutOrdensDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateWithoutAprovadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecasUsadas?: PecaUncheckedUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUncheckedUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PecaUpdateWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutPecasUsadasNestedInput
  }

  export type PecaUncheckedUpdateWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutPecasUsadasNestedInput
  }

  export type PecaUncheckedUpdateManyWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
  }

  export type ClienteUpdateWithoutFuncionariosExecutoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUpdateManyWithoutClienteNestedInput
    criadoPor?: FuncionarioUpdateOneWithoutClientesCriadosNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutFuncionariosExecutoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    carros?: CarroUncheckedUpdateManyWithoutClienteNestedInput
    ordensDeServico?: OrdemDeServicoUncheckedUpdateManyWithoutClienteNestedInput
    revisoes?: RevisaoUncheckedUpdateManyWithoutClienteNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    dataDeNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    password?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    clienteCadastrador?: NullableStringFieldUpdateOperationsInput | string | null
    criadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemEstoqueUpdateWithoutAprovadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    pecaAprovada?: BoolFieldUpdateOperationsInput | boolean
    mensagem?: NullableStringFieldUpdateOperationsInput | string | null
    ordemDeServico?: OrdemDeServicoUpdateOneWithoutOrdemDeEstoqueNestedInput
  }

  export type OrdemEstoqueUncheckedUpdateWithoutAprovadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecaAprovada?: BoolFieldUpdateOperationsInput | boolean
    mensagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pecaAprovada?: BoolFieldUpdateOperationsInput | boolean
    mensagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FuncionarioUpdateWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    clientesCriados?: ClienteUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUpdateManyWithoutAprovadoPorNestedInput
    funcionariosCriados?: FuncionarioUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
    clientesCriados?: ClienteUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensCriadas?: OrdemDeServicoUncheckedUpdateManyWithoutCriadoPorNestedInput
    ordensAprovadas?: OrdemDeServicoUncheckedUpdateManyWithoutAprovadoPorNestedInput
    pecasCriadas?: PecaUncheckedUpdateManyWithoutCriadoPorNestedInput
    servicosExecutados?: ClienteUncheckedUpdateManyWithoutFuncionariosExecutoresNestedInput
    ordensDeEstoque?: OrdemEstoqueUncheckedUpdateManyWithoutAprovadoPorNestedInput
    funcionariosCriados?: FuncionarioUncheckedUpdateManyWithoutCriadoPorNestedInput
  }

  export type FuncionarioUncheckedUpdateManyWithoutCriadoPorInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    dataDeNascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoFuncionarioFieldUpdateOperationsInput | $Enums.TipoFuncionario
  }

  export type RevisaoCreateManyCarroInput = {
    id?: string
    placaDoCarro: string
    dataDaRevisao: Date | string
    dataDaProximaRevisao?: Date | string | null
    mensagemPredefinida?: string | null
    clienteId?: string | null
  }

  export type RevisaoUpdateWithoutCarroInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneWithoutRevisoesNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutRevisaoNestedInput
  }

  export type RevisaoUncheckedUpdateWithoutCarroInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableStringFieldUpdateOperationsInput | string | null
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutRevisaoNestedInput
  }

  export type RevisaoUncheckedUpdateManyWithoutCarroInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    dataDaRevisao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDaProximaRevisao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mensagemPredefinida?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemDeServicoCreateManyServicoInput = {
    id?: string
    placaDoCarro: string
    servicosPrestados: string
    cpf: string
    valorTotal: number
    dataDeRealizacao: Date | string
    dataDeVencimento: Date | string
    status?: $Enums.StatusOrdem
    clienteId: string
    criadoPorId: string
    aprovado?: boolean
    aprovadoPorId?: string | null
  }

  export type PromocaoCreateManyServicoInput = {
    id?: string
    descricao: string
    desconto: number
  }

  export type OrdemDeServicoUpdateWithoutServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClienteUpdateOneRequiredWithoutOrdensDeServicoNestedInput
    criadoPor?: FuncionarioUpdateOneRequiredWithoutOrdensCriadasNestedInput
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensAprovadasNestedInput
    pecasUsadas?: PecaUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUpdateManyWithoutOrdemDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateWithoutServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    pecasUsadas?: PecaUncheckedUpdateManyWithoutOrdensDeServicoNestedInput
    pagamentos?: OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUncheckedUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromocaoUpdateWithoutServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    notificacoes?: NotificacaoUpdateManyWithoutPromocaoNestedInput
  }

  export type PromocaoUncheckedUpdateWithoutServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutPromocaoNestedInput
  }

  export type PromocaoUncheckedUpdateManyWithoutServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
  }

  export type OrdemDeServicoUpdateWithoutPecasUsadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClienteUpdateOneRequiredWithoutOrdensDeServicoNestedInput
    criadoPor?: FuncionarioUpdateOneRequiredWithoutOrdensCriadasNestedInput
    aprovadoPor?: FuncionarioUpdateOneWithoutOrdensAprovadasNestedInput
    pagamentos?: OrdemServicoPagamentoUpdateManyWithoutOrdemDeServicoNestedInput
    servico?: ServicoUpdateOneWithoutOrdensDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateWithoutPecasUsadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
    pagamentos?: OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoNestedInput
    ordemDeEstoque?: OrdemEstoqueUncheckedUpdateOneWithoutOrdemDeServicoNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutOrdemServicoNestedInput
  }

  export type OrdemDeServicoUncheckedUpdateManyWithoutPecasUsadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    placaDoCarro?: StringFieldUpdateOperationsInput | string
    servicosPrestados?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    valorTotal?: FloatFieldUpdateOperationsInput | number
    dataDeRealizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusOrdemFieldUpdateOperationsInput | $Enums.StatusOrdem
    clienteId?: StringFieldUpdateOperationsInput | string
    criadoPorId?: StringFieldUpdateOperationsInput | string
    aprovado?: BoolFieldUpdateOperationsInput | boolean
    aprovadoPorId?: NullableStringFieldUpdateOperationsInput | string | null
    servicoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemServicoPagamentoCreateManyOrdemDeServicoInput = {
    id?: string
    pagamentoId: string
  }

  export type NotificacaoCreateManyOrdemServicoInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    clienteId: string
    revisaoId?: string | null
    promocaoId?: string | null
  }

  export type PecaUpdateWithoutOrdensDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
    criadoPor?: FuncionarioUpdateOneRequiredWithoutPecasCriadasNestedInput
  }

  export type PecaUncheckedUpdateWithoutOrdensDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
    criadoPorId?: StringFieldUpdateOperationsInput | string
  }

  export type PecaUncheckedUpdateManyWithoutOrdensDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: IntFieldUpdateOperationsInput | number
    criadoPorId?: StringFieldUpdateOperationsInput | string
  }

  export type OrdemServicoPagamentoUpdateWithoutOrdemDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    pagamento?: PagamentoUpdateOneRequiredWithoutOrdensNestedInput
  }

  export type OrdemServicoPagamentoUncheckedUpdateWithoutOrdemDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    pagamentoId?: StringFieldUpdateOperationsInput | string
  }

  export type OrdemServicoPagamentoUncheckedUpdateManyWithoutOrdemDeServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    pagamentoId?: StringFieldUpdateOperationsInput | string
  }

  export type NotificacaoUpdateWithoutOrdemServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutNotificacoesNestedInput
    promocao?: PromocaoUpdateOneWithoutNotificacoesNestedInput
    revisao?: RevisaoUpdateOneWithoutNotificacaoNestedInput
  }

  export type NotificacaoUncheckedUpdateWithoutOrdemServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: StringFieldUpdateOperationsInput | string
    revisaoId?: NullableStringFieldUpdateOperationsInput | string | null
    promocaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificacaoUncheckedUpdateManyWithoutOrdemServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: StringFieldUpdateOperationsInput | string
    revisaoId?: NullableStringFieldUpdateOperationsInput | string | null
    promocaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificacaoCreateManyRevisaoInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    clienteId: string
    ordemServicoId?: string | null
    promocaoId?: string | null
  }

  export type NotificacaoUpdateWithoutRevisaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutNotificacoesNestedInput
    promocao?: PromocaoUpdateOneWithoutNotificacoesNestedInput
    ordemServico?: OrdemDeServicoUpdateOneWithoutNotificacaoNestedInput
  }

  export type NotificacaoUncheckedUpdateWithoutRevisaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: StringFieldUpdateOperationsInput | string
    ordemServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    promocaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificacaoUncheckedUpdateManyWithoutRevisaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: StringFieldUpdateOperationsInput | string
    ordemServicoId?: NullableStringFieldUpdateOperationsInput | string | null
    promocaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrdemServicoPagamentoCreateManyPagamentoInput = {
    id?: string
    ordemDeServicoId: string
  }

  export type OrdemServicoPagamentoUpdateWithoutPagamentoInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServico?: OrdemDeServicoUpdateOneRequiredWithoutPagamentosNestedInput
  }

  export type OrdemServicoPagamentoUncheckedUpdateWithoutPagamentoInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServicoId?: StringFieldUpdateOperationsInput | string
  }

  export type OrdemServicoPagamentoUncheckedUpdateManyWithoutPagamentoInput = {
    id?: StringFieldUpdateOperationsInput | string
    ordemDeServicoId?: StringFieldUpdateOperationsInput | string
  }

  export type NotificacaoCreateManyPromocaoInput = {
    id?: string
    tipo: $Enums.TipoNotificacao
    mensagem: string
    enviadoEm?: Date | string
    clienteId: string
    revisaoId?: string | null
    ordemServicoId?: string | null
  }

  export type NotificacaoUpdateWithoutPromocaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutNotificacoesNestedInput
    revisao?: RevisaoUpdateOneWithoutNotificacaoNestedInput
    ordemServico?: OrdemDeServicoUpdateOneWithoutNotificacaoNestedInput
  }

  export type NotificacaoUncheckedUpdateWithoutPromocaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: StringFieldUpdateOperationsInput | string
    revisaoId?: NullableStringFieldUpdateOperationsInput | string | null
    ordemServicoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificacaoUncheckedUpdateManyWithoutPromocaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoNotificacaoFieldUpdateOperationsInput | $Enums.TipoNotificacao
    mensagem?: StringFieldUpdateOperationsInput | string
    enviadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: StringFieldUpdateOperationsInput | string
    revisaoId?: NullableStringFieldUpdateOperationsInput | string | null
    ordemServicoId?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use ClienteCountOutputTypeDefaultArgs instead
     */
    export type ClienteCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClienteCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FuncionarioCountOutputTypeDefaultArgs instead
     */
    export type FuncionarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncionarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CarroCountOutputTypeDefaultArgs instead
     */
    export type CarroCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CarroCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ServicoCountOutputTypeDefaultArgs instead
     */
    export type ServicoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ServicoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PecaCountOutputTypeDefaultArgs instead
     */
    export type PecaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PecaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrdemDeServicoCountOutputTypeDefaultArgs instead
     */
    export type OrdemDeServicoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrdemDeServicoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RevisaoCountOutputTypeDefaultArgs instead
     */
    export type RevisaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RevisaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PagamentoCountOutputTypeDefaultArgs instead
     */
    export type PagamentoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PagamentoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PromocaoCountOutputTypeDefaultArgs instead
     */
    export type PromocaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PromocaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClienteDefaultArgs instead
     */
    export type ClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClienteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FuncionarioDefaultArgs instead
     */
    export type FuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncionarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CarroDefaultArgs instead
     */
    export type CarroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CarroDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ServicoDefaultArgs instead
     */
    export type ServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ServicoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PecaDefaultArgs instead
     */
    export type PecaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PecaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrdemDeServicoDefaultArgs instead
     */
    export type OrdemDeServicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrdemDeServicoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrdemEstoqueDefaultArgs instead
     */
    export type OrdemEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrdemEstoqueDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RevisaoDefaultArgs instead
     */
    export type RevisaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RevisaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PagamentoDefaultArgs instead
     */
    export type PagamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PagamentoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrdemServicoPagamentoDefaultArgs instead
     */
    export type OrdemServicoPagamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrdemServicoPagamentoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificacaoDefaultArgs instead
     */
    export type NotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PromocaoDefaultArgs instead
     */
    export type PromocaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PromocaoDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}