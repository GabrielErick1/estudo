
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.18.0
 * Query Engine version: 4c784e32044a8a016d99474bd02a3b6123742169
 */
Prisma.prismaVersion = {
  client: "5.18.0",
  engine: "4c784e32044a8a016d99474bd02a3b6123742169"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ClienteScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  telefone: 'telefone',
  email: 'email',
  cpf: 'cpf',
  cnpj: 'cnpj',
  dataDeNascimento: 'dataDeNascimento',
  password: 'password',
  tipo: 'tipo',
  clienteCadastrador: 'clienteCadastrador',
  criadoPorId: 'criadoPorId'
};

exports.Prisma.FuncionarioScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  username: 'username',
  cpf: 'cpf',
  dataDeNascimento: 'dataDeNascimento',
  email: 'email',
  senha: 'senha',
  telefone: 'telefone',
  tipo: 'tipo',
  criadoPorId: 'criadoPorId'
};

exports.Prisma.CarroScalarFieldEnum = {
  id: 'id',
  placa: 'placa',
  modelo: 'modelo',
  ano: 'ano',
  clienteId: 'clienteId'
};

exports.Prisma.ServicoScalarFieldEnum = {
  id: 'id',
  tipoDeServico: 'tipoDeServico',
  valor: 'valor'
};

exports.Prisma.PecaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipo: 'tipo',
  valor: 'valor',
  quantidade: 'quantidade',
  criadoPorId: 'criadoPorId'
};

exports.Prisma.OrdemDeServicoScalarFieldEnum = {
  id: 'id',
  placaDoCarro: 'placaDoCarro',
  servicosPrestados: 'servicosPrestados',
  cpf: 'cpf',
  valorTotal: 'valorTotal',
  dataDeRealizacao: 'dataDeRealizacao',
  dataDeVencimento: 'dataDeVencimento',
  status: 'status',
  clienteId: 'clienteId',
  criadoPorId: 'criadoPorId',
  aprovado: 'aprovado',
  aprovadoPorId: 'aprovadoPorId',
  servicoId: 'servicoId'
};

exports.Prisma.OrdemEstoqueScalarFieldEnum = {
  id: 'id',
  ordemDeServicoId: 'ordemDeServicoId',
  pecaAprovada: 'pecaAprovada',
  mensagem: 'mensagem',
  aprovadoPorId: 'aprovadoPorId'
};

exports.Prisma.RevisaoScalarFieldEnum = {
  id: 'id',
  placaDoCarro: 'placaDoCarro',
  dataDaRevisao: 'dataDaRevisao',
  dataDaProximaRevisao: 'dataDaProximaRevisao',
  mensagemPredefinida: 'mensagemPredefinida',
  carroId: 'carroId',
  clienteId: 'clienteId'
};

exports.Prisma.PagamentoScalarFieldEnum = {
  id: 'id',
  formaDePagamento: 'formaDePagamento'
};

exports.Prisma.OrdemServicoPagamentoScalarFieldEnum = {
  id: 'id',
  ordemDeServicoId: 'ordemDeServicoId',
  pagamentoId: 'pagamentoId'
};

exports.Prisma.NotificacaoScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  mensagem: 'mensagem',
  enviadoEm: 'enviadoEm',
  clienteId: 'clienteId',
  revisaoId: 'revisaoId',
  ordemServicoId: 'ordemServicoId',
  promocaoId: 'promocaoId'
};

exports.Prisma.PromocaoScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  desconto: 'desconto',
  servicoId: 'servicoId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.TipoCliente = exports.$Enums.TipoCliente = {
  COMUM: 'COMUM'
};

exports.TipoFuncionario = exports.$Enums.TipoFuncionario = {
  super_admin: 'super_admin',
  moderador: 'moderador',
  admin: 'admin',
  rh: 'rh',
  estoque: 'estoque',
  funcionario: 'funcionario'
};

exports.StatusOrdem = exports.$Enums.StatusOrdem = {
  EM_ANDAMENTO: 'EM_ANDAMENTO',
  CONCLUIDA: 'CONCLUIDA',
  CANCELADA: 'CANCELADA'
};

exports.FormaPagamento = exports.$Enums.FormaPagamento = {
  DINHEIRO: 'DINHEIRO',
  CARTAO: 'CARTAO',
  PIX: 'PIX'
};

exports.TipoNotificacao = exports.$Enums.TipoNotificacao = {
  REVISAO: 'REVISAO',
  ORDEM_SERVICO: 'ORDEM_SERVICO',
  PROMOCAO: 'PROMOCAO'
};

exports.Prisma.ModelName = {
  Cliente: 'Cliente',
  Funcionario: 'Funcionario',
  Carro: 'Carro',
  Servico: 'Servico',
  Peca: 'Peca',
  OrdemDeServico: 'OrdemDeServico',
  OrdemEstoque: 'OrdemEstoque',
  Revisao: 'Revisao',
  Pagamento: 'Pagamento',
  OrdemServicoPagamento: 'OrdemServicoPagamento',
  Notificacao: 'Notificacao',
  Promocao: 'Promocao'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
